"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[5167],{4960:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var i=n(83117),r=(n(67294),n(3905));const o={id:"decrease-liquidity",title:"Decrease Liquidity",sidebar_position:4},a=void 0,s={unversionedId:"contracts/v3/guides/providing-liquidity/decrease-liquidity",id:"contracts/v3/guides/providing-liquidity/decrease-liquidity",title:"Decrease Liquidity",description:"Make sure to go through the Setting Up Your Contract before continuing to this section",source:"@site/docs/contracts/v3/guides/providing-liquidity/decrease-liquidity.md",sourceDirName:"contracts/v3/guides/providing-liquidity",slug:"/contracts/v3/guides/providing-liquidity/decrease-liquidity",permalink:"/docs/contracts/v3/guides/providing-liquidity/decrease-liquidity",editUrl:"https://github.com/hoffms/docs/tree/main/docs/contracts/v3/guides/providing-liquidity/decrease-liquidity.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"decrease-liquidity",title:"Decrease Liquidity",sidebar_position:4},sidebar:"contractsSidebar",previous:{title:"Collecting Fees",permalink:"/docs/contracts/v3/guides/providing-liquidity/collect-fees"},next:{title:"Increase Liquidity",permalink:"/docs/contracts/v3/guides/providing-liquidity/increase-liquidity"}},d={},u=[{value:"Decrease Liquidity",id:"decrease-liquidity",level:2},{value:"Sending Fees To The Calling Address",id:"sending-fees-to-the-calling-address",level:2}],l={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Make sure to go through the ",(0,r.kt)("a",{parentName:"p",href:"/docs/contracts/v3/guides/providing-liquidity/setting-up"},"Setting Up Your Contract")," before continuing to this section"),(0,r.kt)("p",null,"Here we decrease the liquidity of our position without withdrawing all of it."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"This example assumes the contract already has possession of the position NFT, and requires the calling address to be the same address that deposited the position NFT to our contract.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In production, ",(0,r.kt)("inlineCode",{parentName:"p"},"amount0Min")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"amount1Min")," should be adjusted to create slippage protections."))),(0,r.kt)("h2",{id:"decrease-liquidity"},"Decrease Liquidity"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"    /// @notice A function that decreases the current liquidity by half. An example to show how to call the `decreaseLiquidity` function defined in periphery.\n    /// @param tokenId The id of the erc721 token\n    /// @return amount0 The amount received back in token0\n    /// @return amount1 The amount returned back in token1\n    function decreaseLiquidityInHalf(uint256 tokenId) external returns (uint256 amount0, uint256 amount1) {\n        // caller must be the owner of the NFT\n        require(msg.sender == deposits[tokenId].owner, 'Not the owner');\n        // get liquidity data for tokenId\n        uint128 liquidity = deposits[tokenId].liquidity;\n        uint128 halfLiquidity = liquidity / 2;\n\n        // amount0Min and amount1Min are price slippage checks\n        // if the amount received after burning is not greater than these minimums, transaction will fail\n        INonfungiblePositionManager.DecreaseLiquidityParams memory params =\n            INonfungiblePositionManager.DecreaseLiquidityParams({\n                tokenId: tokenId,\n                liquidity: halfLiquidity,\n                amount0Min: 0,\n                amount1Min: 0,\n                deadline: block.timestamp\n            });\n\n        nonfungiblePositionManager.decreaseLiquidity(params);\n\n        (amount0, amount1) = nonfungiblePositionManager.collect(\n            INonfungiblePositionManager.CollectParams({\n                tokenId: tokenId,\n                recipient: address(this),\n                amount0Max: type(uint128).max,\n                amount1Max: type(uint128).max\n            })\n        );\n\n        //send liquidity back to owner\n        _sendToOwner(tokenId, amount0, amount1);\n    }\n")),(0,r.kt)("h2",{id:"sending-fees-to-the-calling-address"},"Sending Fees To The Calling Address"),(0,r.kt)("p",null,"This internal helper function sends any tokens, in the form of fees or position tokens, to the owner of an NFT."),(0,r.kt)("p",null,"In ",(0,r.kt)("inlineCode",{parentName:"p"},"_sendToOwner"),", we pass the amount of fees due, previously populated in the last function, as arguments to ",(0,r.kt)("inlineCode",{parentName:"p"},"safeTransfer"),", which transfers the fees to ",(0,r.kt)("inlineCode",{parentName:"p"},"owner"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"    /// @notice Transfers funds to owner of NFT\n    /// @param tokenId The id of the erc721\n    /// @param amount0 The amount of token0\n    /// @param amount1 The amount of token1\n    function _sendToOwner(\n        uint256 tokenId,\n        uint256 amount0,\n        uint256 amount1\n    ) internal {\n        // get owner of contract\n        address owner = deposits[tokenId].owner;\n\n        address token0 = deposits[tokenId].token0;\n        address token1 = deposits[tokenId].token1;\n        // send collected fees to owner\n        TransferHelper.safeTransfer(token0, owner, amount0);\n        TransferHelper.safeTransfer(token1, owner, amount1);\n    }\n")))}c.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=i.createContext({}),u=function(e){var t=i.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return i.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,f=p["".concat(d,".").concat(m)]||p[m]||c[m]||o;return n?i.createElement(f,a(a({ref:t},l),{},{components:n})):i.createElement(f,a({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=p;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);