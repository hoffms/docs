"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[6158],{64262:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(83117),o=(n(67294),n(3905));const a={title:"Access msg.sender Inside a Hook"},s=void 0,i={unversionedId:"contracts/v4/guides/accessing-msg.sender-using-hook",id:"contracts/v4/guides/accessing-msg.sender-using-hook",title:"Access msg.sender Inside a Hook",description:"Introduction",source:"@site/docs/contracts/v4/guides/14-accessing-msg.sender-using-hook.mdx",sourceDirName:"contracts/v4/guides",slug:"/contracts/v4/guides/accessing-msg.sender-using-hook",permalink:"/docs/contracts/v4/guides/accessing-msg.sender-using-hook",editUrl:"https://github.com/hoffms/docs/tree/main/docs/contracts/v4/guides/14-accessing-msg.sender-using-hook.mdx",tags:[],version:"current",sidebarPosition:14,frontMatter:{title:"Access msg.sender Inside a Hook"},sidebar:"contractsSidebar",previous:{title:"Flash Accounting",permalink:"/docs/contracts/v4/guides/flash-accounting"},next:{title:"Custom Error Selectors",permalink:"/docs/contracts/v4/reference/errors/"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Securely Retrieving the Original <code>msg.sender</code> address in a Hook",id:"securely-retrieving-the-original-msgsender-address-in-a-hook",level:2},{value:"Hook Overview",id:"hook-overview",level:2},{value:"Implement the Hook",id:"implement-the-hook",level:2},{value:"Define an Interface for Trusted Routers",id:"define-an-interface-for-trusted-routers",level:2},{value:"Store a List of Trusted Routers",id:"store-a-list-of-trusted-routers",level:2},{value:"Implementing <code>beforeSwap</code>",id:"implementing-beforeswap",level:2}],d=(u="Ins",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var u;const p={toc:c};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"In Uniswap v4, when a hook is triggered, ",(0,o.kt)("inlineCode",{parentName:"p"},"msg.sender")," is always the PoolManager contract, not the EOA or smart-account that initiated the swap. This behavior occurs because the PoolManager acts as an intermediary, executing the swap logic on behalf of the user."),(0,o.kt)("h2",{id:"securely-retrieving-the-original-msgsender-address-in-a-hook"},"Securely Retrieving the Original ",(0,o.kt)("inlineCode",{parentName:"h2"},"msg.sender")," address in a Hook"),(0,o.kt)("p",null,"Since a smart contract executes the swap, the ",(0,o.kt)("inlineCode",{parentName:"p"},"sender")," parameter passed to ",(0,o.kt)("inlineCode",{parentName:"p"},"beforeSwap()")," represents the caller of ",(0,o.kt)("inlineCode",{parentName:"p"},"PoolManager.swap()"),"."),(0,o.kt)("p",null,"This is typically a router contract, such as a custom swap router or the Universal Router. The challenge is distinguishing between different routers and securely obtaining the original msg.sender. "),(0,o.kt)("p",null,"This guide explains how to securely retrieve the EOA or smart account in a hook."),(0,o.kt)("h2",{id:"hook-overview"},"Hook Overview"),(0,o.kt)("p",null,"To identify the true sender of a swap:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Maintain a trusted list of swap routers in the hook."),(0,o.kt)("li",{parentName:"ul"},"When a swap is initiated, check if the sender is a trusted router."),(0,o.kt)("li",{parentName:"ul"},"If trusted, call ",(0,o.kt)("inlineCode",{parentName:"li"},"msgSender()")," view function on the router to retrieve the original EOA.")),(0,o.kt)("h1",{id:"implementing-a-trusted-router-mechanism"},"Implementing a Trusted Router Mechanism"),(0,o.kt)("h2",{id:"implement-the-hook"},"Implement the Hook"),(0,o.kt)("p",null,"Lets start with a simple hook that wants to access ",(0,o.kt)("inlineCode",{parentName:"p"},"msg.sender")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"beforeSwap()")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n// Import statements for a hook\n\ncontract AccessSenderHook is BaseHook {\n    // constructor, state, interface, etc\n    // ...\n\n    function _beforeSwap(address sender, PoolKey calldata, IPoolManager.SwapParams calldata, bytes calldata)\n        internal\n        override\n        returns (bytes4, BeforeSwapDelta, uint24)\n    {\n        // read msg.sender\n        // ...\n\n        return (BaseHook.beforeSwap.selector, BeforeSwapDelta.wrap(0), 0);\n    }\n\n    ...\n}\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://docs.uniswap.org/contracts/v4/guides/hooks/your-first-hook#setting-things-up"},"Refer to Building your first hook"))),(0,o.kt)("h2",{id:"define-an-interface-for-trusted-routers"},"Define an Interface for Trusted Routers"),(0,o.kt)("p",null,"Each trusted router should implement a standard function that exposes the original ",(0,o.kt)("inlineCode",{parentName:"p"},"msg.sender")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"interface IMsgSender {\n    function msgSender() external view returns (address);\n}\n")),(0,o.kt)("p",null,"This function allows hooks to query the router for the actual sender."),(0,o.kt)("h2",{id:"store-a-list-of-trusted-routers"},"Store a List of Trusted Routers"),(0,o.kt)("p",null,"The hook should keep track of which router contracts can be trusted to return a valid ",(0,o.kt)("inlineCode",{parentName:"p"},"msgSender()")),(0,o.kt)("p",null,"This can be done with the help of add and remove functions implemented in the hook."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"mapping(address swapRouter => bool approved) public verifiedRouters;\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},(0,o.kt)(d,{mdxType:"Ins"},"NOTE:"))," Make sure you include an address mapping in your hook for the routers before adding the functions.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},'function addRouter(address _router) external {\n    verifiedRouters[_router] = true;\n    console.log("Router added:", _router);\n}\n')),(0,o.kt)("p",null,"This function allows hook to add the router to the list of trusted routers."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},'function removeRouter(address _router) external {\n    verifiedRouters[_router] = false;\n    console.log("Router removed:", _router);\n}\n')),(0,o.kt)("p",null,"This function allows the hook to remove the router from the list of trusted routers if it's no longer needed."),(0,o.kt)("h2",{id:"implementing-beforeswap"},"Implementing ",(0,o.kt)("inlineCode",{parentName:"h2"},"beforeSwap")),(0,o.kt)("p",null,"Now that we have implemented a basic hook and have added necessary functions, let us implement the beforeSwap function:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},'function _beforeSwap(address sender, PoolKey calldata, IPoolManager.SwapParams calldata, bytes calldata)\n    internal\n    override\n    returns (bytes4, BeforeSwapDelta, uint24)\n{\n    try IMsgSender(sender).msgSender() returns (address swapper) {\n        console.log("Swap initiated by account:", swapper);\n    } catch {\n        revert("Router does not implement msgSender()");\n    }\n\n    return (BaseHook.beforeSwap.selector, BeforeSwapDelta.wrap(0), 0);\n}\n')),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"While developing, make sure that you verify the contracts are valid before adding them to the list of trusted routers."))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Here are some examples of trusted routers:")),(0,o.kt)("ul",{parentName:"blockquote"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Uniswap/universal-router/tree/main"},"https://github.com/Uniswap/universal-router/tree/main")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/z0r0z/v4-router"},"https://github.com/z0r0z/v4-router")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Here is the full working code sample:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity="},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {BaseHook} from "v4-periphery/src/utils/BaseHook.sol";\n\nimport {Hooks} from "v4-core/src/libraries/Hooks.sol";\nimport {IPoolManager} from "v4-core/src/interfaces/IPoolManager.sol";\nimport {PoolKey} from "v4-core/src/types/PoolKey.sol";\nimport {PoolId, PoolIdLibrary} from "v4-core/src/types/PoolId.sol";\nimport {BalanceDelta} from "v4-core/src/types/BalanceDelta.sol";\nimport {BeforeSwapDelta, BeforeSwapDeltaLibrary} from "v4-core/src/types/BeforeSwapDelta.sol";\nimport "forge-std/console.sol";\n\ninterface IMsgSender {\n    function msgSender() external view returns (address);\n}\n\ncontract AccessSenderHook is BaseHook {\n\n    constructor(IPoolManager _poolManager) BaseHook(_poolManager) {\n    }\n\n    function _beforeSwap(\n        address sender,\n        PoolKey calldata,\n        IPoolManager.SwapParams calldata,\n        bytes calldata\n    ) internal override returns (bytes4, BeforeSwapDelta, uint24) {\n\n        try IMsgSender(sender).msgSender() returns (address swapper) {\n            console.log("Swap initiated by account:", swapper);\n        } catch {\n            revert("Router does not implement msgSender()");\n        }\n\n        return (BaseHook.beforeSwap.selector, BeforeSwapDelta.wrap(0), 0);\n    }\n\n    function getHookPermissions()\n        public\n        pure\n        override\n        returns (Hooks.Permissions memory)\n    {\n        return\n            Hooks.Permissions({\n                beforeInitialize: false,\n                afterInitialize: false,\n                beforeAddLiquidity: false,\n                afterAddLiquidity: false,\n                beforeRemoveLiquidity: false,\n                afterRemoveLiquidity: false,\n                beforeSwap: true,\n                afterSwap: false,\n                beforeDonate: false,\n                afterDonate: false,\n                beforeSwapReturnDelta: false,\n                afterSwapReturnDelta: false,\n                afterAddLiquidityReturnDelta: false,\n                afterRemoveLiquidityReturnDelta: false\n            });\n    }\n    \n}\n')))}m.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||a;return n?r.createElement(f,s(s({ref:t},d),{},{components:n})):r.createElement(f,s({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);