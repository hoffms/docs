"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[8302],{84784:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var n=r(83117),a=(r(67294),r(3905));const i={},l="Notifier",o={unversionedId:"contracts/v4/reference/periphery/base/Notifier",id:"contracts/v4/reference/periphery/base/Notifier",title:"Notifier",description:"Git Source - Generated with forge doc",source:"@site/docs/contracts/v4/reference/periphery/base/Notifier.md",sourceDirName:"contracts/v4/reference/periphery/base",slug:"/contracts/v4/reference/periphery/base/Notifier",permalink:"/docs/contracts/v4/reference/periphery/base/Notifier",editUrl:"https://github.com/hoffms/docs/tree/main/docs/contracts/v4/reference/periphery/base/Notifier.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"NativeWrapper",permalink:"/docs/contracts/v4/reference/periphery/base/NativeWrapper"},next:{title:"Permit2Forwarder",permalink:"/docs/contracts/v4/reference/periphery/base/Permit2Forwarder"}},s={},u=[{value:"State Variables",id:"state-variables",level:2},{value:"NO_SUBSCRIBER",id:"no_subscriber",level:3},{value:"unsubscribeGasLimit",id:"unsubscribegaslimit",level:3},{value:"subscriber",id:"subscriber",level:3},{value:"Functions",id:"functions",level:2},{value:"constructor",id:"constructor",level:3},{value:"onlyIfApproved",id:"onlyifapproved",level:3},{value:"onlyIfPoolManagerLocked",id:"onlyifpoolmanagerlocked",level:3},{value:"_setUnsubscribed",id:"_setunsubscribed",level:3},{value:"_setSubscribed",id:"_setsubscribed",level:3},{value:"subscribe",id:"subscribe",level:3},{value:"unsubscribe",id:"unsubscribe",level:3},{value:"_unsubscribe",id:"_unsubscribe",level:3},{value:"_removeSubscriberAndNotifyBurn",id:"_removesubscriberandnotifyburn",level:3},{value:"_notifyModifyLiquidity",id:"_notifymodifyliquidity",level:3},{value:"_call",id:"_call",level:3}],c={toc:u};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"notifier"},"Notifier"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-periphery/blob/ea2bf2e1ba6863bb809fc2ff791744f308c4a26d/src/base/Notifier.sol"},"Git Source")," - Generated with ",(0,a.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-doc"},"forge doc")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Inherits:"),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/periphery/interfaces/INotifier"},"INotifier")),(0,a.kt)("p",null,"Notifier is used to opt in to sending updates to external contracts about position modifications or transfers"),(0,a.kt)("h2",{id:"state-variables"},"State Variables"),(0,a.kt)("h3",{id:"no_subscriber"},"NO_SUBSCRIBER"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"ISubscriber private constant NO_SUBSCRIBER = ISubscriber(address(0));\n")),(0,a.kt)("h3",{id:"unsubscribegaslimit"},"unsubscribeGasLimit"),(0,a.kt)("p",null,"Returns and determines the maximum allowable gas-used for notifying unsubscribe"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 public immutable unsubscribeGasLimit;\n")),(0,a.kt)("h3",{id:"subscriber"},"subscriber"),(0,a.kt)("p",null,"Returns the subscriber for a respective position"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 tokenId => ISubscriber subscriber) public subscriber;\n")),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("h3",{id:"constructor"},"constructor"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor(uint256 _unsubscribeGasLimit);\n")),(0,a.kt)("h3",{id:"onlyifapproved"},"onlyIfApproved"),(0,a.kt)("p",null,"Only allow callers that are approved as spenders or operators of the tokenId"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"to be implemented by the parent contract (PositionManager)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyIfApproved(address caller, uint256 tokenId) virtual;\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"caller")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"address")),(0,a.kt)("td",{parentName:"tr",align:null},"the address of the caller")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"uint256")),(0,a.kt)("td",{parentName:"tr",align:null},"the tokenId of the position")))),(0,a.kt)("h3",{id:"onlyifpoolmanagerlocked"},"onlyIfPoolManagerLocked"),(0,a.kt)("p",null,"Enforces that the PoolManager is locked."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyIfPoolManagerLocked() virtual;\n")),(0,a.kt)("h3",{id:"_setunsubscribed"},"_setUnsubscribed"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function _setUnsubscribed(uint256 tokenId) internal virtual;\n")),(0,a.kt)("h3",{id:"_setsubscribed"},"_setSubscribed"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function _setSubscribed(uint256 tokenId) internal virtual;\n")),(0,a.kt)("h3",{id:"subscribe"},"subscribe"),(0,a.kt)("p",null,"Enables the subscriber to receive notifications for a respective position"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Calling subscribe when a position is already subscribed will revert")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function subscribe(uint256 tokenId, address newSubscriber, bytes calldata data)\n    external\n    payable\n    onlyIfPoolManagerLocked\n    onlyIfApproved(msg.sender, tokenId);\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"uint256")),(0,a.kt)("td",{parentName:"tr",align:null},"the ERC721 tokenId")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"newSubscriber")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"address")),(0,a.kt)("td",{parentName:"tr",align:null},"the address of the subscriber contract")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"data")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"bytes")),(0,a.kt)("td",{parentName:"tr",align:null},"caller-provided data that's forwarded to the subscriber contract")))),(0,a.kt)("h3",{id:"unsubscribe"},"unsubscribe"),(0,a.kt)("p",null,"Removes the subscriber from receiving notifications for a respective position"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Callers must specify a high gas limit (remaining gas should be higher than unsubscriberGasLimit) such that the subscriber can be notified")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function unsubscribe(uint256 tokenId) external payable onlyIfPoolManagerLocked onlyIfApproved(msg.sender, tokenId);\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"uint256")),(0,a.kt)("td",{parentName:"tr",align:null},"the ERC721 tokenId")))),(0,a.kt)("h3",{id:"_unsubscribe"},"_unsubscribe"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function _unsubscribe(uint256 tokenId) internal;\n")),(0,a.kt)("h3",{id:"_removesubscriberandnotifyburn"},"_removeSubscriberAndNotifyBurn"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"note this function also deletes the subscriber address from the mapping")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function _removeSubscriberAndNotifyBurn(\n    uint256 tokenId,\n    address owner,\n    PositionInfo info,\n    uint256 liquidity,\n    BalanceDelta feesAccrued\n) internal;\n")),(0,a.kt)("h3",{id:"_notifymodifyliquidity"},"_notifyModifyLiquidity"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function _notifyModifyLiquidity(uint256 tokenId, int256 liquidityChange, BalanceDelta feesAccrued) internal;\n")),(0,a.kt)("h3",{id:"_call"},"_call"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function _call(address target, bytes memory encodedCall) internal returns (bool success);\n")))}d.isMDXComponent=!0},3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>b});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(r),b=a,m=p["".concat(s,".").concat(b)]||p[b]||d[b]||i;return r?n.createElement(m,l(l({ref:t},c),{},{components:r})):n.createElement(m,l({ref:t},c))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"}}]);