"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[2599],{27664:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var a=r(83117),n=(r(67294),r(3905));const o={},c="BeforeSwapDelta",l={unversionedId:"contracts/v4/reference/core/types/BeforeSwapDelta",id:"contracts/v4/reference/core/types/BeforeSwapDelta",title:"BeforeSwapDelta",description:"Git Source - Generated with forge doc",source:"@site/docs/contracts/v4/reference/core/types/BeforeSwapDelta.md",sourceDirName:"contracts/v4/reference/core/types",slug:"/contracts/v4/reference/core/types/BeforeSwapDelta",permalink:"/docs/contracts/v4/reference/core/types/BeforeSwapDelta",editUrl:"https://github.com/hoffms/docs/tree/main/docs/contracts/v4/reference/core/types/BeforeSwapDelta.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"BalanceDelta",permalink:"/docs/contracts/v4/reference/core/types/BalanceDelta"},next:{title:"Currency",permalink:"/docs/contracts/v4/reference/core/types/Currency"}},p={},i=[{value:"State Variables",id:"state-variables",level:2},{value:"ZERO_DELTA",id:"zero_delta",level:3},{value:"Functions",id:"functions",level:2},{value:"getSpecifiedDelta",id:"getspecifieddelta",level:3},{value:"getUnspecifiedDelta",id:"getunspecifieddelta",level:3}],s={toc:i};function f(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"beforeswapdelta"},"BeforeSwapDelta"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-core/blob/80311e34080fee64b6fc6c916e9a51a437d0e482/src/types/BeforeSwapDelta.sol"},"Git Source")," - Generated with ",(0,n.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-doc"},"forge doc")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"type BeforeSwapDelta is int256;\n")),(0,n.kt)("h1",{id:"beforeswapdeltalibrary"},"BeforeSwapDeltaLibrary"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-core/blob/80311e34080fee64b6fc6c916e9a51a437d0e482/src/types/BeforeSwapDelta.sol"},"Git Source")),(0,n.kt)("p",null,"Library for getting the specified and unspecified deltas from the BeforeSwapDelta type"),(0,n.kt)("h2",{id:"state-variables"},"State Variables"),(0,n.kt)("h3",{id:"zero_delta"},"ZERO_DELTA"),(0,n.kt)("p",null,"A BeforeSwapDelta of 0"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"BeforeSwapDelta public constant ZERO_DELTA = BeforeSwapDelta.wrap(0);\n")),(0,n.kt)("h2",{id:"functions"},"Functions"),(0,n.kt)("h3",{id:"getspecifieddelta"},"getSpecifiedDelta"),(0,n.kt)("p",null,"extracts int128 from the upper 128 bits of the BeforeSwapDelta\nreturned by beforeSwap"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function getSpecifiedDelta(BeforeSwapDelta delta) internal pure returns (int128 deltaSpecified);\n")),(0,n.kt)("h3",{id:"getunspecifieddelta"},"getUnspecifiedDelta"),(0,n.kt)("p",null,"extracts int128 from the lower 128 bits of the BeforeSwapDelta\nreturned by beforeSwap and afterSwap"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function getUnspecifiedDelta(BeforeSwapDelta delta) internal pure returns (int128 deltaUnspecified);\n")),(0,n.kt)("h1",{id:"tobeforeswapdelta"},"toBeforeSwapDelta"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-core/blob/80311e34080fee64b6fc6c916e9a51a437d0e482/src/types/BeforeSwapDelta.sol"},"Git Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function toBeforeSwapDelta(int128 deltaSpecified, int128 deltaUnspecified)\n    pure\n    returns (BeforeSwapDelta beforeSwapDelta);\n")))}f.isMDXComponent=!0},3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),i=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},s=function(e){var t=i(e.components);return a.createElement(p.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=i(r),d=n,y=u["".concat(p,".").concat(d)]||u[d]||f[d]||o;return r?a.createElement(y,c(c({ref:t},s),{},{components:r})):a.createElement(y,c({ref:t},s))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,c=new Array(o);c[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var i=2;i<o;i++)c[i]=r[i];return a.createElement.apply(null,c)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);