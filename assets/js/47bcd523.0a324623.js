"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[22202],{21813:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=r(83117),n=(r(67294),r(3905));const i={},l=void 0,o={unversionedId:"contracts/v3/reference/core/libraries/TickMath",id:"contracts/v3/reference/core/libraries/TickMath",title:"TickMath",description:"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports",source:"@site/docs/contracts/v3/reference/core/libraries/TickMath.md",sourceDirName:"contracts/v3/reference/core/libraries",slug:"/contracts/v3/reference/core/libraries/TickMath",permalink:"/docs/contracts/v3/reference/core/libraries/TickMath",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/contracts/v3/reference/core/libraries/TickMath.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"TickBitmap",permalink:"/docs/contracts/v3/reference/core/libraries/TickBitmap"},next:{title:"TransferHelper",permalink:"/docs/contracts/v3/reference/core/libraries/TransferHelper"}},c={},s=[{value:"Functions",id:"functions",level:2},{value:"getSqrtRatioAtTick",id:"getsqrtratioattick",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Return Values:",id:"return-values",level:4},{value:"getTickAtSqrtRatio",id:"gettickatsqrtratio",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"Return Values:",id:"return-values-1",level:4}],p={toc:s};function u(t){let{components:e,...r}=t;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\nprices between 2",(0,n.kt)("strong",{parentName:"p"},"-128 and 2"),"128"),(0,n.kt)("h2",{id:"functions"},"Functions"),(0,n.kt)("h3",{id:"getsqrtratioattick"},"getSqrtRatioAtTick"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getSqrtRatioAtTick(\n    int24 tick\n  ) internal pure returns (uint160 sqrtPriceX96)\n")),(0,n.kt)("p",null,"Calculates sqrt(1.0001^tick) ","*"," 2^96"),(0,n.kt)("p",null,"Throws if |tick| > max tick"),(0,n.kt)("h4",{id:"parameters"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"tick")),(0,n.kt)("td",{parentName:"tr",align:"left"},"int24"),(0,n.kt)("td",{parentName:"tr",align:"left"},"The input tick for the above formula")))),(0,n.kt)("h4",{id:"return-values"},"Return Values:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"sqrtPriceX96")),(0,n.kt)("td",{parentName:"tr",align:"left"},"uint160"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)")))),(0,n.kt)("p",null,"at the given tick"),(0,n.kt)("h3",{id:"gettickatsqrtratio"},"getTickAtSqrtRatio"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"  function getTickAtSqrtRatio(\n    uint160 sqrtPriceX96\n  ) internal pure returns (int24 tick)\n")),(0,n.kt)("p",null,"Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio"),(0,n.kt)("p",null,"Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\never return."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"sqrtPriceX96")),(0,n.kt)("td",{parentName:"tr",align:"left"},"uint160"),(0,n.kt)("td",{parentName:"tr",align:"left"},"The sqrt ratio for which to compute the tick as a Q64.96")))),(0,n.kt)("h4",{id:"return-values-1"},"Return Values:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"tick")),(0,n.kt)("td",{parentName:"tr",align:"left"},"int24"),(0,n.kt)("td",{parentName:"tr",align:"left"},"The greatest tick for which the ratio is less than or equal to the input ratio")))))}u.isMDXComponent=!0},3905:(t,e,r)=>{r.d(e,{Zo:()=>p,kt:()=>m});var a=r(67294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function l(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},i=Object.keys(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var c=a.createContext({}),s=function(t){var e=a.useContext(c),r=e;return t&&(r="function"==typeof t?t(e):l(l({},e),t)),r},p=function(t){var e=s(t.components);return a.createElement(c.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,i=t.originalType,c=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),k=s(r),m=n,f=k["".concat(c,".").concat(m)]||k[m]||u[m]||i;return r?a.createElement(f,l(l({ref:e},p),{},{components:r})):a.createElement(f,l({ref:e},p))}));function m(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=r.length,l=new Array(i);l[0]=k;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=t,o.mdxType="string"==typeof t?t:n,l[1]=o;for(var s=2;s<i;s++)l[s]=r[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}k.displayName="MDXCreateElement"}}]);