"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[42350],{32551:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>o});var a=n(83117),r=(n(67294),n(3905));const l={sidebar_position:5},i="Action Parameters",p={unversionedId:"api/parameters/parameters",id:"api/parameters/parameters",title:"Action Parameters",description:"Parameters define the inputs a user provides when executing actions. They control UI generation and validation for each required field.",source:"@site/docs/api/parameters/parameters.md",sourceDirName:"api/parameters",slug:"/api/parameters/",permalink:"/docs/api/parameters/",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/api/parameters/parameters.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"apiSidebar",previous:{title:"Chains",permalink:"/docs/api/chainlogic/chains"}},s={},o=[{value:"Parameter Types",id:"parameter-types",level:2},{value:"StandardParameter",id:"standardparameter",level:3},{value:"SelectParameter",id:"selectparameter",level:3},{value:"RadioParameter",id:"radioparameter",level:3},{value:"Parameter Templates",id:"parameter-templates",level:2},{value:"Available Templates",id:"available-templates",level:3},{value:"Helper Functions",id:"helper-functions",level:2},{value:"Creating Select Parameters",id:"creating-select-parameters",level:3},{value:"Creating Radio Parameters",id:"creating-radio-parameters",level:3},{value:"Validation Properties",id:"validation-properties",level:2},{value:"Text-Based Parameters",id:"text-based-parameters",level:3},{value:"Number-Based Parameters",id:"number-based-parameters",level:3},{value:"Address Parameters",id:"address-parameters",level:3},{value:"Fixed vs Dynamic Values",id:"fixed-vs-dynamic-values",level:2},{value:"Fixed Parameters",id:"fixed-parameters",level:3},{value:"Default Values",id:"default-values",level:3},{value:"Special Values",id:"special-values",level:2},{value:"ABI Type Compatibility",id:"abi-type-compatibility",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Parameter Order",id:"1-parameter-order",level:3},{value:"2. User-Friendly Labels",id:"2-user-friendly-labels",level:3},{value:"3. Provide Helpful Descriptions",id:"3-provide-helpful-descriptions",level:3},{value:"4. Use Templates When Possible",id:"4-use-templates-when-possible",level:3},{value:"5. Validate User Input",id:"5-validate-user-input",level:3},{value:"6. Group Related Options",id:"6-group-related-options",level:3},{value:"Parameter Examples by Use Case",id:"parameter-examples-by-use-case",level:2},{value:"Token Transfer",id:"token-transfer",level:3},{value:"NFT Minting",id:"nft-minting",level:3},{value:"DAO Voting",id:"dao-voting",level:3},{value:"API Form",id:"api-form",level:3}],d={toc:o};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"action-parameters"},"Action Parameters"),(0,r.kt)("p",null,"Parameters define the inputs a user provides when executing actions. They control UI generation and validation for each required field."),(0,r.kt)("h2",{id:"parameter-types"},"Parameter Types"),(0,r.kt)("p",null,"All parameters extend from ",(0,r.kt)("inlineCode",{parentName:"p"},"BaseParameter"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface BaseParameter {\n  name: string; // Parameter identifier (must match ABI/API field)\n  label: string; // Label displayed to user\n  type: string; // Input type\n  required?: boolean; // Is this field mandatory?\n  description?: string; // Help text for the user\n  fixed?: boolean; // Is the value fixed (non-editable)?\n  value?: any; // Default or fixed value\n}\n")),(0,r.kt)("h3",{id:"standardparameter"},"StandardParameter"),(0,r.kt)("p",null,"For common input types like text, numbers, addresses, and booleans:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// Text input\n{\n  name: 'message',\n  label: 'Your Message',\n  type: 'text',\n  required: true,\n  minLength: 5,\n  maxLength: 100,\n  description: 'Enter your message here'\n}\n\n// Number input\n{\n  name: 'amount',\n  label: 'Amount',\n  type: 'number',\n  required: true,\n  min: 0.01,\n  max: 1000\n}\n\n// Address input (with validation)\n{\n  name: 'recipient',\n  label: 'Recipient Address',\n  type: 'address',\n  required: true,\n  pattern: '^0x[a-fA-F0-9]{40}$'\n}\n\n// Boolean checkbox\n{\n  name: 'confirm',\n  label: 'I agree to terms',\n  type: 'boolean',\n  required: true\n}\n\n// Email input (with validation)\n{\n  name: 'email',\n  label: 'Email Address',\n  type: 'email',\n  required: true,\n  pattern: '^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$'\n}\n\n// Large text input\n{\n  name: 'description',\n  label: 'Description',\n  type: 'textarea',\n  required: false,\n  maxLength: 500\n}\n")),(0,r.kt)("h3",{id:"selectparameter"},"SelectParameter"),(0,r.kt)("p",null,"For dropdown selections:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  name: 'token',\n  label: 'Select Token',\n  type: 'select',\n  required: true,\n  options: [\n    {\n      label: 'USDC',\n      value: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n      description: 'USD Coin'\n    },\n    {\n      label: 'USDT',\n      value: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n      description: 'Tether USD'\n    },\n    {\n      label: 'DAI',\n      value: '0x6B175474E89094C44Da98b954EedeAC495271d0F',\n      description: 'Dai Stablecoin'\n    }\n  ]\n}\n")),(0,r.kt)("h3",{id:"radioparameter"},"RadioParameter"),(0,r.kt)("p",null,"For radio button groups:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  name: 'priority',\n  label: 'Priority Level',\n  type: 'radio',\n  required: true,\n  options: [\n    {\n      label: 'Low',\n      value: 'low',\n      description: 'Standard processing time'\n    },\n    {\n      label: 'Medium',\n      value: 'medium',\n      description: 'Faster processing'\n    },\n    {\n      label: 'High',\n      value: 'high',\n      description: 'Priority processing'\n    }\n  ]\n}\n")),(0,r.kt)("h2",{id:"parameter-templates"},"Parameter Templates"),(0,r.kt)("p",null,"Use predefined templates for common parameter types:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { PARAM_TEMPLATES, createParameter } from '@sherrylinks/sdk';\n\n// Address parameter\nconst recipientParam = createParameter(PARAM_TEMPLATES.ADDRESS, {\n  name: 'recipient',\n  label: 'Destination Address',\n  description: 'Where to send the tokens',\n});\n\n// Amount parameter\nconst amountParam = createParameter(PARAM_TEMPLATES.AMOUNT, {\n  name: 'transferAmount',\n  label: 'Amount to Send',\n  min: 0.01,\n  max: 1000,\n});\n\n// Email parameter\nconst emailParam = createParameter(PARAM_TEMPLATES.EMAIL, {\n  name: 'userEmail',\n  label: 'Your Email Address',\n});\n\n// Yes/No selection\nconst confirmParam = createParameter(PARAM_TEMPLATES.YES_NO, {\n  name: 'confirmation',\n  label: 'Confirm this action?',\n});\n\n// Token selection\nconst tokenParam = createParameter(PARAM_TEMPLATES.TOKEN_SELECT, {\n  name: 'selectedToken',\n  label: 'Choose Token',\n});\n")),(0,r.kt)("h3",{id:"available-templates"},"Available Templates"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Template"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ADDRESS")),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Ethereum address input with validation")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"AMOUNT")),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"Numeric amount for transfers")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TOKEN_AMOUNT")),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"Token amount with decimal support")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"INTEGER")),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer-only number input")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"EMAIL")),(0,r.kt)("td",{parentName:"tr",align:null},"email"),(0,r.kt)("td",{parentName:"tr",align:null},"Email address with validation")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TEXT")),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"Basic text input")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TEXTAREA")),(0,r.kt)("td",{parentName:"tr",align:null},"textarea"),(0,r.kt)("td",{parentName:"tr",align:null},"Multi-line text input")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"BOOLEAN")),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean checkbox")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"YES_NO")),(0,r.kt)("td",{parentName:"tr",align:null},"radio"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes/No radio selection")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TOKEN_SELECT")),(0,r.kt)("td",{parentName:"tr",align:null},"select"),(0,r.kt)("td",{parentName:"tr",align:null},"Common token dropdown")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CHAIN_SELECT")),(0,r.kt)("td",{parentName:"tr",align:null},"select"),(0,r.kt)("td",{parentName:"tr",align:null},"Blockchain selection")))),(0,r.kt)("h2",{id:"helper-functions"},"Helper Functions"),(0,r.kt)("h3",{id:"creating-select-parameters"},"Creating Select Parameters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createSelectParam, createSelectOptions } from '@sherrylinks/sdk';\n\n// Simple select parameter\nconst prioritySelect = createSelectParam(\n  'priority',\n  'Priority Level',\n  [\n    { label: 'Low', value: 1 },\n    { label: 'Medium', value: 2 },\n    { label: 'High', value: 3 },\n  ],\n  true, // required\n  'Select the priority for this action',\n);\n\n// Using helper for options\nconst tokenOptions = [\n  { label: 'ETH', value: 'eth', description: 'Ethereum' },\n  { label: 'AVAX', value: 'avax', description: 'Avalanche' },\n];\n\nconst tokenSelect = createSelectParam(\n  'token',\n  'Select Token',\n  createSelectOptions(tokenOptions),\n  true,\n  'Choose the token to use',\n);\n")),(0,r.kt)("h3",{id:"creating-radio-parameters"},"Creating Radio Parameters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createRadioParam } from '@sherrylinks/sdk';\n\nconst confirmRadio = createRadioParam(\n  'confirm',\n  'Confirm Action',\n  [\n    { label: 'Yes, proceed', value: true },\n    { label: 'No, cancel', value: false },\n  ],\n  true,\n  'Please confirm your choice',\n);\n")),(0,r.kt)("h2",{id:"validation-properties"},"Validation Properties"),(0,r.kt)("h3",{id:"text-based-parameters"},"Text-Based Parameters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  name: 'username',\n  label: 'Username',\n  type: 'text',\n  minLength: 3,        // Minimum character length\n  maxLength: 20,       // Maximum character length\n  pattern: '^[a-zA-Z0-9_]+$',  // Regex pattern\n  required: true\n}\n")),(0,r.kt)("h3",{id:"number-based-parameters"},"Number-Based Parameters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  name: 'price',\n  label: 'Price',\n  type: 'number',\n  min: 0.01,          // Minimum value\n  max: 10000,         // Maximum value\n  required: true\n}\n")),(0,r.kt)("h3",{id:"address-parameters"},"Address Parameters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  name: 'wallet',\n  label: 'Wallet Address',\n  type: 'address',\n  pattern: '^0x[a-fA-F0-9]{40}$',  // Custom validation pattern\n  required: true\n}\n")),(0,r.kt)("h2",{id:"fixed-vs-dynamic-values"},"Fixed vs Dynamic Values"),(0,r.kt)("h3",{id:"fixed-parameters"},"Fixed Parameters"),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"fixed: true")," for values that users shouldn't change:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  name: 'contractAddress',\n  label: 'Contract',\n  type: 'address',\n  value: '0x1234567890123456789012345678901234567890',\n  fixed: true,  // User cannot edit this\n  required: true\n}\n")),(0,r.kt)("h3",{id:"default-values"},"Default Values"),(0,r.kt)("p",null,"Provide defaults that users can modify:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  name: 'slippage',\n  label: 'Slippage Tolerance',\n  type: 'number',\n  value: 0.5,  // Default 0.5%\n  min: 0.1,\n  max: 5.0,\n  required: true\n}\n")),(0,r.kt)("h2",{id:"special-values"},"Special Values"),(0,r.kt)("p",null,"Some parameters accept special values:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// 'sender' resolves to the current user's address\n{\n  name: 'recipient',\n  label: 'Send To',\n  type: 'address',\n  value: 'sender',  // Special value\n  required: true\n}\n")),(0,r.kt)("h2",{id:"abi-type-compatibility"},"ABI Type Compatibility"),(0,r.kt)("p",null,"For ",(0,r.kt)("inlineCode",{parentName:"p"},"BlockchainAction")," parameters, the SDK automatically validates compatibility between parameter types and ABI types:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"ABI Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Compatible Parameter Types"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bool")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"bool"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"text"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"email"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"url"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"textarea"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"int256")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"uint256"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"int256"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bytes"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"bytes32")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"text"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"bytes"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"bytes32"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address[]")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"text")," (as JSON array)")))),(0,r.kt)("h2",{id:"best-practices"},"Best Practices"),(0,r.kt)("h3",{id:"1-parameter-order"},"1. Parameter Order"),(0,r.kt)("p",null,"For ",(0,r.kt)("inlineCode",{parentName:"p"},"BlockchainAction"),", parameters ",(0,r.kt)("strong",{parentName:"p"},"must")," be in the same order as the ABI function inputs:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// ABI function: transfer(address to, uint256 amount)\nparams: [\n  // First parameter: 'to' address\n  {\n    name: 'to',\n    label: 'Recipient',\n    type: 'address',\n    required: true,\n  },\n  // Second parameter: 'amount'\n  {\n    name: 'amount',\n    label: 'Amount',\n    type: 'uint256',\n    required: true,\n  },\n];\n")),(0,r.kt)("h3",{id:"2-user-friendly-labels"},"2. User-Friendly Labels"),(0,r.kt)("p",null,"Use clear, descriptive labels:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// Good\n{\n  name: 'spender',\n  label: 'Contract to Approve',\n  description: 'The contract that will spend your tokens'\n}\n\n// Avoid\n{\n  name: 'spender',\n  label: 'Spender'  // Too technical\n}\n")),(0,r.kt)("h3",{id:"3-provide-helpful-descriptions"},"3. Provide Helpful Descriptions"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  name: 'slippage',\n  label: 'Slippage Tolerance',\n  type: 'number',\n  description: 'Maximum price difference you\\'re willing to accept (0.5% recommended)',\n  value: 0.5,\n  min: 0.1,\n  max: 5.0\n}\n")),(0,r.kt)("h3",{id:"4-use-templates-when-possible"},"4. Use Templates When Possible"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// Use templates for consistency\ncreateParameter(PARAM_TEMPLATES.ADDRESS, {\n  name: 'recipient',\n  label: 'Send To'\n});\n\n// Instead of manually defining\n{\n  name: 'recipient',\n  label: 'Send To',\n  type: 'address',\n  required: true,\n  pattern: '^0x[a-fA-F0-9]{40}\n}\n")),(0,r.kt)("h3",{id:"5-validate-user-input"},"5. Validate User Input"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  name: 'tokenAmount',\n  label: 'Token Amount',\n  type: 'number',\n  required: true,\n  min: 0.000001,      // Minimum viable amount\n  max: 1000000,       // Reasonable maximum\n  description: 'Amount must be between 0.000001 and 1,000,000'\n}\n")),(0,r.kt)("h3",{id:"6-group-related-options"},"6. Group Related Options"),(0,r.kt)("p",null,"For select/radio parameters, organize options logically:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  name: 'network',\n  label: 'Network',\n  type: 'select',\n  required: true,\n  options: [\n    // Mainnets first\n    { label: 'Ethereum Mainnet', value: 'ethereum' },\n    { label: 'Avalanche C-Chain', value: 'avalanche' },\n    { label: 'Celo Mainnet', value: 'celo' },\n    // Then testnets\n    { label: 'Avalanche Fuji (Testnet)', value: 'fuji' },\n    { label: 'Celo Alfajores (Testnet)', value: 'alfajores' }\n  ]\n}\n")),(0,r.kt)("h2",{id:"parameter-examples-by-use-case"},"Parameter Examples by Use Case"),(0,r.kt)("h3",{id:"token-transfer"},"Token Transfer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const transferParams = [\n  createParameter(PARAM_TEMPLATES.ADDRESS, {\n    name: 'to',\n    label: 'Recipient Address',\n  }),\n  createParameter(PARAM_TEMPLATES.TOKEN_AMOUNT, {\n    name: 'amount',\n    label: 'Amount to Send',\n    min: 0.000001,\n  }),\n];\n")),(0,r.kt)("h3",{id:"nft-minting"},"NFT Minting"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const mintParams = [\n  createParameter(PARAM_TEMPLATES.ADDRESS, {\n    name: 'to',\n    label: 'Mint To Address',\n    value: 'sender', // Default to current user\n  }),\n  {\n    name: 'quantity',\n    label: 'Quantity',\n    type: 'select',\n    required: true,\n    options: [\n      { label: '1 NFT', value: 1 },\n      { label: '3 NFTs', value: 3 },\n      { label: '5 NFTs', value: 5 },\n    ],\n  },\n];\n")),(0,r.kt)("h3",{id:"dao-voting"},"DAO Voting"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const voteParams = [\n  createParameter(PARAM_TEMPLATES.INTEGER, {\n    name: 'proposalId',\n    label: 'Proposal ID',\n  }),\n  {\n    name: 'support',\n    label: 'Your Vote',\n    type: 'radio',\n    required: true,\n    options: [\n      { label: 'Yes - Support this proposal', value: true },\n      { label: 'No - Oppose this proposal', value: false },\n    ],\n  },\n];\n")),(0,r.kt)("h3",{id:"api-form"},"API Form"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const formParams = [\n  createParameter(PARAM_TEMPLATES.EMAIL, {\n    name: 'email',\n    label: 'Email Address',\n  }),\n  {\n    name: 'feedback',\n    label: 'Your Feedback',\n    type: 'textarea',\n    required: true,\n    maxLength: 1000,\n    description: 'Tell us what you think',\n  },\n  {\n    name: 'rating',\n    label: 'Rating',\n    type: 'select',\n    required: true,\n    options: [\n      { label: '\u2b50 Poor', value: 1 },\n      { label: '\u2b50\u2b50 Fair', value: 2 },\n      { label: '\u2b50\u2b50\u2b50 Good', value: 3 },\n      { label: '\u2b50\u2b50\u2b50\u2b50 Very Good', value: 4 },\n      { label: '\u2b50\u2b50\u2b50\u2b50\u2b50 Excellent', value: 5 },\n    ],\n  },\n];\n")),(0,r.kt)("hr",null),(0,r.kt)("p",null,"For more examples and advanced parameter configurations, see the ",(0,r.kt)("a",{parentName:"p",href:"./action-types/blockchain-actions.md"},"Action Types")," documentation."))}m.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),o=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=o(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=o(n),c=r,k=u["".concat(s,".").concat(c)]||u[c]||m[c]||l;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var o=2;o<l;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);