"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[65573],{16708:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var l=a(83117),n=(a(67294),a(3905));const r={},o="Hooks",i={unversionedId:"contracts/v4/reference/core/libraries/Hooks",id:"contracts/v4/reference/core/libraries/Hooks",title:"Hooks",description:"Git Source - Generated with forge doc",source:"@site/docs/contracts/v4/reference/core/libraries/Hooks.md",sourceDirName:"contracts/v4/reference/core/libraries",slug:"/contracts/v4/reference/core/libraries/Hooks",permalink:"/docs/contracts/v4/reference/core/libraries/Hooks",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/contracts/v4/reference/core/libraries/Hooks.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"FullMath",permalink:"/docs/contracts/v4/reference/core/libraries/FullMath"},next:{title:"LPFeeLibrary",permalink:"/docs/contracts/v4/reference/core/libraries/LPFeeLibrary"}},s={},d=[{value:"State Variables",id:"state-variables",level:2},{value:"ALL_HOOK_MASK",id:"all_hook_mask",level:3},{value:"BEFORE_INITIALIZE_FLAG",id:"before_initialize_flag",level:3},{value:"AFTER_INITIALIZE_FLAG",id:"after_initialize_flag",level:3},{value:"BEFORE_ADD_LIQUIDITY_FLAG",id:"before_add_liquidity_flag",level:3},{value:"AFTER_ADD_LIQUIDITY_FLAG",id:"after_add_liquidity_flag",level:3},{value:"BEFORE_REMOVE_LIQUIDITY_FLAG",id:"before_remove_liquidity_flag",level:3},{value:"AFTER_REMOVE_LIQUIDITY_FLAG",id:"after_remove_liquidity_flag",level:3},{value:"BEFORE_SWAP_FLAG",id:"before_swap_flag",level:3},{value:"AFTER_SWAP_FLAG",id:"after_swap_flag",level:3},{value:"BEFORE_DONATE_FLAG",id:"before_donate_flag",level:3},{value:"AFTER_DONATE_FLAG",id:"after_donate_flag",level:3},{value:"BEFORE_SWAP_RETURNS_DELTA_FLAG",id:"before_swap_returns_delta_flag",level:3},{value:"AFTER_SWAP_RETURNS_DELTA_FLAG",id:"after_swap_returns_delta_flag",level:3},{value:"AFTER_ADD_LIQUIDITY_RETURNS_DELTA_FLAG",id:"after_add_liquidity_returns_delta_flag",level:3},{value:"AFTER_REMOVE_LIQUIDITY_RETURNS_DELTA_FLAG",id:"after_remove_liquidity_returns_delta_flag",level:3},{value:"Functions",id:"functions",level:2},{value:"validateHookPermissions",id:"validatehookpermissions",level:3},{value:"isValidHookAddress",id:"isvalidhookaddress",level:3},{value:"callHook",id:"callhook",level:3},{value:"callHookWithReturnDelta",id:"callhookwithreturndelta",level:3},{value:"noSelfCall",id:"noselfcall",level:3},{value:"beforeInitialize",id:"beforeinitialize",level:3},{value:"afterInitialize",id:"afterinitialize",level:3},{value:"beforeModifyLiquidity",id:"beforemodifyliquidity",level:3},{value:"afterModifyLiquidity",id:"aftermodifyliquidity",level:3},{value:"beforeSwap",id:"beforeswap",level:3},{value:"afterSwap",id:"afterswap",level:3},{value:"beforeDonate",id:"beforedonate",level:3},{value:"afterDonate",id:"afterdonate",level:3},{value:"hasPermission",id:"haspermission",level:3},{value:"Errors",id:"errors",level:2},{value:"HookAddressNotValid",id:"hookaddressnotvalid",level:3},{value:"InvalidHookResponse",id:"invalidhookresponse",level:3},{value:"HookCallFailed",id:"hookcallfailed",level:3},{value:"HookDeltaExceedsSwapAmount",id:"hookdeltaexceedsswapamount",level:3},{value:"Structs",id:"structs",level:2},{value:"Permissions",id:"permissions",level:3}],u={toc:d};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"hooks"},"Hooks"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-core/blob/80311e34080fee64b6fc6c916e9a51a437d0e482/src/libraries/Hooks.sol"},"Git Source")," - Generated with ",(0,n.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-doc"},"forge doc")),(0,n.kt)("p",null,"V4 decides whether to invoke specific hooks by inspecting the least significant bits\nof the address that the hooks contract is deployed to.\nFor example, a hooks contract deployed to address: 0x0000000000000000000000000000000000002400\nhas the lowest bits '10 0100 0000 0000' which would cause the 'before initialize' and 'after add liquidity' hooks to be used."),(0,n.kt)("h2",{id:"state-variables"},"State Variables"),(0,n.kt)("h3",{id:"all_hook_mask"},"ALL_HOOK_MASK"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"uint160 internal constant ALL_HOOK_MASK = uint160((1 << 14) - 1);\n")),(0,n.kt)("h3",{id:"before_initialize_flag"},"BEFORE_INITIALIZE_FLAG"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"uint160 internal constant BEFORE_INITIALIZE_FLAG = 1 << 13;\n")),(0,n.kt)("h3",{id:"after_initialize_flag"},"AFTER_INITIALIZE_FLAG"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"uint160 internal constant AFTER_INITIALIZE_FLAG = 1 << 12;\n")),(0,n.kt)("h3",{id:"before_add_liquidity_flag"},"BEFORE_ADD_LIQUIDITY_FLAG"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"uint160 internal constant BEFORE_ADD_LIQUIDITY_FLAG = 1 << 11;\n")),(0,n.kt)("h3",{id:"after_add_liquidity_flag"},"AFTER_ADD_LIQUIDITY_FLAG"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"uint160 internal constant AFTER_ADD_LIQUIDITY_FLAG = 1 << 10;\n")),(0,n.kt)("h3",{id:"before_remove_liquidity_flag"},"BEFORE_REMOVE_LIQUIDITY_FLAG"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"uint160 internal constant BEFORE_REMOVE_LIQUIDITY_FLAG = 1 << 9;\n")),(0,n.kt)("h3",{id:"after_remove_liquidity_flag"},"AFTER_REMOVE_LIQUIDITY_FLAG"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"uint160 internal constant AFTER_REMOVE_LIQUIDITY_FLAG = 1 << 8;\n")),(0,n.kt)("h3",{id:"before_swap_flag"},"BEFORE_SWAP_FLAG"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"uint160 internal constant BEFORE_SWAP_FLAG = 1 << 7;\n")),(0,n.kt)("h3",{id:"after_swap_flag"},"AFTER_SWAP_FLAG"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"uint160 internal constant AFTER_SWAP_FLAG = 1 << 6;\n")),(0,n.kt)("h3",{id:"before_donate_flag"},"BEFORE_DONATE_FLAG"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"uint160 internal constant BEFORE_DONATE_FLAG = 1 << 5;\n")),(0,n.kt)("h3",{id:"after_donate_flag"},"AFTER_DONATE_FLAG"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"uint160 internal constant AFTER_DONATE_FLAG = 1 << 4;\n")),(0,n.kt)("h3",{id:"before_swap_returns_delta_flag"},"BEFORE_SWAP_RETURNS_DELTA_FLAG"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"uint160 internal constant BEFORE_SWAP_RETURNS_DELTA_FLAG = 1 << 3;\n")),(0,n.kt)("h3",{id:"after_swap_returns_delta_flag"},"AFTER_SWAP_RETURNS_DELTA_FLAG"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"uint160 internal constant AFTER_SWAP_RETURNS_DELTA_FLAG = 1 << 2;\n")),(0,n.kt)("h3",{id:"after_add_liquidity_returns_delta_flag"},"AFTER_ADD_LIQUIDITY_RETURNS_DELTA_FLAG"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"uint160 internal constant AFTER_ADD_LIQUIDITY_RETURNS_DELTA_FLAG = 1 << 1;\n")),(0,n.kt)("h3",{id:"after_remove_liquidity_returns_delta_flag"},"AFTER_REMOVE_LIQUIDITY_RETURNS_DELTA_FLAG"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"uint160 internal constant AFTER_REMOVE_LIQUIDITY_RETURNS_DELTA_FLAG = 1 << 0;\n")),(0,n.kt)("h2",{id:"functions"},"Functions"),(0,n.kt)("h3",{id:"validatehookpermissions"},"validateHookPermissions"),(0,n.kt)("p",null,"Utility function intended to be used in hook constructors to ensure\nthe deployed hooks address causes the intended hooks to be called"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"permissions param is memory as the function will be called from constructors")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function validateHookPermissions(IHooks self, Permissions memory permissions) internal pure;\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"self")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"IHooks")),(0,n.kt)("td",{parentName:"tr",align:null})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"permissions")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"Permissions")),(0,n.kt)("td",{parentName:"tr",align:null},"The hooks that are intended to be called")))),(0,n.kt)("h3",{id:"isvalidhookaddress"},"isValidHookAddress"),(0,n.kt)("p",null,"Ensures that the hook address includes at least one hook flag or dynamic fees, or is the 0 address"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function isValidHookAddress(IHooks self, uint24 fee) internal pure returns (bool);\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"self")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"IHooks")),(0,n.kt)("td",{parentName:"tr",align:null},"The hook to verify")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"fee")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"uint24")),(0,n.kt)("td",{parentName:"tr",align:null},"The fee of the pool the hook is used with")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Returns")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"<none>")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"bool")),(0,n.kt)("td",{parentName:"tr",align:null},"bool True if the hook address is valid")))),(0,n.kt)("h3",{id:"callhook"},"callHook"),(0,n.kt)("p",null,"performs a hook call using the given calldata on the given hook that doesn't return a delta"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function callHook(IHooks self, bytes memory data) internal returns (bytes memory result);\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Returns")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"result")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"bytes")),(0,n.kt)("td",{parentName:"tr",align:null},"The complete data returned by the hook")))),(0,n.kt)("h3",{id:"callhookwithreturndelta"},"callHookWithReturnDelta"),(0,n.kt)("p",null,"performs a hook call using the given calldata on the given hook"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function callHookWithReturnDelta(IHooks self, bytes memory data, bool parseReturn) internal returns (int256);\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Returns")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"<none>")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"int256")),(0,n.kt)("td",{parentName:"tr",align:null},"int256 The delta returned by the hook")))),(0,n.kt)("h3",{id:"noselfcall"},"noSelfCall"),(0,n.kt)("p",null,"modifier to prevent calling a hook if they initiated the action"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier noSelfCall(IHooks self);\n")),(0,n.kt)("h3",{id:"beforeinitialize"},"beforeInitialize"),(0,n.kt)("p",null,"calls beforeInitialize hook if permissioned and validates return value"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function beforeInitialize(IHooks self, PoolKey memory key, uint160 sqrtPriceX96) internal noSelfCall(self);\n")),(0,n.kt)("h3",{id:"afterinitialize"},"afterInitialize"),(0,n.kt)("p",null,"calls afterInitialize hook if permissioned and validates return value"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function afterInitialize(IHooks self, PoolKey memory key, uint160 sqrtPriceX96, int24 tick) internal noSelfCall(self);\n")),(0,n.kt)("h3",{id:"beforemodifyliquidity"},"beforeModifyLiquidity"),(0,n.kt)("p",null,"calls beforeModifyLiquidity hook if permissioned and validates return value"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function beforeModifyLiquidity(\n    IHooks self,\n    PoolKey memory key,\n    IPoolManager.ModifyLiquidityParams memory params,\n    bytes calldata hookData\n) internal noSelfCall(self);\n")),(0,n.kt)("h3",{id:"aftermodifyliquidity"},"afterModifyLiquidity"),(0,n.kt)("p",null,"calls afterModifyLiquidity hook if permissioned and validates return value"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function afterModifyLiquidity(\n    IHooks self,\n    PoolKey memory key,\n    IPoolManager.ModifyLiquidityParams memory params,\n    BalanceDelta delta,\n    BalanceDelta feesAccrued,\n    bytes calldata hookData\n) internal returns (BalanceDelta callerDelta, BalanceDelta hookDelta);\n")),(0,n.kt)("h3",{id:"beforeswap"},"beforeSwap"),(0,n.kt)("p",null,"calls beforeSwap hook if permissioned and validates return value"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function beforeSwap(IHooks self, PoolKey memory key, IPoolManager.SwapParams memory params, bytes calldata hookData)\n    internal\n    returns (int256 amountToSwap, BeforeSwapDelta hookReturn, uint24 lpFeeOverride);\n")),(0,n.kt)("h3",{id:"afterswap"},"afterSwap"),(0,n.kt)("p",null,"calls afterSwap hook if permissioned and validates return value"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function afterSwap(\n    IHooks self,\n    PoolKey memory key,\n    IPoolManager.SwapParams memory params,\n    BalanceDelta swapDelta,\n    bytes calldata hookData,\n    BeforeSwapDelta beforeSwapHookReturn\n) internal returns (BalanceDelta, BalanceDelta);\n")),(0,n.kt)("h3",{id:"beforedonate"},"beforeDonate"),(0,n.kt)("p",null,"calls beforeDonate hook if permissioned and validates return value"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function beforeDonate(IHooks self, PoolKey memory key, uint256 amount0, uint256 amount1, bytes calldata hookData)\n    internal\n    noSelfCall(self);\n")),(0,n.kt)("h3",{id:"afterdonate"},"afterDonate"),(0,n.kt)("p",null,"calls afterDonate hook if permissioned and validates return value"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function afterDonate(IHooks self, PoolKey memory key, uint256 amount0, uint256 amount1, bytes calldata hookData)\n    internal\n    noSelfCall(self);\n")),(0,n.kt)("h3",{id:"haspermission"},"hasPermission"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function hasPermission(IHooks self, uint160 flag) internal pure returns (bool);\n")),(0,n.kt)("h2",{id:"errors"},"Errors"),(0,n.kt)("h3",{id:"hookaddressnotvalid"},"HookAddressNotValid"),(0,n.kt)("p",null,"Thrown if the address will not lead to the specified hook calls being called"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"error HookAddressNotValid(address hooks);\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"hooks")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"address")),(0,n.kt)("td",{parentName:"tr",align:null},"The address of the hooks contract")))),(0,n.kt)("h3",{id:"invalidhookresponse"},"InvalidHookResponse"),(0,n.kt)("p",null,"Hook did not return its selector"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidHookResponse();\n")),(0,n.kt)("h3",{id:"hookcallfailed"},"HookCallFailed"),(0,n.kt)("p",null,"Additional context for ERC-7751 wrapped error when a hook call fails"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"error HookCallFailed();\n")),(0,n.kt)("h3",{id:"hookdeltaexceedsswapamount"},"HookDeltaExceedsSwapAmount"),(0,n.kt)("p",null,"The hook's delta changed the swap from exactIn to exactOut or vice versa"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"error HookDeltaExceedsSwapAmount();\n")),(0,n.kt)("h2",{id:"structs"},"Structs"),(0,n.kt)("h3",{id:"permissions"},"Permissions"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Permissions {\n    bool beforeInitialize;\n    bool afterInitialize;\n    bool beforeAddLiquidity;\n    bool afterAddLiquidity;\n    bool beforeRemoveLiquidity;\n    bool afterRemoveLiquidity;\n    bool beforeSwap;\n    bool afterSwap;\n    bool beforeDonate;\n    bool afterDonate;\n    bool beforeSwapReturnDelta;\n    bool afterSwapReturnDelta;\n    bool afterAddLiquidityReturnDelta;\n    bool afterRemoveLiquidityReturnDelta;\n}\n")))}p.isMDXComponent=!0},3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>c});var l=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=l.createContext({}),d=function(e){var t=l.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=d(e.components);return l.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},k=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),k=d(a),c=n,m=k["".concat(s,".").concat(c)]||k[c]||p[c]||r;return a?l.createElement(m,o(o({ref:t},u),{},{components:a})):l.createElement(m,o({ref:t},u))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=k;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var d=2;d<r;d++)o[d]=a[d];return l.createElement.apply(null,o)}return l.createElement.apply(null,a)}k.displayName="MDXCreateElement"}}]);