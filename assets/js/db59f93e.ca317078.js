"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[484],{47872:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=r(83117),n=(r(67294),r(3905));const i={id:"getting-pair-addresses",title:"Pair Addresses"},s="getPair",o={unversionedId:"sdk/v2/guides/getting-pair-addresses",id:"sdk/v2/guides/getting-pair-addresses",title:"Pair Addresses",description:"The most obvious way to get the address for a pair is to call getPair on the factory. If the pair exists, this function will return its address, else address(0) (0x0000000000000000000000000000000000000000).",source:"@site/docs/sdk/v2/guides/05-getting-pair-addresses.md",sourceDirName:"sdk/v2/guides",slug:"/sdk/v2/guides/getting-pair-addresses",permalink:"/docs/sdk/v2/guides/getting-pair-addresses",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/sdk/v2/guides/05-getting-pair-addresses.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"getting-pair-addresses",title:"Pair Addresses"},sidebar:"sdkSidebar",previous:{title:"Trading",permalink:"/docs/sdk/v2/guides/trading"},next:{title:"Getting Started",permalink:"/docs/sdk/v2/reference/getting-started"}},p={},d=[{value:"Examples",id:"examples",level:2},{value:"TypeScript",id:"typescript",level:3}],l={toc:d};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"getpair"},"getPair"),(0,n.kt)("p",null,"The most obvious way to get the address for a pair is to call ",(0,n.kt)("a",{parentName:"p",href:"../../../contracts/v2/reference/smart-contracts/factory#getpair"},"getPair")," on the factory. If the pair exists, this function will return its address, else ",(0,n.kt)("inlineCode",{parentName:"p"},"address(0)")," (",(0,n.kt)("inlineCode",{parentName:"p"},"0x0000000000000000000000000000000000000000"),")."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'The "canonical" way to determine whether or not a pair exists.'),(0,n.kt)("li",{parentName:"ul"},"Requires an on-chain lookup.")),(0,n.kt)("h1",{id:"create2"},"CREATE2"),(0,n.kt)("p",null,"Thanks to some ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2Factory.sol#L32"},"fancy footwork in the factory"),", we can also compute pair addresses ",(0,n.kt)("em",{parentName:"p"},"without any on-chain lookups")," because of ",(0,n.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1014"},"CREATE2"),". The following values are required for this technique:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"}),(0,n.kt)("th",{parentName:"tr",align:"left"}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"address")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The ",(0,n.kt)("a",{parentName:"td",href:"../../../contracts/v2/reference/smart-contracts/factory"},"factory address"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"salt")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"keccak256(abi.encodePacked(token0, token1))"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"keccak256(init_code)")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f"))))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"token0")," must be strictly less than ",(0,n.kt)("inlineCode",{parentName:"li"},"token1")," by sort order.")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Can be computed offline."),(0,n.kt)("li",{parentName:"ul"},"Requires the ability to perform ",(0,n.kt)("inlineCode",{parentName:"li"},"keccak256"),".")),(0,n.kt)("h2",{id:"examples"},"Examples"),(0,n.kt)("h3",{id:"typescript"},"TypeScript"),(0,n.kt)("p",null,"This example makes use of the ",(0,n.kt)("a",{parentName:"p",href:"../reference/getting-started"},"Uniswap V2 SDK"),". In reality, the SDK computes pair addresses behind the scenes, obviating the need to compute them manually like this."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"import { FACTORY_ADDRESS, INIT_CODE_HASH } from '@uniswap/v2-sdk'\nimport { pack, keccak256 } from '@ethersproject/solidity'\nimport { getCreate2Address } from '@ethersproject/address'\n\nconst token0 = '0xCAFE000000000000000000000000000000000000' // change me!\nconst token1 = '0xF00D000000000000000000000000000000000000' // change me!\n\nconst pair = getCreate2Address(\n  FACTORY_ADDRESS,\n  keccak256(['bytes'], [pack(['address', 'address'], [token0, token1])]),\n  INIT_CODE_HASH\n)\n")))}c.isMDXComponent=!0},3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),d=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=d(r),m=n,k=u["".concat(p,".").concat(m)]||u[m]||c[m]||i;return r?a.createElement(k,s(s({ref:t},l),{},{components:r})):a.createElement(k,s({ref:t},l))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,s=new Array(i);s[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var d=2;d<i;d++)s[d]=r[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);