"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[700],{5676:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(83117),r=(n(67294),n(3905));const i={},l="SlippageCheck",o={unversionedId:"contracts/v4/reference/periphery/libraries/SlippageCheck",id:"contracts/v4/reference/periphery/libraries/SlippageCheck",title:"SlippageCheck",description:"Git Source - Generated with forge doc",source:"@site/docs/contracts/v4/reference/periphery/libraries/SlippageCheck.md",sourceDirName:"contracts/v4/reference/periphery/libraries",slug:"/contracts/v4/reference/periphery/libraries/SlippageCheck",permalink:"/docs/contracts/v4/reference/periphery/libraries/SlippageCheck",editUrl:"https://github.com/hoffms/docs/tree/main/docs/contracts/v4/reference/periphery/libraries/SlippageCheck.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"SafeCurrencyMetadata",permalink:"/docs/contracts/v4/reference/periphery/libraries/SafeCurrencyMetadata"},next:{title:"VanityAddressLib",permalink:"/docs/contracts/v4/reference/periphery/libraries/VanityAddressLib"}},u={},p=[{value:"Functions",id:"functions",level:2},{value:"validateMinOut",id:"validateminout",level:3},{value:"validateMaxIn",id:"validatemaxin",level:3},{value:"Errors",id:"errors",level:2},{value:"MaximumAmountExceeded",id:"maximumamountexceeded",level:3},{value:"MinimumAmountInsufficient",id:"minimumamountinsufficient",level:3}],m={toc:p};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"slippagecheck"},"SlippageCheck"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-periphery/blob/ea2bf2e1ba6863bb809fc2ff791744f308c4a26d/src/libraries/SlippageCheck.sol"},"Git Source")," - Generated with ",(0,r.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-doc"},"forge doc")),(0,r.kt)("p",null,"a library for checking if a delta exceeds a maximum ceiling or fails to meet a minimum floor"),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"validateminout"},"validateMinOut"),(0,r.kt)("p",null,"Revert if one or both deltas does not meet a minimum output"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This should be called when removing liquidity (burn or decrease)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function validateMinOut(BalanceDelta delta, uint128 amount0Min, uint128 amount1Min) internal pure;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"delta")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"BalanceDelta")),(0,r.kt)("td",{parentName:"tr",align:null},"The principal amount of tokens to be removed, does not include any fees accrued")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount0Min")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint128")),(0,r.kt)("td",{parentName:"tr",align:null},"The minimum amount of token0 to receive")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount1Min")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint128")),(0,r.kt)("td",{parentName:"tr",align:null},"The minimum amount of token1 to receive")))),(0,r.kt)("h3",{id:"validatemaxin"},"validateMaxIn"),(0,r.kt)("p",null,"Revert if one or both deltas exceeds a maximum input"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This should be called when adding liquidity (mint or increase)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function validateMaxIn(BalanceDelta delta, uint128 amount0Max, uint128 amount1Max) internal pure;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"delta")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"BalanceDelta")),(0,r.kt)("td",{parentName:"tr",align:null},"The principal amount of tokens to be added, does not include any fees accrued (which is possible on increase)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount0Max")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint128")),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum amount of token0 to spend")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"amount1Max")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint128")),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum amount of token1 to spend")))),(0,r.kt)("h2",{id:"errors"},"Errors"),(0,r.kt)("h3",{id:"maximumamountexceeded"},"MaximumAmountExceeded"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error MaximumAmountExceeded(uint128 maximumAmount, uint128 amountRequested);\n")),(0,r.kt)("h3",{id:"minimumamountinsufficient"},"MinimumAmountInsufficient"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"error MinimumAmountInsufficient(uint128 minimumAmount, uint128 amountReceived);\n")))}c.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>s});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),p=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=p(n),s=r,k=d["".concat(u,".").concat(s)]||d[s]||c[s]||i;return n?a.createElement(k,l(l({ref:t},m),{},{components:n})):a.createElement(k,l({ref:t},m))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);