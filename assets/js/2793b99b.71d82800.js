"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[92725],{71065:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var t=r(83117),o=(r(67294),r(3905));const s={id:"types",title:"Types"},i=void 0,a={unversionedId:"sdk/v1/reference/types",id:"sdk/v1/reference/types",title:"Types",description:"Below is an exhaustive list of all the external types used in the SDK.",source:"@site/docs/sdk/v1/reference/08-types.md",sourceDirName:"sdk/v1/reference",slug:"/sdk/v1/reference/types",permalink:"/docs/sdk/v1/reference/types",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/sdk/v1/reference/08-types.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{id:"types",title:"Types"},sidebar:"sdkSidebar",previous:{title:"Constants",permalink:"/docs/sdk/v1/reference/constants"}},d={},p=[],u={toc:p};function c(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Below is an exhaustive list of all the external types used in the SDK."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nimport { SUPPORTED_CHAIN_ID, TRADE_TYPE, TRADE_EXACT, FIXED_UNDERFLOW_BEHAVIOR } from './constants'\n\nexport type BigNumberish = BigNumber | ethers.utils.BigNumber | string | number\n\n//// types for on-chain, submitted, and normalized data\nexport type ChainIdOrProvider = SUPPORTED_CHAIN_ID | ethers.providers.AsyncSendable | ethers.providers.Provider\n\n// type guard for ChainIdOrProvider\nexport function isChainId(chainIdOrProvider: ChainIdOrProvider): chainIdOrProvider is SUPPORTED_CHAIN_ID {\n  const chainId: SUPPORTED_CHAIN_ID = chainIdOrProvider as SUPPORTED_CHAIN_ID\n  return typeof chainId === 'number'\n}\n\n// type guard for ChainIdOrProvider\nexport function isLowLevelProvider(\n  chainIdOrProvider: ChainIdOrProvider\n): chainIdOrProvider is ethers.providers.AsyncSendable {\n  if (isChainId(chainIdOrProvider)) {\n    return false\n  } else {\n    const provider: ethers.providers.AsyncSendable = chainIdOrProvider as ethers.providers.AsyncSendable\n    return 'send' in provider || 'sendAsync' in provider\n  }\n}\n\nexport interface Token {\n  chainId?: SUPPORTED_CHAIN_ID\n  address?: string\n  decimals: number\n}\n\nexport interface TokenAmount {\n  token: Token\n  amount: BigNumberish\n}\n\nexport interface TokenAmountNormalized {\n  token: Token\n  amount: BigNumber\n}\n\nexport interface TokenReserves {\n  token: Token\n  exchange?: Token\n  ethReserve: TokenAmount\n  tokenReserve: TokenAmount\n}\n\nexport interface TokenReservesNormalized {\n  token: Token\n  exchange?: Token\n  ethReserve: TokenAmountNormalized\n  tokenReserve: TokenAmountNormalized\n}\n\nexport interface EthReserves {\n  token: Token\n}\n\n// type for input data\nexport type OptionalReserves = TokenReserves | EthReserves | undefined\n\n// type guard for OptionalReserves\nexport function areTokenReserves(reserves: OptionalReserves): reserves is TokenReserves {\n  const tokenReserves: TokenReserves = reserves as TokenReserves\n  return (\n    tokenReserves !== undefined && tokenReserves.ethReserve !== undefined && tokenReserves.tokenReserve !== undefined\n  )\n}\n\n// type guard for OptionalReserves\nexport function areETHReserves(reserves: OptionalReserves): reserves is EthReserves {\n  const tokenReserves: TokenReserves = reserves as TokenReserves\n  return (\n    tokenReserves !== undefined && tokenReserves.ethReserve === undefined && tokenReserves.tokenReserve === undefined\n  )\n}\n\n// type for output data\nexport type NormalizedReserves = TokenReservesNormalized | EthReserves\n\n// type guard for NormalizedReserves\nexport function areTokenReservesNormalized(reserves: NormalizedReserves): reserves is TokenReservesNormalized {\n  const tokenReservesNormalized: TokenReservesNormalized = reserves as TokenReservesNormalized\n  return tokenReservesNormalized.ethReserve !== undefined && tokenReservesNormalized.tokenReserve !== undefined\n}\n\n//// types for computed data\nexport interface Rate {\n  rate: BigNumber\n  rateInverted: BigNumber\n}\nexport interface MarketDetails {\n  tradeType: TRADE_TYPE\n  inputReserves: NormalizedReserves\n  outputReserves: NormalizedReserves\n  marketRate: Rate\n}\n\nexport interface TradeDetails {\n  marketDetailsPre: MarketDetails\n  marketDetailsPost: MarketDetails\n  tradeType: TRADE_TYPE\n  tradeExact: TRADE_EXACT\n  inputAmount: TokenAmountNormalized\n  outputAmount: TokenAmountNormalized\n  executionRate: Rate\n  marketRateSlippage: BigNumber\n  executionRateSlippage: BigNumber\n}\n\nexport type MethodArgument = BigNumber | number | string\n\nexport interface ExecutionDetails {\n  exchangeAddress: string\n  methodName: string\n  methodId: string\n  value: BigNumber\n  methodArguments: MethodArgument[]\n}\n\n//// types for formatting data\nexport type FlexibleFormat = BigNumber.Format | boolean\n\n// type guard for FlexibleFormat\nexport function isFormat(flexibleFormat: FlexibleFormat): flexibleFormat is BigNumber.Format {\n  const format: BigNumber.Format = flexibleFormat as BigNumber.Format\n  return typeof format !== 'boolean'\n}\n\nexport interface FormatSignificantOptions {\n  significantDigits: number\n  roundingMode: BigNumber.RoundingMode\n  forceIntegerSignificance: boolean\n  format: FlexibleFormat\n}\n\nexport interface FormatFixedOptions {\n  decimalPlaces: number\n  roundingMode: BigNumber.RoundingMode\n  dropTrailingZeros: boolean\n  underflowBehavior: FIXED_UNDERFLOW_BEHAVIOR\n  format: FlexibleFormat\n}\n")))}c.isMDXComponent=!0},3905:(e,n,r)=>{r.d(n,{Zo:()=>u,kt:()=>m});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=t.createContext({}),p=function(e){var n=t.useContext(d),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},u=function(e){var n=p(e.components);return t.createElement(d.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},l=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,s=e.originalType,d=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),l=p(r),m=o,v=l["".concat(d,".").concat(m)]||l[m]||c[m]||s;return r?t.createElement(v,i(i({ref:n},u),{},{components:r})):t.createElement(v,i({ref:n},u))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=r.length,i=new Array(s);i[0]=l;var a={};for(var d in n)hasOwnProperty.call(n,d)&&(a[d]=n[d]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var p=2;p<s;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}l.displayName="MDXCreateElement"}}]);