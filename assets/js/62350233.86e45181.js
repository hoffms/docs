"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[33514],{51323:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var n=r(83117),a=(r(67294),r(3905));const o={},l="BaseV4Quoter",c={unversionedId:"contracts/v4/reference/periphery/base/BaseV4Quoter",id:"contracts/v4/reference/periphery/base/BaseV4Quoter",title:"BaseV4Quoter",description:"Git Source - Generated with forge doc",source:"@site/docs/contracts/v4/reference/periphery/base/BaseV4Quoter.md",sourceDirName:"contracts/v4/reference/periphery/base",slug:"/contracts/v4/reference/periphery/base/BaseV4Quoter",permalink:"/docs/contracts/v4/reference/periphery/base/BaseV4Quoter",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/contracts/v4/reference/periphery/base/BaseV4Quoter.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"BaseActionsRouter",permalink:"/docs/contracts/v4/reference/periphery/base/BaseActionsRouter"},next:{title:"DeltaResolver",permalink:"/docs/contracts/v4/reference/periphery/base/DeltaResolver"}},s={},i=[{value:"Functions",id:"functions",level:2},{value:"constructor",id:"constructor",level:3},{value:"selfOnly",id:"selfonly",level:3},{value:"_unlockCallback",id:"_unlockcallback",level:3},{value:"_swap",id:"_swap",level:3},{value:"Errors",id:"errors",level:2},{value:"NotEnoughLiquidity",id:"notenoughliquidity",level:3},{value:"NotSelf",id:"notself",level:3},{value:"UnexpectedCallSuccess",id:"unexpectedcallsuccess",level:3}],u={toc:i};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"basev4quoter"},"BaseV4Quoter"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-periphery/blob/ea2bf2e1ba6863bb809fc2ff791744f308c4a26d/src/base/BaseV4Quoter.sol"},"Git Source")," - Generated with ",(0,a.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-doc"},"forge doc")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Inherits:"),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/periphery/base/SafeCallback"},"SafeCallback")),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("h3",{id:"constructor"},"constructor"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor(IPoolManager _poolManager) SafeCallback(_poolManager);\n")),(0,a.kt)("h3",{id:"selfonly"},"selfOnly"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Only this address may call this function. Used to mimic internal functions, using an\nexternal call to catch and parse revert reasons")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier selfOnly();\n")),(0,a.kt)("h3",{id:"_unlockcallback"},"_unlockCallback"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function _unlockCallback(bytes calldata data) internal override returns (bytes memory);\n")),(0,a.kt)("h3",{id:"_swap"},"_swap"),(0,a.kt)("p",null,"if amountSpecified < 0, the swap is exactInput, otherwise exactOutput"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Execute a swap and return the balance delta")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function _swap(PoolKey memory poolKey, bool zeroForOne, int256 amountSpecified, bytes calldata hookData)\n    internal\n    returns (BalanceDelta swapDelta);\n")),(0,a.kt)("h2",{id:"errors"},"Errors"),(0,a.kt)("h3",{id:"notenoughliquidity"},"NotEnoughLiquidity"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"error NotEnoughLiquidity(PoolId poolId);\n")),(0,a.kt)("h3",{id:"notself"},"NotSelf"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"error NotSelf();\n")),(0,a.kt)("h3",{id:"unexpectedcallsuccess"},"UnexpectedCallSuccess"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"error UnexpectedCallSuccess();\n")))}p.isMDXComponent=!0},3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),i=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=i(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=i(r),f=a,y=d["".concat(s,".").concat(f)]||d[f]||p[f]||o;return r?n.createElement(y,l(l({ref:t},u),{},{components:r})):n.createElement(y,l({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var i=2;i<o;i++)l[i]=r[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);