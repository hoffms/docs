"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[55685],{64483:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>u,toc:()=>s});var n=t(83117),o=(t(67294),t(3905));const a={},i="QuoterRevert",u={unversionedId:"contracts/v4/reference/periphery/libraries/QuoterRevert",id:"contracts/v4/reference/periphery/libraries/QuoterRevert",title:"QuoterRevert",description:"Git Source - Generated with forge doc",source:"@site/docs/contracts/v4/reference/periphery/libraries/QuoterRevert.md",sourceDirName:"contracts/v4/reference/periphery/libraries",slug:"/contracts/v4/reference/periphery/libraries/QuoterRevert",permalink:"/docs/contracts/v4/reference/periphery/libraries/QuoterRevert",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/contracts/v4/reference/periphery/libraries/QuoterRevert.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"PositionInfo",permalink:"/docs/contracts/v4/reference/periphery/libraries/PositionInfoLibrary"},next:{title:"SVG",permalink:"/docs/contracts/v4/reference/periphery/libraries/SVG"}},l={},s=[{value:"Functions",id:"functions",level:2},{value:"revertQuote",id:"revertquote",level:3},{value:"bubbleReason",id:"bubblereason",level:3},{value:"parseQuoteAmount",id:"parsequoteamount",level:3},{value:"Errors",id:"errors",level:2},{value:"UnexpectedRevertBytes",id:"unexpectedrevertbytes",level:3},{value:"QuoteSwap",id:"quoteswap",level:3}],p={toc:s};function c(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"quoterrevert"},"QuoterRevert"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-periphery/blob/ea2bf2e1ba6863bb809fc2ff791744f308c4a26d/src/libraries/QuoterRevert.sol"},"Git Source")," - Generated with ",(0,o.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-doc"},"forge doc")),(0,o.kt)("h2",{id:"functions"},"Functions"),(0,o.kt)("h3",{id:"revertquote"},"revertQuote"),(0,o.kt)("p",null,"reverts, where the revert data is the provided bytes"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"called when quoting, to record the quote amount in an error")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"QuoteSwap is used to differentiate this error from other errors thrown when simulating the swap")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function revertQuote(uint256 quoteAmount) internal pure;\n")),(0,o.kt)("h3",{id:"bubblereason"},"bubbleReason"),(0,o.kt)("p",null,"reverts using the revertData as the reason"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"to bubble up both the valid QuoteSwap(amount) error, or an alternative error thrown during simulation")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function bubbleReason(bytes memory revertData) internal pure;\n")),(0,o.kt)("h3",{id:"parsequoteamount"},"parseQuoteAmount"),(0,o.kt)("p",null,"validates whether a revert reason is a valid swap quote or not\nif valid, it decodes the quote to return. Otherwise it reverts."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function parseQuoteAmount(bytes memory reason) internal pure returns (uint256 quoteAmount);\n")),(0,o.kt)("h2",{id:"errors"},"Errors"),(0,o.kt)("h3",{id:"unexpectedrevertbytes"},"UnexpectedRevertBytes"),(0,o.kt)("p",null,"error thrown when invalid revert bytes are thrown by the quote"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"error UnexpectedRevertBytes(bytes revertData);\n")),(0,o.kt)("h3",{id:"quoteswap"},"QuoteSwap"),(0,o.kt)("p",null,"error thrown containing the quote as the data, to be caught and parsed later"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"error QuoteSwap(uint256 amount);\n")))}c.isMDXComponent=!0},3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>v});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function u(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),s=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),d=s(t),v=o,f=d["".concat(l,".").concat(v)]||d[v]||c[v]||a;return t?n.createElement(f,i(i({ref:r},p),{},{components:t})):n.createElement(f,i({ref:r},p))}));function v(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var u={};for(var l in r)hasOwnProperty.call(r,l)&&(u[l]=r[l]);u.originalType=e,u.mdxType="string"==typeof e?e:o,i[1]=u;for(var s=2;s<a;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);