"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[28926],{92174:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(83117),a=(n(67294),n(3905));const i={},o=void 0,l={unversionedId:"contracts/v3/reference/periphery/base/ERC721Permit",id:"contracts/v3/reference/periphery/base/ERC721Permit",title:"ERC721Permit",description:"Nonfungible tokens that support an approve via signature, i.e. permit",source:"@site/docs/contracts/v3/reference/periphery/base/ERC721Permit.md",sourceDirName:"contracts/v3/reference/periphery/base",slug:"/contracts/v3/reference/periphery/base/ERC721Permit",permalink:"/docs/contracts/v3/reference/periphery/base/ERC721Permit",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/contracts/v3/reference/periphery/base/ERC721Permit.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"BlockTimestamp",permalink:"/docs/contracts/v3/reference/periphery/base/BlockTimestamp"},next:{title:"LiquidityManagement",permalink:"/docs/contracts/v3/reference/periphery/base/LiquidityManagement"}},p={},s=[{value:"Functions",id:"functions",level:2},{value:"_getAndIncrementNonce",id:"_getandincrementnonce",level:3},{value:"constructor",id:"constructor",level:3},{value:"DOMAIN_SEPARATOR",id:"domain_separator",level:3},{value:"Return Values:",id:"return-values",level:4},{value:"permit",id:"permit",level:3},{value:"Parameters:",id:"parameters",level:4}],d={toc:s};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Nonfungible tokens that support an approve via signature, i.e. permit"),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("h3",{id:"_getandincrementnonce"},"_","getAndIncrementNonce"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"  function _getAndIncrementNonce(\n    uint256 tokenId\n  ) internal virtual returns (uint256)\n")),(0,a.kt)("p",null,"Gets the current nonce for a token ID and then increments it, returning the original value"),(0,a.kt)("h3",{id:"constructor"},"constructor"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"  function constructor(\n    string memory name_,\n    string memory symbol_,\n    string memory version_\n  ) internal\n")),(0,a.kt)("p",null,"Computes the nameHash and versionHash"),(0,a.kt)("h3",{id:"domain_separator"},"DOMAIN_SEPARATOR"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"  function DOMAIN_SEPARATOR(\n  ) public view override returns (bytes32)\n")),(0,a.kt)("p",null,"The domain separator used in the permit signature"),(0,a.kt)("h4",{id:"return-values"},"Return Values:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,a.kt)("td",{parentName:"tr",align:"left"},"domain seperator used in encoding of permit signature")))),(0,a.kt)("h3",{id:"permit"},"permit"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"  function permit(\n    address spender,\n    uint256 tokenId,\n    uint256 deadline,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) external\n")),(0,a.kt)("p",null,"Approve of a specific token ID for spending by spender via signature"),(0,a.kt)("h4",{id:"parameters"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"spender")),(0,a.kt)("td",{parentName:"tr",align:"left"},"address"),(0,a.kt)("td",{parentName:"tr",align:"left"},"The account that is being approved")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,a.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,a.kt)("td",{parentName:"tr",align:"left"},"The ID of the token that is being approved for spending")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"deadline")),(0,a.kt)("td",{parentName:"tr",align:"left"},"uint256"),(0,a.kt)("td",{parentName:"tr",align:"left"},"The deadline timestamp by which the call must be mined for the approve to work")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"v")),(0,a.kt)("td",{parentName:"tr",align:"left"},"uint8"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Must produce valid secp256k1 signature from the holder along with ",(0,a.kt)("inlineCode",{parentName:"td"},"r")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"s"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"r")),(0,a.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Must produce valid secp256k1 signature from the holder along with ",(0,a.kt)("inlineCode",{parentName:"td"},"v")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"s"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"s")),(0,a.kt)("td",{parentName:"tr",align:"left"},"bytes32"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Must produce valid secp256k1 signature from the holder along with ",(0,a.kt)("inlineCode",{parentName:"td"},"r")," and ",(0,a.kt)("inlineCode",{parentName:"td"},"v"))))))}c.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=s(n),u=a,f=m["".concat(p,".").concat(u)]||m[u]||c[u]||i;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);