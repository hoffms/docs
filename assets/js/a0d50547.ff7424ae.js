"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[9417],{3239:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(3117),o=(n(7294),n(3905));const a={id:"action-flows",sidebar_position:5,title:"Action Flows"},i="Action Flows",s={unversionedId:"sdk/trigger-sdk/reference/actions/action-flows",id:"sdk/trigger-sdk/reference/actions/action-flows",title:"Action Flows",description:"\ud83d\udea7 Under Construction",source:"@site/docs/sdk/trigger-sdk/reference/actions/action-flows.md",sourceDirName:"sdk/trigger-sdk/reference/actions",slug:"/sdk/trigger-sdk/reference/actions/action-flows",permalink:"/docs/sdk/trigger-sdk/reference/actions/action-flows",editUrl:"https://github.com/hoffms/docs/tree/main/docs/sdk/trigger-sdk/reference/actions/action-flows.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"action-flows",sidebar_position:5,title:"Action Flows"},sidebar:"sdkSidebar",previous:{title:"Dynamic Actions",permalink:"/docs/sdk/trigger-sdk/reference/actions/dynamic-actions"},next:{title:"Parameter Types",permalink:"/docs/sdk/trigger-sdk/reference/parameters/parameter-types"}},c={},l=[{value:"Example",id:"example",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"action-flows"},"Action Flows"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\ud83d\udea7 ",(0,o.kt)("strong",{parentName:"p"},"Under Construction")),(0,o.kt)("p",{parentName:"blockquote"},"This documentation is currently being written. Action Flows allow you to create multi-step processes with conditional logic and user decisions.")),(0,o.kt)("p",null,"Action Flows enable you to create complex, multi-step processes that can include conditional logic and user decisions. They're perfect for scenarios like token swaps, NFT minting, or any process that requires multiple steps."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ActionFlow } from '@sherrylinks/sdk';\n\nconst swapFlow: ActionFlow = {\n  type: 'flow',\n  label: 'Token Swap Flow',\n  initialActionId: 'approve-tokens',\n  actions: [\n    {\n      id: 'approve-tokens',\n      type: 'blockchain',\n      label: 'Approve Tokens',\n      address: '0xTokenAddress',\n      abi: erc20Abi,\n      functionName: 'approve',\n      chains: { source: 'avalanche' },\n      params: [\n        /* ... */\n      ],\n      nextActions: [{ actionId: 'execute-swap' }],\n    },\n    {\n      id: 'execute-swap',\n      type: 'blockchain',\n      label: 'Execute Swap',\n      address: '0xDEXAddress',\n      abi: dexAbi,\n      functionName: 'swap',\n      chains: { source: 'avalanche' },\n      params: [\n        /* ... */\n      ],\n      nextActions: [{ actionId: 'swap-complete' }],\n    },\n    {\n      id: 'swap-complete',\n      type: 'completion',\n      label: 'Swap Complete',\n      message: 'Your swap was successful!',\n      status: 'success',\n    },\n  ],\n};\n")),(0,o.kt)("p",null,"Coming soon:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Complete interface documentation"),(0,o.kt)("li",{parentName:"ul"},"Flow design patterns"),(0,o.kt)("li",{parentName:"ul"},"Conditional logic"),(0,o.kt)("li",{parentName:"ul"},"State management"),(0,o.kt)("li",{parentName:"ul"},"User interaction handling"),(0,o.kt)("li",{parentName:"ul"},"Best practices for complex flows")))}u.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);