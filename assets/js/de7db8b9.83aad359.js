"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[64809],{82278:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var n=r(83117),a=(r(67294),r(3905));const i={},l="INotifier",s={unversionedId:"contracts/v4/reference/periphery/interfaces/INotifier",id:"contracts/v4/reference/periphery/interfaces/INotifier",title:"INotifier",description:"Git Source - Generated with forge doc",source:"@site/docs/contracts/v4/reference/periphery/interfaces/INotifier.md",sourceDirName:"contracts/v4/reference/periphery/interfaces",slug:"/contracts/v4/reference/periphery/interfaces/INotifier",permalink:"/docs/contracts/v4/reference/periphery/interfaces/INotifier",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/contracts/v4/reference/periphery/interfaces/INotifier.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"IMulticall_v4",permalink:"/docs/contracts/v4/reference/periphery/interfaces/IMulticall_v4"},next:{title:"IPermit2Forwarder",permalink:"/docs/contracts/v4/reference/periphery/interfaces/IPermit2Forwarder"}},o={},u=[{value:"Functions",id:"functions",level:2},{value:"subscriber",id:"subscriber",level:3},{value:"subscribe",id:"subscribe",level:3},{value:"unsubscribe",id:"unsubscribe",level:3},{value:"unsubscribeGasLimit",id:"unsubscribegaslimit",level:3},{value:"Events",id:"events",level:2},{value:"Subscription",id:"subscription",level:3},{value:"Unsubscription",id:"unsubscription",level:3},{value:"Errors",id:"errors",level:2},{value:"NotSubscribed",id:"notsubscribed",level:3},{value:"NoCodeSubscriber",id:"nocodesubscriber",level:3},{value:"GasLimitTooLow",id:"gaslimittoolow",level:3},{value:"SubscriptionReverted",id:"subscriptionreverted",level:3},{value:"ModifyLiquidityNotificationReverted",id:"modifyliquiditynotificationreverted",level:3},{value:"BurnNotificationReverted",id:"burnnotificationreverted",level:3},{value:"AlreadySubscribed",id:"alreadysubscribed",level:3}],c={toc:u};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"inotifier"},"INotifier"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-periphery/blob/ea2bf2e1ba6863bb809fc2ff791744f308c4a26d/src/interfaces/INotifier.sol"},"Git Source")," - Generated with ",(0,a.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-doc"},"forge doc")),(0,a.kt)("p",null,"Interface for the Notifier contract"),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("h3",{id:"subscriber"},"subscriber"),(0,a.kt)("p",null,"Returns the subscriber for a respective position"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function subscriber(uint256 tokenId) external view returns (ISubscriber subscriber);\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"uint256")),(0,a.kt)("td",{parentName:"tr",align:null},"the ERC721 tokenId")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"subscriber")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"ISubscriber")),(0,a.kt)("td",{parentName:"tr",align:null},"the subscriber contract")))),(0,a.kt)("h3",{id:"subscribe"},"subscribe"),(0,a.kt)("p",null,"Enables the subscriber to receive notifications for a respective position"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Calling subscribe when a position is already subscribed will revert")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"payable so it can be multicalled with NATIVE related actions")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"will revert if pool manager is locked")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function subscribe(uint256 tokenId, address newSubscriber, bytes calldata data) external payable;\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"uint256")),(0,a.kt)("td",{parentName:"tr",align:null},"the ERC721 tokenId")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"newSubscriber")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"address")),(0,a.kt)("td",{parentName:"tr",align:null},"the address of the subscriber contract")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"data")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"bytes")),(0,a.kt)("td",{parentName:"tr",align:null},"caller-provided data that's forwarded to the subscriber contract")))),(0,a.kt)("h3",{id:"unsubscribe"},"unsubscribe"),(0,a.kt)("p",null,"Removes the subscriber from receiving notifications for a respective position"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Callers must specify a high gas limit (remaining gas should be higher than unsubscriberGasLimit) such that the subscriber can be notified")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"payable so it can be multicalled with NATIVE related actions")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Must always allow a user to unsubscribe. In the case of a malicious subscriber, a user can always unsubscribe safely, ensuring liquidity is always modifiable.")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"will revert if pool manager is locked")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function unsubscribe(uint256 tokenId) external payable;\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"uint256")),(0,a.kt)("td",{parentName:"tr",align:null},"the ERC721 tokenId")))),(0,a.kt)("h3",{id:"unsubscribegaslimit"},"unsubscribeGasLimit"),(0,a.kt)("p",null,"Returns and determines the maximum allowable gas-used for notifying unsubscribe"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function unsubscribeGasLimit() external view returns (uint256);\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"<none>")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"uint256")),(0,a.kt)("td",{parentName:"tr",align:null},"uint256 the maximum gas limit when notifying a subscriber's ",(0,a.kt)("inlineCode",{parentName:"td"},"notifyUnsubscribe")," function")))),(0,a.kt)("h2",{id:"events"},"Events"),(0,a.kt)("h3",{id:"subscription"},"Subscription"),(0,a.kt)("p",null,"Emitted on a successful call to subscribe"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"event Subscription(uint256 indexed tokenId, address indexed subscriber);\n")),(0,a.kt)("h3",{id:"unsubscription"},"Unsubscription"),(0,a.kt)("p",null,"Emitted on a successful call to unsubscribe"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"event Unsubscription(uint256 indexed tokenId, address indexed subscriber);\n")),(0,a.kt)("h2",{id:"errors"},"Errors"),(0,a.kt)("h3",{id:"notsubscribed"},"NotSubscribed"),(0,a.kt)("p",null,"Thrown when unsubscribing without a subscriber"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"error NotSubscribed();\n")),(0,a.kt)("h3",{id:"nocodesubscriber"},"NoCodeSubscriber"),(0,a.kt)("p",null,"Thrown when a subscriber does not have code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"error NoCodeSubscriber();\n")),(0,a.kt)("h3",{id:"gaslimittoolow"},"GasLimitTooLow"),(0,a.kt)("p",null,"Thrown when a user specifies a gas limit too low to avoid valid unsubscribe notifications"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"error GasLimitTooLow();\n")),(0,a.kt)("h3",{id:"subscriptionreverted"},"SubscriptionReverted"),(0,a.kt)("p",null,"Wraps the revert message of the subscriber contract on a reverting subscription"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"error SubscriptionReverted(address subscriber, bytes reason);\n")),(0,a.kt)("h3",{id:"modifyliquiditynotificationreverted"},"ModifyLiquidityNotificationReverted"),(0,a.kt)("p",null,"Wraps the revert message of the subscriber contract on a reverting modify liquidity notification"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"error ModifyLiquidityNotificationReverted(address subscriber, bytes reason);\n")),(0,a.kt)("h3",{id:"burnnotificationreverted"},"BurnNotificationReverted"),(0,a.kt)("p",null,"Wraps the revert message of the subscriber contract on a reverting burn notification"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"error BurnNotificationReverted(address subscriber, bytes reason);\n")),(0,a.kt)("h3",{id:"alreadysubscribed"},"AlreadySubscribed"),(0,a.kt)("p",null,"Thrown when a tokenId already has a subscriber"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"error AlreadySubscribed(uint256 tokenId, address subscriber);\n")))}p.isMDXComponent=!0},3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>b});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),u=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(r),b=a,m=d["".concat(o,".").concat(b)]||d[b]||p[b]||i;return r?n.createElement(m,l(l({ref:t},c),{},{components:r})):n.createElement(m,l({ref:t},c))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var u=2;u<i;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);