"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[2806],{3607:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(6010);const i={note:a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},a.createElement("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})),tip:a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},a.createElement("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})),danger:a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},a.createElement("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})),info:a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},a.createElement("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})),caution:a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},a.createElement("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))},s={note:"secondary",tip:"success",danger:"danger",info:"info",caution:"warning"};function o(e){let{children:t,type:n,title:o=n,icon:l=i[n]}=e;return a.createElement("div",{className:(0,r.Z)("admonition",`admonition-${n}`,"alert",`alert--${s[n]}`)},a.createElement("div",{className:"admonition-heading"},a.createElement("h5",null,a.createElement("span",{className:"admonition-icon"},l),o)),a.createElement("div",{className:"admonition-content"},t))}},1871:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294);function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},5236:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(3117),r=n(7294),i=n(5730),s=n(8656),o=n(6010);const l="tabItem_LplD";function p(e){var t,n;const{lazy:i,block:p,defaultValue:m,values:d,groupId:c,className:u}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=d??h.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),k=(0,s.lx)(g,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===m?m:m??(null==(t=h.find((e=>e.props.default)))?void 0:t.props.value)??(null==(n=h[0])?void 0:n.props.value);if(null!==y&&!g.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:b}=(0,s.UB)(),[N,v]=(0,r.useState)(y),T=[],{blockElementScrollPositionUntilNextRender:x}=(0,s.o5)();if(null!=c){const e=f[c];null!=e&&e!==N&&g.some((t=>t.value===e))&&v(e)}const w=e=>{const t=e.currentTarget,n=T.indexOf(t),a=g[n].value;a!==N&&(x(t),v(a),null!=c&&b(c,a))},S=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]||T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]||T[T.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":p},u)},g.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>T.push(e),onKeyDown:S,onFocus:w,onClick:w},i,{className:(0,o.Z)("tabs__item",l,null==i?void 0:i.className,{"tabs__item--active":N===t})}),n??t)}))),i?(0,r.cloneElement)(h.filter((e=>e.props.value===N))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},h.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function m(e){const t=(0,i.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},7743:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>h,frontMatter:()=>l,metadata:()=>m,toc:()=>c});var a=n(3117),r=(n(7294),n(3905)),i=n(5236),s=n(1871),o=(n(1841),n(3607));const l={description:"Complete step-by-step guide to build dynamic mini apps using Next.js and the Sherry Links SDK",sidebar_position:1,tags:["nextjs","sdk","mini-apps","blockchain","tutorial"]},p="Guide - MiniApp with NextJS",m={unversionedId:"sdk/trigger-sdk/guides/guide-en",id:"sdk/trigger-sdk/guides/guide-en",title:"Guide - MiniApp with NextJS",description:"Complete step-by-step guide to build dynamic mini apps using Next.js and the Sherry Links SDK",source:"@site/docs/sdk/trigger-sdk/guides/guide-en.mdx",sourceDirName:"sdk/trigger-sdk/guides",slug:"/sdk/trigger-sdk/guides/guide-en",permalink:"/docs/sdk/trigger-sdk/guides/guide-en",editUrl:"https://github.com/hoffms/docs/tree/main/docs/sdk/trigger-sdk/guides/guide-en.mdx",tags:[{label:"nextjs",permalink:"/docs/tags/nextjs"},{label:"sdk",permalink:"/docs/tags/sdk"},{label:"mini-apps",permalink:"/docs/tags/mini-apps"},{label:"blockchain",permalink:"/docs/tags/blockchain"},{label:"tutorial",permalink:"/docs/tags/tutorial"}],version:"current",sidebarPosition:1,frontMatter:{description:"Complete step-by-step guide to build dynamic mini apps using Next.js and the Sherry Links SDK",sidebar_position:1,tags:["nextjs","sdk","mini-apps","blockchain","tutorial"]},sidebar:"sdkSidebar",previous:{title:"Overview",permalink:"/docs/sdk/trigger-sdk/overview"},next:{title:"Gu\xeda - MiniApp con NextJS",permalink:"/docs/sdk/trigger-sdk/guides/guide-es"}},d={},c=[{value:"Creating Mini Apps with Next.js and Sherry SDK",id:"creating-mini-apps-with-nextjs-and-sherry-sdk",level:2},{value:"\ud83d\udccb Table of Contents",id:"-table-of-contents",level:2},{value:"\ud83d\udd04 How Sherry Works - Understanding the Flow",id:"-how-sherry-works---understanding-the-flow",level:2},{value:"Step-by-Step Flow",id:"step-by-step-flow",level:3},{value:"\ud83d\udee0\ufe0f Prerequisites",id:"\ufe0f-prerequisites",level:2},{value:"\ud83c\udfd7\ufe0f Initial Setup",id:"\ufe0f-initial-setup",level:2},{value:"1. Create Next.js Project",id:"1-create-nextjs-project",level:3},{value:"2. Install Dependencies",id:"2-install-dependencies",level:3},{value:"3. Configure Next.js (Optional)",id:"3-configure-nextjs-optional",level:3},{value:"\ud83c\udfaf Creating the GET Endpoint - Metadata",id:"-creating-the-get-endpoint---metadata",level:2},{value:"1. Create the Route File",id:"1-create-the-route-file",level:3},{value:"2. Set Up the Basic GET Handler Structure",id:"2-set-up-the-basic-get-handler-structure",level:3},{value:"3. Define Basic App Information",id:"3-define-basic-app-information",level:3},{value:"4. Add Actions Array",id:"4-add-actions-array",level:3},{value:"5. Configure User Input Parameters",id:"5-configure-user-input-parameters",level:3},{value:"6. Validate and Return the Metadata",id:"6-validate-and-return-the-metadata",level:3},{value:"\ud83d\udcda Example 1: Simple Transfer (Learning Only)",id:"-example-1-simple-transfer-learning-only",level:2},{value:"Understanding the POST Request Flow",id:"understanding-the-post-request-flow",level:3},{value:"1. Set Up the POST Handler Structure",id:"1-set-up-the-post-handler-structure",level:3},{value:"2. Create the Transaction Object",id:"2-create-the-transaction-object",level:3},{value:"3. Complete Simple Transfer Example",id:"3-complete-simple-transfer-example",level:3},{value:"\ud83c\udfaf Example 2: Smart Contract Interaction (Minithon Ready)",id:"-example-2-smart-contract-interaction-minithon-ready",level:2},{value:"1. Understanding the Smart Contract",id:"1-understanding-the-smart-contract",level:3},{value:"2. Set Up Smart Contract Integration",id:"2-set-up-smart-contract-integration",level:3},{value:"3. Update Your Route File Imports",id:"3-update-your-route-file-imports",level:3},{value:"4. Build the Smart Contract POST Handler",id:"4-build-the-smart-contract-post-handler",level:3},{value:"5. Complete Smart Contract Handler",id:"5-complete-smart-contract-handler",level:3},{value:"6. Implement the Custom Algorithm",id:"6-implement-the-custom-algorithm",level:3},{value:"\ud83c\udf10 CORS Handling",id:"-cors-handling",level:2},{value:"\ud83e\uddea Testing Your Mini App",id:"-testing-your-mini-app",level:2},{value:"Option 1: Sherry Social App",id:"option-1-sherry-social-app",level:3},{value:"Option 2: Sherry Debugger (Recommended for Development)",id:"option-2-sherry-debugger-recommended-for-development",level:3},{value:"Step-by-Step Testing Process",id:"step-by-step-testing-process",level:3},{value:"\ud83c\udfc6 Minithon Guidelines",id:"-minithon-guidelines",level:2},{value:"What Makes a Winning Minithon Submission",id:"what-makes-a-winning-minithon-submission",level:3},{value:"What Won&#39;t Be Accepted in Minithon",id:"what-wont-be-accepted-in-minithon",level:3},{value:"\ud83d\udd27 Troubleshooting",id:"-troubleshooting",level:2},{value:"Error: &quot;Metadata validation failed&quot;",id:"error-metadata-validation-failed",level:3},{value:"Error: &quot;CORS policy blocks request&quot;",id:"error-cors-policy-blocks-request",level:3},{value:"Error: &quot;Parameter required&quot;",id:"error-parameter-required",level:3},{value:"Error: &quot;Transaction serialization failed&quot;",id:"error-transaction-serialization-failed",level:3},{value:"Error: &quot;ABI function not found&quot;",id:"error-abi-function-not-found",level:3},{value:"Error: &quot;Invalid contract address&quot;",id:"error-invalid-contract-address",level:3},{value:"\ud83d\ude80 Complete Code Example",id:"-complete-code-example",level:2},{value:"\ud83d\udcda Example Repository",id:"-example-repository",level:2},{value:"\ud83c\udfaf Next Steps",id:"-next-steps",level:2}],u={toc:c};function h(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"guide---miniapp-with-nextjs"},"Guide - MiniApp with NextJS"),(0,r.kt)("h2",{id:"creating-mini-apps-with-nextjs-and-sherry-sdk"},"Creating Mini Apps with Next.js and Sherry SDK"),(0,r.kt)("p",null,"This comprehensive guide will teach you step by step how to create powerful mini apps using ",(0,r.kt)("strong",{parentName:"p"},"Next.js")," and the ",(0,r.kt)("strong",{parentName:"p"},"Sherry Links SDK"),". Mini apps are dynamic applications that can be integrated into different platforms and allow users to interact with smart contracts seamlessly."),(0,r.kt)(o.Z,{type:"info",title:"Minithon Information",mdxType:"Admonition"},"This tutorial contains specific notes for **Minithon hackathon participants**. If the Minithon has already concluded, please ignore these references - all the technical content and examples remain fully applicable for learning and testing dynamic actions in production."),(0,r.kt)(o.Z,{type:"warning",title:"Important for Minithon Participants",mdxType:"Admonition"},"This tutorial progresses from a **basic example** (simple transfer) to a **complex example** (smart contract interaction). For minithon submissions, you'll need to implement the complex version that interacts with smart contracts, as simple transfers can already be handled by our built-in TransferAction."),(0,r.kt)("h2",{id:"-table-of-contents"},"\ud83d\udccb Table of Contents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#how-sherry-works---understanding-the-flow"},"How Sherry Works - Understanding the Flow")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#prerequisites"},"Prerequisites")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#initial-setup"},"Initial Setup")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#creating-the-get-endpoint---metadata"},"Creating the GET Endpoint - Metadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#example-1-simple-transfer-learning-only"},"Example 1: Simple Transfer (Learning Only)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#example-2-smart-contract-interaction-minithon-ready"},"Example 2: Smart Contract Interaction (Minithon Ready)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#cors-handling"},"CORS Handling")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#testing-your-mini-app"},"Testing Your Mini App")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#troubleshooting"},"Troubleshooting"))),(0,r.kt)("h2",{id:"-how-sherry-works---understanding-the-flow"},"\ud83d\udd04 How Sherry Works - Understanding the Flow"),(0,r.kt)("p",null,"Before we start building, it's important to understand how Sherry Links connects users, platforms, and your mini app backend. The following diagram illustrates the complete flow:"),(0,r.kt)("div",{style:{textAlign:"center",margin:"2rem 0"}},(0,r.kt)("img",{src:"/img/sherry-flow.png",alt:"Sherry Links Flow Diagram - How users interact with mini apps through the platform",style:{maxWidth:"100%",height:"auto",border:"1px solid var(--ifm-color-emphasis-300)",borderRadius:"8px",boxShadow:"0 4px 6px rgba(0, 0, 0, 0.1)"}})),(0,r.kt)("h3",{id:"step-by-step-flow"},"Step-by-Step Flow"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Sherry makes GET request and receives metadata")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The platform discovers your mini app and requests its configuration"),(0,r.kt)("li",{parentName:"ul"},"Your backend responds with metadata that defines the UI and functionality"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Back-End returns metadata")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Metadata includes form fields, action buttons, descriptions, and endpoints"),(0,r.kt)("li",{parentName:"ul"},"This tells Sherry how to render your mini app interface"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Sherry renders mini-app")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The platform creates a user-friendly form based on your metadata"),(0,r.kt)("li",{parentName:"ul"},"Users can see input fields, descriptions, and action buttons"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"User executes mini-app")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"User fills out the form with their desired parameters"),(0,r.kt)("li",{parentName:"ul"},"User clicks the action button to submit their request"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Sherry makes POST request and receives serialized transaction from Back-End")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Platform sends user input to your backend for processing"),(0,r.kt)("li",{parentName:"ul"},"Your backend applies custom logic and returns a ready-to-sign blockchain transaction"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"User confirms transaction")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"User reviews the transaction details in their wallet"),(0,r.kt)("li",{parentName:"ul"},"User signs and submits the transaction to the blockchain")))),(0,r.kt)(o.Z,{type:"tip",title:"Key Insight",mdxType:"Admonition"},"Your mini app acts as a **smart transaction factory** - it takes user input, applies your unique business logic, and outputs ready-to-sign blockchain transactions. This is what makes Sherry Links powerful: combining great UX with custom blockchain functionality."),(0,r.kt)("h2",{id:"\ufe0f-prerequisites"},"\ud83d\udee0\ufe0f Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Node.js"),": Version 18.x or higher"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Package Manager"),":npm, yarn, or pnpm"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Framework Knowledge"),": Basic Next.js and TypeScript"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Blockchain Basics"),": Smart contracts and ABI understanding")),(0,r.kt)("h2",{id:"\ufe0f-initial-setup"},"\ud83c\udfd7\ufe0f Initial Setup"),(0,r.kt)("h3",{id:"1-create-nextjs-project"},"1. Create Next.js Project"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"npm",label:"npm",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'npx create-next-app@latest my-sherry-app --typescript --eslint --tailwind --src-dir --app --import-alias "@/*"\ncd my-sherry-app\n'))),(0,r.kt)(s.Z,{value:"yarn",label:"yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'yarn create next-app my-sherry-app --typescript --eslint --tailwind --src-dir --app --import-alias "@/*"\ncd my-sherry-app\n'))),(0,r.kt)(s.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'pnpm create next-app my-sherry-app --typescript --eslint --tailwind --src-dir --app --import-alias "@/*"\ncd my-sherry-app\n')))),(0,r.kt)("h3",{id:"2-install-dependencies"},"2. Install Dependencies"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"npm",label:"npm",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @sherrylinks/sdk viem wagmi\n"))),(0,r.kt)(s.Z,{value:"yarn",label:"yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @sherrylinks/sdk viem wagmi\n"))),(0,r.kt)(s.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add @sherrylinks/sdk viem wagmi\n")))),(0,r.kt)("h3",{id:"3-configure-nextjs-optional"},"3. Configure Next.js (Optional)"),(0,r.kt)(o.Z,{type:"tip",title:"Build Optimization",mdxType:"Admonition"},"To avoid build errors with ESLint, you can disable it in `next.config.js`:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="next.config.js"',title:'"next.config.js"'},"/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  eslint: {\n    ignoreDuringBuilds: true,\n  },\n};\n\nmodule.exports = nextConfig;\n")),(0,r.kt)("h2",{id:"-creating-the-get-endpoint---metadata"},"\ud83c\udfaf Creating the GET Endpoint - Metadata"),(0,r.kt)("p",null,"The GET endpoint is the ",(0,r.kt)("strong",{parentName:"p"},"heart")," of your mini app. Here you define all the information and structure that platforms need to render your application."),(0,r.kt)(o.Z,{type:"note",title:"Understanding Metadata",mdxType:"Admonition"},"Metadata tells platforms **how** to render your mini app, **what** inputs to show users, and **where** to send the data when users interact with it."),(0,r.kt)("h3",{id:"1-create-the-route-file"},"1. Create the Route File"),(0,r.kt)("p",null,"Create the file ",(0,r.kt)("inlineCode",{parentName:"p"},"app/api/my-app/route.ts"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="app/api/my-app/route.ts"',title:'"app/api/my-app/route.ts"'},"import { NextRequest, NextResponse } from 'next/server';\nimport { createMetadata, Metadata, ValidatedMetadata } from '@sherrylinks/sdk';\n")),(0,r.kt)("h3",{id:"2-set-up-the-basic-get-handler-structure"},"2. Set Up the Basic GET Handler Structure"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function GET(req: NextRequest) {\n  try {\n    // Get server URL information\n    const host = req.headers.get('host') || 'localhost:3000';\n    const protocol = req.headers.get('x-forwarded-proto') || 'http';\n\n    // Construct the base URL\n    const serverUrl = `${protocol}://${host}`;\n\n    // We'll build the metadata object step by step below\n  } catch (error) {\n    console.error('Error creating metadata:', error);\n    return NextResponse.json({ error: 'Failed to create metadata' }, { status: 500 });\n  }\n}\n")),(0,r.kt)(o.Z,{type:"info",title:"Why serverUrl?",mdxType:"Admonition"},"This automatically detects whether you're running locally (`http://localhost:3000`) or in production (`https://yourdomain.com`) and constructs the correct base URL for your mini app."),(0,r.kt)("h3",{id:"3-define-basic-app-information"},"3. Define Basic App Information"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function GET(req: NextRequest) {\n  try {\n    const host = req.headers.get('host') || 'localhost:3000';\n    const protocol = req.headers.get('x-forwarded-proto') || 'http';\n    const serverUrl = `${protocol}://${host}`;\n\n    const metadata: Metadata = {\n      url: 'https://sherry.social',\n      icon: 'https://avatars.githubusercontent.com/u/117962315',\n      title: 'Timestamped Message',\n      baseUrl: serverUrl,\n      description: 'Store a message with an optimized timestamp calculated by our algorithm',\n      // Actions will be added in the next step\n    };\n  } catch (error) {\n    // Error handling...\n  }\n}\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("strong",null,"Understanding Each Field")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"url")),(0,r.kt)("td",{parentName:"tr",align:null},"Main website URL for your project"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"https://sherry.social"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"icon")),(0,r.kt)("td",{parentName:"tr",align:null},"Publicly accessible image URL (200x200px recommended)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"https://example.com/icon.png"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"title")),(0,r.kt)("td",{parentName:"tr",align:null},"Short, descriptive name for your mini app"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"Timestamped Message"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"baseUrl")),(0,r.kt)("td",{parentName:"tr",align:null},"Server URL where your mini app is hosted (auto-detected)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"https://yourdomain.com"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"description")),(0,r.kt)("td",{parentName:"tr",align:null},"Clear explanation of what your mini app does"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"Store messages with optimized timestamps"')))))),(0,r.kt)("h3",{id:"4-add-actions-array"},"4. Add Actions Array"),(0,r.kt)(o.Z,{type:"caution",title:"Actions Define Functionality",mdxType:"Admonition"},"Actions define **what users can do** with your mini app. Each action represents a button with specific functionality."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const metadata: Metadata = {\n  url: 'https://sherry.social',\n  icon: 'https://avatars.githubusercontent.com/u/117962315',\n  title: 'Timestamped Message',\n  baseUrl: serverUrl,\n  description: 'Store a message with an optimized timestamp calculated by our algorithm',\n  actions: [\n    {\n      type: 'dynamic',\n      label: 'Store Message',\n      description: 'Store your message with a custom timestamp calculated for optimal storage',\n      chains: { source: 'fuji' },\n      path: `/api/my-app`,\n      // Parameters will be added in the next step\n    },\n  ],\n};\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("strong",null,"Understanding Action Properties")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"type"),": Always use ",(0,r.kt)("inlineCode",{parentName:"li"},'"dynamic"')," for complex mini apps that need custom logic"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"label"),": The text that will appear on the action button"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"description"),": Explanation of what this specific action does"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"chains.source"),": The blockchain where the transaction will execute",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"fuji"')," = Avalanche Fuji Testnet"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"avalanche"')," = Avalanche Mainnet"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"path"),": The API endpoint that will handle the POST request"))),(0,r.kt)("h3",{id:"5-configure-user-input-parameters"},"5. Configure User Input Parameters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const metadata: Metadata = {\n  url: 'https://sherry.social',\n  icon: 'https://avatars.githubusercontent.com/u/117962315',\n  title: 'Timestamped Message',\n  baseUrl: serverUrl,\n  description: 'Store a message with an optimized timestamp calculated by our algorithm',\n  actions: [\n    {\n      type: 'dynamic',\n      label: 'Store Message',\n      description: 'Store your message with a custom timestamp calculated for optimal storage',\n      chains: { source: 'fuji' },\n      path: `/api/my-app`,\n      params: [\n        {\n          name: 'message',\n          label: 'Your Message Hermano!',\n          type: 'text',\n          required: true,\n          description: 'Enter the message you want to store on the blockchain',\n        },\n      ],\n    },\n  ],\n};\n")),(0,r.kt)(o.Z,{type:"info",title:"Parameter Types Available",mdxType:"Admonition"},'- `"text"`: Single-line text input - `"textarea"`: Multi-line text input - `"number"`: Numeric input with validation - `"email"`: Email input with validation - `"url"`: URL input with validation'),(0,r.kt)("h3",{id:"6-validate-and-return-the-metadata"},"6. Validate and Return the Metadata"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function GET(req: NextRequest) {\n  try {\n    const host = req.headers.get('host') || 'localhost:3000';\n    const protocol = req.headers.get('x-forwarded-proto') || 'http';\n    const serverUrl = `${protocol}://${host}`;\n\n    const metadata: Metadata = {\n      url: 'https://sherry.social',\n      icon: 'https://avatars.githubusercontent.com/u/117962315',\n      title: 'Timestamped Message',\n      baseUrl: serverUrl,\n      description: 'Store a message with an optimized timestamp calculated by our algorithm',\n      actions: [\n        {\n          type: 'dynamic',\n          label: 'Store Message',\n          description: 'Store your message with a custom timestamp calculated for optimal storage',\n          chains: { source: 'fuji' },\n          path: `/api/my-app`,\n          params: [\n            {\n              name: 'message',\n              label: 'Your Message Hermano!',\n              type: 'text',\n              required: true,\n              description: 'Enter the message you want to store on the blockchain',\n            },\n          ],\n        },\n      ],\n    };\n\n    // Validate metadata using the SDK\n    const validated: ValidatedMetadata = createMetadata(metadata);\n\n    // Return with CORS headers for cross-origin access\n    return NextResponse.json(validated, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n      },\n    });\n  } catch (error) {\n    console.error('Error creating metadata:', error);\n    return NextResponse.json({ error: 'Failed to create metadata' }, { status: 500 });\n  }\n}\n")),(0,r.kt)(o.Z,{type:"success",title:"Validation Benefits",mdxType:"Admonition"},"The `createMetadata()` function validates your metadata structure and ensures it meets the Sherry SDK requirements before returning it to the platform."),(0,r.kt)("h2",{id:"-example-1-simple-transfer-learning-only"},"\ud83d\udcda Example 1: Simple Transfer (Learning Only)"),(0,r.kt)(o.Z,{type:"danger",title:"Important Note",mdxType:"Admonition"},"This example is for **learning the basic concepts only**. Simple transfers like this are already supported by our built-in TransferAction and will **NOT be accepted** in minithon submissions. Use this to understand the flow, then move to Example 2 for minithon-ready functionality."),(0,r.kt)("h3",{id:"understanding-the-post-request-flow"},"Understanding the POST Request Flow"),(0,r.kt)("p",null,"When a user fills out your mini app form and clicks the action button, the platform will send a ",(0,r.kt)("strong",{parentName:"p"},"POST request")," to your endpoint with the user's input as URL parameters."),(0,r.kt)("h3",{id:"1-set-up-the-post-handler-structure"},"1. Set Up the POST Handler Structure"),(0,r.kt)("p",null,"Add these imports at the top of your file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="app/api/my-app/route.ts"',title:'"app/api/my-app/route.ts"'},"import { NextRequest, NextResponse } from 'next/server';\nimport { avalancheFuji } from 'viem/chains';\nimport { createMetadata, Metadata, ValidatedMetadata, ExecutionResponse } from '@sherrylinks/sdk';\nimport { serialize } from 'wagmi';\n")),(0,r.kt)("p",null,"Now let's build the POST handler:"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"basic",label:"Basic Structure",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function POST(req: NextRequest) {\n  try {\n    // Step 1: Extract parameters from the URL\n    const { searchParams } = new URL(req.url);\n    const message = searchParams.get('message');\n\n    // We'll add validation and transaction creation below\n  } catch (error) {\n    console.error('Error in POST request:', error);\n    return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });\n  }\n}\n"))),(0,r.kt)(s.Z,{value:"validation",label:"With Validation",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function POST(req: NextRequest) {\n  try {\n    // Extract parameters\n    const { searchParams } = new URL(req.url);\n    const message = searchParams.get('message');\n\n    // Validate required parameters\n    if (!message) {\n      return NextResponse.json(\n        { error: 'Message parameter is required' },\n        {\n          status: 400,\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n            'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n          },\n        },\n      );\n    }\n\n    // Transaction creation will be added next\n  } catch (error) {\n    // Error handling...\n  }\n}\n")))),(0,r.kt)("h3",{id:"2-create-the-transaction-object"},"2. Create the Transaction Object"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// Create a simple transfer transaction\nconst tx = {\n  to: '0x5ee75a1B1648C023e885E58bD3735Ae273f2cc52',\n  value: BigInt(1000000), // 1000000 wei = 0.000001 AVAX\n  chainId: avalancheFuji.id,\n};\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("strong",null,"Understanding Transaction Properties")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"to"),": The destination address that will receive the transfer"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"value"),": The amount to transfer in wei (smallest unit). Use ",(0,r.kt)("inlineCode",{parentName:"li"},"BigInt()")," for large numbers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"chainId"),": The numeric ID of the blockchain (avalancheFuji.id = 43113)"))),(0,r.kt)("h3",{id:"3-complete-simple-transfer-example"},"3. Complete Simple Transfer Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Complete POST Handler - Simple Transfer"',title:'"Complete',POST:!0,Handler:!0,"-":!0,Simple:!0,'Transfer"':!0},"export async function POST(req: NextRequest) {\n  try {\n    const { searchParams } = new URL(req.url);\n    const message = searchParams.get('message');\n\n    if (!message) {\n      return NextResponse.json(\n        { error: 'Message parameter is required' },\n        {\n          status: 400,\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n            'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n          },\n        },\n      );\n    }\n\n    const tx = {\n      to: '0x5ee75a1B1648C023e885E58bD3735Ae273f2cc52',\n      value: BigInt(1000000),\n      chainId: avalancheFuji.id,\n    };\n\n    // Serialize the transaction for the blockchain\n    const serialized = serialize(tx);\n\n    // Create the response object that Sherry expects\n    const resp: ExecutionResponse = {\n      serializedTransaction: serialized,\n      chainId: avalancheFuji.name, // Use the chain name, not ID\n    };\n\n    // Return the response with CORS headers\n    return NextResponse.json(resp, {\n      status: 200,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n      },\n    });\n  } catch (error) {\n    console.error('Error in POST request:', error);\n    return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });\n  }\n}\n")),(0,r.kt)(o.Z,{type:"warning",title:"Why This Isn't Minithon-Ready",mdxType:"Admonition"},"This example only performs a simple token transfer. Since our platform already provides **TransferAction** for this exact functionality, minithon submissions need to demonstrate more complex, value-added functionality."),(0,r.kt)("h2",{id:"-example-2-smart-contract-interaction-minithon-ready"},"\ud83c\udfaf Example 2: Smart Contract Interaction (Minithon Ready)"),(0,r.kt)(o.Z,{type:"success",title:"Minithon Suitable",mdxType:"Admonition"},"This example demonstrates **smart contract interaction** with custom business logic, which is what we're looking for in minithon submissions."),(0,r.kt)("h3",{id:"1-understanding-the-smart-contract"},"1. Understanding the Smart Contract"),(0,r.kt)("p",null,"First, let's understand what our smart contract does:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity",metastring:'title="TimestampedMessage Contract"',title:'"TimestampedMessage','Contract"':!0},' // SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n/**\n * @title TimestampedMessage\n * @dev Stores messages with an optimized timestamp\n */\ncontract TimestampedMessage {\n    event MessageStored(address indexed sender, string message, uint256 timestamp, uint256 optimizedTimestamp);\n\n    struct MessageData {\n        address sender;\n        string message;\n        uint256 timestamp;\n        uint256 optimizedTimestamp;\n    }\n\n    // Array to store all messages\n    MessageData[] public messages;\n\n    // Mapping from address to their message count\n    mapping(address => uint256) public userMessageCount;\n\n    /**\n     * @dev Store a message with an optimized timestamp\n     * @param message The message to store\n     * @param optimizedTimestamp A timestamp calculated off-chain\n     */\n    function storeMessage(string memory message, uint256 optimizedTimestamp) public {\n        // Store message with the current block timestamp and the optimized timestamp\n        messages.push(MessageData({\n            sender: msg.sender,\n            message: message,\n            timestamp: block.timestamp,\n            optimizedTimestamp: optimizedTimestamp\n        }));\n\n        // Increment message count for the sender\n        userMessageCount[msg.sender]++;\n\n        // Emit event\n        emit MessageStored(msg.sender, message, block.timestamp, optimizedTimestamp);\n    }\n\n    /**\n     * @dev Get the count of all messages\n     */\n    function getMessageCount() public view returns (uint256) {\n        return messages.length;\n    }\n\n    /**\n     * @dev Get a message by index\n     */\n    function getMessage(uint256 index) public view returns (\n        address sender,\n        string memory message,\n        uint256 timestamp,\n        uint256 optimizedTimestamp\n    ) {\n        require(index < messages.length, "Index out of bounds");\n        MessageData memory data = messages[index];\n        return (data.sender, data.message, data.timestamp, data.optimizedTimestamp);\n    }\n\n    /**\n     * @dev Get all messages from a specific sender\n     */\n    function getMessagesBySender(address sender) public view returns (\n        string[] memory messageTexts,\n        uint256[] memory timestamps,\n        uint256[] memory optimizedTimestamps\n    ) {\n        uint256 count = userMessageCount[sender];\n\n        messageTexts = new string[](count);\n        timestamps = new uint256[](count);\n        optimizedTimestamps = new uint256[](count);\n\n        uint256 currentIndex = 0;\n\n        for (uint256 i = 0; i < messages.length; i++) {\n            if (messages[i].sender == sender) {\n                messageTexts[currentIndex] = messages[i].message;\n                timestamps[currentIndex] = messages[i].timestamp;\n                optimizedTimestamps[currentIndex] = messages[i].optimizedTimestamp;\n                currentIndex++;\n            }\n        }\n\n        return (messageTexts, timestamps, optimizedTimestamps);\n    }\n}\n')),(0,r.kt)(o.Z,{type:"info",title:"Why This is Minithon-Ready",mdxType:"Admonition"},"- Custom business logic (optimized timestamp calculation) - Smart contract state management - Event emission for tracking - Complex data structures - Goes beyond simple transfers"),(0,r.kt)("h3",{id:"2-set-up-smart-contract-integration"},"2. Set Up Smart Contract Integration"),(0,r.kt)("p",null,"Create the file ",(0,r.kt)("inlineCode",{parentName:"p"},"blockchain/abi.ts")," with your contract's ABI:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="blockchain/abi.ts"',title:'"blockchain/abi.ts"'},"export const abi = [\n  {\n    inputs: [\n      { internalType: 'string', name: 'message', type: 'string' },\n      { internalType: 'uint256', name: 'optimizedTimestamp', type: 'uint256' },\n    ],\n    name: 'storeMessage',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  // ... other functions like getMessageCount, getMessage, getMessagesBySender\n  // ... events and additional contract interface items\n] as const;\n")),(0,r.kt)("h3",{id:"3-update-your-route-file-imports"},"3. Update Your Route File Imports"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="app/api/my-app/route.ts"',title:'"app/api/my-app/route.ts"'},"import { NextRequest, NextResponse } from 'next/server';\nimport { avalancheFuji } from 'viem/chains';\nimport { createMetadata, Metadata, ValidatedMetadata, ExecutionResponse } from '@sherrylinks/sdk';\nimport { serialize } from 'wagmi';\nimport { abi } from '@/blockchain/abi';\n\n// Contract address on Avalanche Fuji Testnet\nconst CONTRACT_ADDRESS = '0x75dd8326F5293ff1f1f4E013c8Fda20db126f3e3';\n")),(0,r.kt)("h3",{id:"4-build-the-smart-contract-post-handler"},"4. Build the Smart Contract POST Handler"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"step1",label:"Step 1: Validation",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function POST(req: NextRequest) {\n  try {\n    // Extract user input\n    const { searchParams } = new URL(req.url);\n    const message = searchParams.get('message');\n\n    // Validate required parameters\n    if (!message) {\n      return NextResponse.json(\n        { error: 'Message parameter is required' },\n        {\n          status: 400,\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n            'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n          },\n        },\n      );\n    }\n\n    // Custom logic and transaction creation will be added below\n  } catch (error) {\n    console.error('Error in POST request:', error);\n    return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });\n  }\n}\n"))),(0,r.kt)(s.Z,{value:"step2",label:"Step 2: Custom Logic",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function POST(req: NextRequest) {\n  try {\n    const { searchParams } = new URL(req.url);\n    const message = searchParams.get('message');\n\n    if (!message) {\n      // Validation error...\n    }\n\n    // CUSTOM BUSINESS LOGIC: Calculate optimized timestamp\n    // This is what makes your mini app unique and valuable\n    const optimizedTimestamp = calculateOptimizedTimestamp(message);\n\n    console.log(`Processing message: \"${message}\"`);\n    console.log(`Optimized timestamp: ${optimizedTimestamp}`);\n\n    // Transaction creation will be added next\n  } catch (error) {\n    // Error handling...\n  }\n}\n"))),(0,r.kt)(s.Z,{value:"step3",label:"Step 3: Contract Transaction",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export async function POST(req: NextRequest) {\n  try {\n    const { searchParams } = new URL(req.url);\n    const message = searchParams.get('message');\n\n    if (!message) {\n      // Validation...\n    }\n\n    const optimizedTimestamp = calculateOptimizedTimestamp(message);\n\n    // Create smart contract interaction transaction\n    const tx = {\n      address: CONTRACT_ADDRESS,\n      abi: abi,\n      functionName: 'storeMessage',\n      args: [message, optimizedTimestamp],\n    };\n\n    // Serialization and response will be added next\n  } catch (error) {\n    // Error handling...\n  }\n}\n")))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("strong",null,"Understanding Smart Contract Transaction Properties")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"address"),": The deployed contract address on the blockchain"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"abi"),": The contract's ABI (Application Binary Interface)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"functionName"),": The exact name of the contract function to call"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"args"),": Array of arguments to pass to the function, in the correct order"))),(0,r.kt)("h3",{id:"5-complete-smart-contract-handler"},"5. Complete Smart Contract Handler"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Complete POST Handler - Smart Contract Interaction"',title:'"Complete',POST:!0,Handler:!0,"-":!0,Smart:!0,Contract:!0,'Interaction"':!0},"export async function POST(req: NextRequest) {\n  try {\n    const { searchParams } = new URL(req.url);\n    const message = searchParams.get('message');\n\n    if (!message) {\n      return NextResponse.json(\n        { error: 'Message parameter is required' },\n        {\n          status: 400,\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n            'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n          },\n        },\n      );\n    }\n\n    // Calculate optimized timestamp using custom algorithm\n    const optimizedTimestamp = calculateOptimizedTimestamp(message);\n\n    // Create smart contract transaction\n    const tx = {\n      address: CONTRACT_ADDRESS,\n      abi: abi,\n      functionName: 'storeMessage',\n      args: [message, optimizedTimestamp],\n    };\n\n    // Serialize transaction\n    const serialized = serialize(tx);\n\n    // Create response\n    const resp: ExecutionResponse = {\n      serializedTransaction: serialized,\n      chainId: avalancheFuji.name,\n    };\n\n    return NextResponse.json(resp, {\n      status: 200,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n      },\n    });\n  } catch (error) {\n    console.error('Error in POST request:', error);\n    return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });\n  }\n}\n")),(0,r.kt)("h3",{id:"6-implement-the-custom-algorithm"},"6. Implement the Custom Algorithm"),(0,r.kt)(o.Z,{type:"tip",title:"Algorithm Innovation",mdxType:"Admonition"},"This is where you add **unique value** to your mini app. The more sophisticated your algorithm, the more impressive your minithon submission will be!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Custom Algorithm Function"',title:'"Custom',Algorithm:!0,'Function"':!0},"// Custom algorithm to calculate optimized timestamp based on message content\nfunction calculateOptimizedTimestamp(message: string): number {\n  // Get the current timestamp as a starting point\n  const currentTimestamp = Math.floor(Date.now() / 1000);\n\n  // Custom algorithm: Add character codes to create a unique offset\n  // This is your unique business logic - you can make this as complex as needed\n  let offset = 0;\n\n  for (let i = 0; i < message.length; i++) {\n    // Sum character codes and use position as a multiplier\n    offset += message.charCodeAt(i) * (i + 1);\n  }\n\n  // Ensure offset is reasonable (1 hour max)\n  const maxOffset = 3600;\n  offset = offset % maxOffset;\n\n  // Calculate final optimized timestamp\n  return currentTimestamp + offset;\n}\n")),(0,r.kt)(o.Z,{type:"success",title:"Why This Algorithm is Valuable",mdxType:"Admonition"},"- Creates deterministic but unique timestamps based on message content - Adds meaningful business logic beyond simple transfers - Can be expanded with more sophisticated algorithms - Provides real utility for timestamp optimization"),(0,r.kt)("h2",{id:"-cors-handling"},"\ud83c\udf10 CORS Handling"),(0,r.kt)("p",null,"To allow your mini app to be used from different domains and platforms, you need to handle CORS preflight requests:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="CORS OPTIONS Handler"',title:'"CORS',OPTIONS:!0,'Handler"':!0},"export async function OPTIONS(request: NextRequest) {\n  return new NextResponse(null, {\n    status: 204, // No Content\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers':\n        'Content-Type, Authorization, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version',\n    },\n  });\n}\n")),(0,r.kt)(o.Z,{type:"info",title:"Why OPTIONS is Needed",mdxType:"Admonition"},"When platforms try to use your mini app from a different domain, browsers first send an **OPTIONS request** to check if cross-origin requests are allowed. This handler tells the browser that your API accepts requests from any domain."),(0,r.kt)("h2",{id:"-testing-your-mini-app"},"\ud83e\uddea Testing Your Mini App"),(0,r.kt)("h3",{id:"option-1-sherry-social-app"},"Option 1: Sherry Social App"),(0,r.kt)("div",{style:{padding:"1rem",backgroundColor:"var(--ifm-color-info-contrast-background)",borderLeft:"4px solid var(--ifm-color-info)",borderRadius:"4px",margin:"1rem 0"}},(0,r.kt)("strong",null,"Production Testing"),(0,r.kt)("ol",null,(0,r.kt)("li",null,"Go to"," ",(0,r.kt)("a",{href:"https://app.sherry.social/home",target:"_blank"},"https://app.sherry.social/home")),(0,r.kt)("li",null,"In the address field, enter your GET endpoint URL"),(0,r.kt)("li",null,"Example: ",(0,r.kt)("code",null,"http://localhost:3000/api/my-app")," (for local development)"),(0,r.kt)("li",null,"The platform will automatically render your mini app"))),(0,r.kt)("h3",{id:"option-2-sherry-debugger-recommended-for-development"},"Option 2: Sherry Debugger (Recommended for Development)"),(0,r.kt)(o.Z,{type:"tip",title:"Debugger Benefits",mdxType:"Admonition"},"The debugger is specifically designed for **testing and debugging** mini apps during development with multiple input methods."),(0,r.kt)(o.Z,{type:"warning",title:"Important: Localhost URLs Won't Work in Debugger",mdxType:"Admonition"},"When using the debugger, **localhost URLs will NOT work** because the debugger runs on a different domain and cannot access your local development server. Instead, you should **copy your metadata object** and paste it directly into the debugger's JSON or TypeScript input fields."),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"json",label:"JSON Testing (Recommended)",default:!0,mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Go to ",(0,r.kt)("a",{parentName:"li",href:"https://app.sherry.social/debugger"},"https://app.sherry.social/debugger")),(0,r.kt)("li",{parentName:"ol"},"Visit your GET endpoint directly in browser: ",(0,r.kt)("inlineCode",{parentName:"li"},"http://localhost:3000/api/my-app")),(0,r.kt)("li",{parentName:"ol"},"Copy the entire JSON response from your browser"),(0,r.kt)("li",{parentName:"ol"},"Paste it into the debugger's ",(0,r.kt)("strong",{parentName:"li"},"JSON input")," field"),(0,r.kt)("li",{parentName:"ol"},"This is the most reliable way to test your metadata structure"))),(0,r.kt)(s.Z,{value:"typescript",label:"TypeScript Testing",mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Copy your metadata object directly from your TypeScript code"),(0,r.kt)("li",{parentName:"ol"},"Paste it into the debugger's ",(0,r.kt)("strong",{parentName:"li"},"TypeScript input")," field"),(0,r.kt)("li",{parentName:"ol"},"Good for rapid iteration on metadata structure without running a server"),(0,r.kt)("li",{parentName:"ol"},"Make sure to copy just the metadata object, not the entire function"))),(0,r.kt)(s.Z,{value:"production",label:"Production URL Testing",mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Only use this method if your mini app is deployed to a ",(0,r.kt)("strong",{parentName:"li"},"public URL")),(0,r.kt)("li",{parentName:"ol"},"Paste your production GET endpoint URL into the debugger"),(0,r.kt)("li",{parentName:"ol"},"Example: ",(0,r.kt)("inlineCode",{parentName:"li"},"https://yourdomain.com/api/my-app")),(0,r.kt)("li",{parentName:"ol"},"This will work for deployed applications, not localhost")))),(0,r.kt)("h3",{id:"step-by-step-testing-process"},"Step-by-Step Testing Process"),(0,r.kt)("div",{style:{display:"grid",gridTemplateColumns:"repeat(auto-fit, minmax(250px, 1fr))",gap:"1rem",margin:"1rem 0"}},(0,r.kt)("div",{style:{padding:"1rem",border:"1px solid var(--ifm-color-emphasis-300)",borderRadius:"8px"}},(0,r.kt)("h4",null,"1. Start Development Server"),(0,r.kt)("code",null,"npm run dev")),(0,r.kt)("div",{style:{padding:"1rem",border:"1px solid var(--ifm-color-emphasis-300)",borderRadius:"8px"}},(0,r.kt)("h4",null,"2. Test GET Endpoint"),(0,r.kt)("p",null,"Open ",(0,r.kt)("code",null,"localhost:3000/api/my-app"))),(0,r.kt)("div",{style:{padding:"1rem",border:"1px solid var(--ifm-color-emphasis-300)",borderRadius:"8px"}},(0,r.kt)("h4",null,"3. Copy Metadata to Debugger"),(0,r.kt)("p",null,"Copy JSON response and paste in debugger")),(0,r.kt)("div",{style:{padding:"1rem",border:"1px solid var(--ifm-color-emphasis-300)",borderRadius:"8px"}},(0,r.kt)("h4",null,"4. Test Submission"),(0,r.kt)("p",null,"Fill form and test POST endpoint"))),(0,r.kt)("h2",{id:"-minithon-guidelines"},"\ud83c\udfc6 Minithon Guidelines"),(0,r.kt)("h3",{id:"what-makes-a-winning-minithon-submission"},"What Makes a Winning Minithon Submission"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"technical",label:"Technical Requirements",default:!0,mdxType:"TabItem"},(0,r.kt)("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 my-8"},(0,r.kt)("div",{className:"p-4 border border-solid border-[var(--ifm-color-emphasis-300)] rounded-lg"},(0,r.kt)("h4",null,"Smart Contract Interaction"),(0,r.kt)("p",null,"Meaningful functionality beyond simple transfers")),(0,r.kt)("div",{className:"p-4 border border-solid border-[var(--ifm-color-emphasis-300)] rounded-lg"},(0,r.kt)("h4",null,"Custom Business Logic"),(0,r.kt)("p",null,"Unique algorithms that add real value")),(0,r.kt)("div",{className:"p-4 border border-solid border-[var(--ifm-color-emphasis-300)] rounded-lg"},(0,r.kt)("h4",null,"Multiple Parameters"),(0,r.kt)("p",null,"Sophisticated data handling")),(0,r.kt)("div",{className:"p-4 border border-solid border-[var(--ifm-color-emphasis-300)] rounded-lg"},(0,r.kt)("h4",null,"Error Handling"),(0,r.kt)("p",null,"User-friendly error messages")))),(0,r.kt)(s.Z,{value:"creativity",label:"Creativity Factors",mdxType:"TabItem"},(0,r.kt)("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4 mt-6"},(0,r.kt)("div",{className:"border rounded-lg p-4"},(0,r.kt)("h3",{className:"font-semibold mb-2"},"\ud83c\udfa8 NFT Collections"),(0,r.kt)("p",{className:"text-sm text-gray-600"},"Let users mint NFTs directly from announcement posts")),(0,r.kt)("div",{className:"border rounded-lg p-4"},(0,r.kt)("h3",{className:"font-semibold mb-2"},"\ud83d\udd04 Token Swaps"),(0,r.kt)("p",{className:"text-sm text-gray-600"},"Enable DeFi trading without leaving social media")),(0,r.kt)("div",{className:"border rounded-lg p-4"},(0,r.kt)("h3",{className:"font-semibold mb-2"},"\ud83d\uddf3\ufe0f DAO Governance"),(0,r.kt)("p",{className:"text-sm text-gray-600"},"Embed voting directly in community discussions")),(0,r.kt)("div",{className:"border rounded-lg p-4"},(0,r.kt)("h3",{className:"font-semibold mb-2"},"\ud83d\udc9d Donations"),(0,r.kt)("p",{className:"text-sm text-gray-600"},"Accept crypto donations with custom amounts and recipients")))),(0,r.kt)(s.Z,{value:"examples",label:"Good Ideas",mdxType:"TabItem"},(0,r.kt)("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4 mt-6"},(0,r.kt)("div",{className:"border rounded-lg p-4"},(0,r.kt)("h3",{className:"font-semibold mb-2"},"\ud83d\udcda Documentation"),(0,r.kt)("p",{className:"text-sm text-gray-600"},"Complete API reference and guides")),(0,r.kt)("div",{className:"border rounded-lg p-4"},(0,r.kt)("h3",{className:"font-semibold mb-2"},"\ud83d\udcac Community"),(0,r.kt)("p",{className:"text-sm text-gray-600"},(0,r.kt)("a",{href:"https://discord.com/invite/sherry",className:"text-blue-600 hover:underline"},"Join our Discord"))),(0,r.kt)("div",{className:"border rounded-lg p-4"},(0,r.kt)("h3",{className:"font-semibold mb-2"},"\ud83d\udc1b Issues"),(0,r.kt)("p",{className:"text-sm text-gray-600"},(0,r.kt)("a",{href:"https://github.com/orgs/SherryLabs/repositories",className:"text-blue-600 hover:underline"},"Report on GitHub"))),(0,r.kt)("div",{className:"border rounded-lg p-4"},(0,r.kt)("h3",{className:"font-semibold mb-2"},"\ud83d\udcd6 Examples"),(0,r.kt)("p",{className:"text-sm text-gray-600"},"Complete working examples and demos"))))),(0,r.kt)("h3",{id:"what-wont-be-accepted-in-minithon"},"What Won't Be Accepted in Minithon"),(0,r.kt)("div",{style:{display:"grid",gridTemplateColumns:"repeat(auto-fit, minmax(250px, 1fr))",gap:"1rem",margin:"1rem 0"}},(0,r.kt)("div",{style:{padding:"1rem",border:"2px solid #dc2626",borderRadius:"8px"}},(0,r.kt)("h4",null,"Simple Token Transfers"),(0,r.kt)("p",null,"Use our TransferAction instead")),(0,r.kt)("div",{style:{padding:"1rem",border:"2px solid #dc2626",borderRadius:"8px"}},(0,r.kt)("h4",null,"Copy-Paste Examples"),(0,r.kt)("p",null,"Without meaningful modifications")),(0,r.kt)("div",{style:{padding:"1rem",border:"2px solid #dc2626",borderRadius:"8px"}},(0,r.kt)("h4",null,"No Smart Contracts"),(0,r.kt)("p",null,"Mini apps must interact with contracts")),(0,r.kt)("div",{style:{padding:"1rem",border:"2px solid #dc2626",borderRadius:"8px"}},(0,r.kt)("h4",null,"Broken Implementations"),(0,r.kt)("p",null,"Must work end-to-end"))),(0,r.kt)("h2",{id:"-troubleshooting"},"\ud83d\udd27 Troubleshooting"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"get-errors",label:"GET Endpoint Issues",default:!0,mdxType:"TabItem"},(0,r.kt)("h3",{id:"error-metadata-validation-failed"},'Error: "Metadata validation failed"'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Symptoms"),": Mini app doesn't load in debugger"),(0,r.kt)(o.Z,{type:"danger",title:"Solutions",mdxType:"Admonition"},"- Check that all required fields are present in metadata - Verify data types match expected format - Use `createMetadata()` to validate structure - Check console for specific validation errors"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Debug Metadata"',title:'"Debug','Metadata"':!0},"try {\n  const validated = createMetadata(metadata);\n  console.log('Metadata validation successful:', validated);\n} catch (error) {\n  console.error('Metadata validation failed:', error);\n}\n")),(0,r.kt)("h3",{id:"error-cors-policy-blocks-request"},'Error: "CORS policy blocks request"'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Symptoms"),': "Access to fetch has been blocked by CORS policy"'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Correct CORS Headers"',title:'"Correct',CORS:!0,'Headers"':!0},'headers: {\n  "Access-Control-Allow-Origin": "*",\n  "Access-Control-Allow-Methods": "GET, POST, PUT, DELETE, OPTIONS",\n  "Access-Control-Allow-Headers": "Content-Type, Authorization",\n}\n'))),(0,r.kt)(s.Z,{value:"post-errors",label:"POST Endpoint Issues",mdxType:"TabItem"},(0,r.kt)("h3",{id:"error-parameter-required"},'Error: "Parameter required"'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Symptoms"),": Error about missing parameters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Debug Parameters"',title:'"Debug','Parameters"':!0},"console.log('All parameters:', Object.fromEntries(searchParams.entries()));\nconsole.log('Message parameter:', searchParams.get('message'));\n")),(0,r.kt)("h3",{id:"error-transaction-serialization-failed"},'Error: "Transaction serialization failed"'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Symptoms"),": Error during serialize() call"),(0,r.kt)(o.Z,{type:"caution",title:"Common Fixes",mdxType:"Admonition"},"- Use `BigInt(1000000)` not `1000000` for large numbers - Verify chainId is correct for target network - Ensure all required transaction fields are present - For contract calls, verify ABI matches deployed contract")),(0,r.kt)(s.Z,{value:"contract-errors",label:"Smart Contract Issues",mdxType:"TabItem"},(0,r.kt)("h3",{id:"error-abi-function-not-found"},'Error: "ABI function not found"'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Symptoms"),": Error about missing or incorrect function"),(0,r.kt)(o.Z,{type:"info",title:"Verification Steps",mdxType:"Admonition"},"- Verify function name exactly matches contract (case-sensitive) - Check that function is public in smart contract - Ensure ABI is complete and includes the function - Verify parameter types match contract function signature"),(0,r.kt)("h3",{id:"error-invalid-contract-address"},'Error: "Invalid contract address"'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Symptoms"),": Transaction fails with address-related errors"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Verify contract is deployed to correct network (Fuji testnet)"),(0,r.kt)("li",{parentName:"ul"},"Check address is properly formatted (starts with 0x)"),(0,r.kt)("li",{parentName:"ul"},"Ensure correct contract address for your network"),(0,r.kt)("li",{parentName:"ul"},"Verify contract is verified on blockchain explorer")))),(0,r.kt)("h2",{id:"-complete-code-example"},"\ud83d\ude80 Complete Code Example"),(0,r.kt)("p",null,"Here's a complete, ",(0,r.kt)("strong",{parentName:"p"},"minithon-ready")," route file that demonstrates all concepts:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="app/api/my-app/route.ts - Complete Example"',title:'"app/api/my-app/route.ts',"-":!0,Complete:!0,'Example"':!0},"import { NextRequest, NextResponse } from 'next/server';\nimport { avalancheFuji } from 'viem/chains';\nimport { createMetadata, Metadata, ValidatedMetadata, ExecutionResponse } from '@sherrylinks/sdk';\nimport { serialize } from 'wagmi';\nimport { abi } from '@/blockchain/abi';\n\nconst CONTRACT_ADDRESS = '0x75dd8326F5293ff1f1f4E013c8Fda20db126f3e3';\n\nexport async function GET(req: NextRequest) {\n  try {\n    const host = req.headers.get('host') || 'localhost:3000';\n    const protocol = req.headers.get('x-forwarded-proto') || 'http';\n    const serverUrl = `${protocol}://${host}`;\n\n    const metadata: Metadata = {\n      url: 'https://sherry.social',\n      icon: 'https://avatars.githubusercontent.com/u/117962315',\n      title: 'Timestamped Message',\n      baseUrl: serverUrl,\n      description: 'Store a message with an optimized timestamp calculated by our algorithm',\n      actions: [\n        {\n          type: 'dynamic',\n          label: 'Store Message',\n          description: 'Store your message with a custom timestamp calculated for optimal storage',\n          chains: { source: 'fuji' },\n          path: `/api/my-app`,\n          params: [\n            {\n              name: 'message',\n              label: 'Your Message Hermano!',\n              type: 'text',\n              required: true,\n              description: 'Enter the message you want to store on the blockchain',\n            },\n          ],\n        },\n      ],\n    };\n\n    const validated: ValidatedMetadata = createMetadata(metadata);\n\n    return NextResponse.json(validated, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n      },\n    });\n  } catch (error) {\n    return NextResponse.json({ error: 'Failed to create metadata' }, { status: 500 });\n  }\n}\n\nexport async function POST(req: NextRequest) {\n  try {\n    const { searchParams } = new URL(req.url);\n    const message = searchParams.get('message');\n\n    if (!message) {\n      return NextResponse.json(\n        { error: 'Message parameter is required' },\n        {\n          status: 400,\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n            'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n          },\n        },\n      );\n    }\n\n    // Custom business logic\n    const optimizedTimestamp = calculateOptimizedTimestamp(message);\n\n    // Smart contract interaction\n    const tx = {\n      address: CONTRACT_ADDRESS,\n      abi: abi,\n      functionName: 'storeMessage',\n      args: [message, optimizedTimestamp],\n    };\n\n    const serialized = serialize(tx);\n\n    const resp: ExecutionResponse = {\n      serializedTransaction: serialized,\n      chainId: avalancheFuji.name,\n    };\n\n    return NextResponse.json(resp, {\n      status: 200,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n      },\n    });\n  } catch (error) {\n    console.error('Error in POST request:', error);\n    return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });\n  }\n}\n\nexport async function OPTIONS(request: NextRequest) {\n  return new NextResponse(null, {\n    status: 204,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers':\n        'Content-Type, Authorization, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version',\n    },\n  });\n}\n\n// Custom algorithm - this is where you add your unique value\nfunction calculateOptimizedTimestamp(message: string): number {\n  const currentTimestamp = Math.floor(Date.now() / 1000);\n\n  let offset = 0;\n\n  for (let i = 0; i < message.length; i++) {\n    offset += message.charCodeAt(i) * (i + 1);\n  }\n\n  const maxOffset = 3600;\n  offset = offset % maxOffset;\n\n  return currentTimestamp + offset;\n}\n")),(0,r.kt)("h2",{id:"-example-repository"},"\ud83d\udcda Example Repository"),(0,r.kt)(o.Z,{type:"info",title:"Complete Examples Available",mdxType:"Admonition"},"You can find complete working examples in our repository: [SherryLabs/sherry-example](https://github.com/SherryLabs/sherry-example)"),(0,r.kt)("p",null,"This repository contains:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Both simple transfer and smart contract examples"),(0,r.kt)("li",{parentName:"ul"},"Complete smart contract code with Solidity source"),(0,r.kt)("li",{parentName:"ul"},"Deployment scripts and configuration"),(0,r.kt)("li",{parentName:"ul"},"ABI files and setup instructions"),(0,r.kt)("li",{parentName:"ul"},"Multiple parameter examples"),(0,r.kt)("li",{parentName:"ul"},"Advanced testing utilities"),(0,r.kt)("li",{parentName:"ul"},"Comprehensive documentation")),(0,r.kt)("h2",{id:"-next-steps"},"\ud83c\udfaf Next Steps"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"learning",label:"For Learning",default:!0,mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Start with the simple transfer")," example to understand the flow"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Move to the smart contract")," example once comfortable"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Experiment with different")," parameter types and validations"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Test thoroughly")," using the debugger"))),(0,r.kt)(s.Z,{value:"minithon",label:"For Minithon Participants",mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Skip the simple transfer")," - go directly to smart contract interaction"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Design your unique algorithm")," - what problem will you solve?"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Plan your smart contract")," - what functions and data do you need?"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Create multiple parameters")," - make it sophisticated and useful"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Test extensively")," - ensure everything works perfectly"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Document your innovation")," - explain why your solution is unique"))),(0,r.kt)(s.Z,{value:"deployment",label:"Deployment Considerations",mdxType:"TabItem"},(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Local Development"),": Use ",(0,r.kt)("inlineCode",{parentName:"li"},"http://localhost:3000")," for testing"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Production"),": Deploy to Vercel, Netlify, or your preferred platform"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Custom Domains"),": Update your metadata URLs to match your domain"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Environment Variables"),": Store sensitive data like private keys securely"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Testing Networks"),": Start with Fuji testnet, then move to mainnet")))),(0,r.kt)("hr",null),(0,r.kt)("div",{className:"text-center p-8 bg-[var(--ifm-color-primary-contrast-background)] rounded-lg my-8"},(0,r.kt)("h2",null,"\ud83d\ude80 Ready to Build Something Amazing?"),(0,r.kt)("p",null,"Remember, the key to a successful minithon submission is not just making it work, but making it"," ",(0,r.kt)("strong",null,"useful"),", ",(0,r.kt)("strong",null,"innovative"),", and"," ",(0,r.kt)("strong",null,"technically impressive"),". Focus on solving real problems with creative solutions that demonstrate the power of blockchain technology combined with great user experience."),(0,r.kt)("p",null,(0,r.kt)("strong",null,"Good luck with your mini app development and minithon submission! \ud83c\udfc6"))))}h.isMDXComponent=!0}}]);