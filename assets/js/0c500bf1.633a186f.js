"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[6810],{49646:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(83117),r=(n(67294),n(3905));const i={},l="PositionManager",o={unversionedId:"contracts/v4/reference/periphery/PositionManager",id:"contracts/v4/reference/periphery/PositionManager",title:"PositionManager",description:"Git Source - Generated with forge doc",source:"@site/docs/contracts/v4/reference/periphery/PositionManager.md",sourceDirName:"contracts/v4/reference/periphery",slug:"/contracts/v4/reference/periphery/PositionManager",permalink:"/docs/contracts/v4/reference/periphery/PositionManager",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/contracts/v4/reference/periphery/PositionManager.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"PositionDescriptor",permalink:"/docs/contracts/v4/reference/periphery/PositionDescriptor"},next:{title:"UniswapV4DeployerCompetition",permalink:"/docs/contracts/v4/reference/periphery/UniswapV4DeployerCompetition"}},s={},p=[{value:"State Variables",id:"state-variables",level:2},{value:"nextTokenId",id:"nexttokenid",level:3},{value:"tokenDescriptor",id:"tokendescriptor",level:3},{value:"positionInfo",id:"positioninfo",level:3},{value:"poolKeys",id:"poolkeys",level:3},{value:"Functions",id:"functions",level:2},{value:"constructor",id:"constructor",level:3},{value:"checkDeadline",id:"checkdeadline",level:3},{value:"onlyIfApproved",id:"onlyifapproved",level:3},{value:"onlyIfPoolManagerLocked",id:"onlyifpoolmanagerlocked",level:3},{value:"tokenURI",id:"tokenuri",level:3},{value:"modifyLiquidities",id:"modifyliquidities",level:3},{value:"modifyLiquiditiesWithoutUnlock",id:"modifyliquiditieswithoutunlock",level:3},{value:"msgSender",id:"msgsender",level:3},{value:"_handleAction",id:"_handleaction",level:3},{value:"_increase",id:"_increase",level:3},{value:"_increaseFromDeltas",id:"_increasefromdeltas",level:3},{value:"_decrease",id:"_decrease",level:3},{value:"_mint",id:"_mint",level:3},{value:"_mintFromDeltas",id:"_mintfromdeltas",level:3},{value:"_burn",id:"_burn",level:3},{value:"_settlePair",id:"_settlepair",level:3},{value:"_takePair",id:"_takepair",level:3},{value:"_close",id:"_close",level:3},{value:"_clearOrTake",id:"_clearortake",level:3},{value:"_sweep",id:"_sweep",level:3},{value:"_modifyLiquidity",id:"_modifyliquidity",level:3},{value:"_pay",id:"_pay",level:3},{value:"_setSubscribed",id:"_setsubscribed",level:3},{value:"_setUnsubscribed",id:"_setunsubscribed",level:3},{value:"transferFrom",id:"transferfrom",level:3},{value:"getPoolAndPositionInfo",id:"getpoolandpositioninfo",level:3},{value:"getPositionLiquidity",id:"getpositionliquidity",level:3},{value:"_getLiquidity",id:"_getliquidity",level:3}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"positionmanager"},"PositionManager"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-periphery/blob/ea2bf2e1ba6863bb809fc2ff791744f308c4a26d/src/PositionManager.sol"},"Git Source")," - Generated with ",(0,r.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-doc"},"forge doc")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Inherits:"),"\n",(0,r.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/periphery/interfaces/IPositionManager"},"IPositionManager"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/periphery/base/ERC721Permit_v4"},"ERC721Permit_v4"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/periphery/base/PoolInitializer_v4"},"PoolInitializer_v4"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/periphery/base/Multicall_v4"},"Multicall_v4"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/periphery/base/DeltaResolver"},"DeltaResolver"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/periphery/base/ReentrancyLock"},"ReentrancyLock"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/periphery/base/BaseActionsRouter"},"BaseActionsRouter"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/periphery/base/Notifier"},"Notifier"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/periphery/base/Permit2Forwarder"},"Permit2Forwarder"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/periphery/base/NativeWrapper"},"NativeWrapper")),(0,r.kt)("p",null,"The PositionManager (PosM) contract is responsible for creating liquidity positions on v4.\nPosM mints and manages ERC721 tokens associated with each position."),(0,r.kt)("h2",{id:"state-variables"},"State Variables"),(0,r.kt)("h3",{id:"nexttokenid"},"nextTokenId"),(0,r.kt)("p",null,"Used to get the ID that will be used for the next minted liquidity position"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"The ID of the next token that will be minted. Skips 0")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 public nextTokenId = 1;\n")),(0,r.kt)("h3",{id:"tokendescriptor"},"tokenDescriptor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"IPositionDescriptor public immutable tokenDescriptor;\n")),(0,r.kt)("h3",{id:"positioninfo"},"positionInfo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 tokenId => PositionInfo info) public positionInfo;\n")),(0,r.kt)("h3",{id:"poolkeys"},"poolKeys"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes25 poolId => PoolKey poolKey) public poolKeys;\n")),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},'constructor(\n    IPoolManager _poolManager,\n    IAllowanceTransfer _permit2,\n    uint256 _unsubscribeGasLimit,\n    IPositionDescriptor _tokenDescriptor,\n    IWETH9 _weth9\n)\n    BaseActionsRouter(_poolManager)\n    Permit2Forwarder(_permit2)\n    ERC721Permit_v4("Uniswap v4 Positions NFT", "UNI-V4-POSM")\n    Notifier(_unsubscribeGasLimit)\n    NativeWrapper(_weth9);\n')),(0,r.kt)("h3",{id:"checkdeadline"},"checkDeadline"),(0,r.kt)("p",null,"Reverts if the deadline has passed"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier checkDeadline(uint256 deadline);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"deadline")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"The timestamp at which the call is no longer valid, passed in by the caller")))),(0,r.kt)("h3",{id:"onlyifapproved"},"onlyIfApproved"),(0,r.kt)("p",null,"Reverts if the caller is not the owner or approved for the ERC721 token"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"either msg.sender or msgSender() is passed in as the caller\nmsgSender() should ONLY be used if this is called from within the unlockCallback, unless the codepath has reentrancy protection")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyIfApproved(address caller, uint256 tokenId) override;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"caller")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"The address of the caller")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"the unique identifier of the ERC721 token")))),(0,r.kt)("h3",{id:"onlyifpoolmanagerlocked"},"onlyIfPoolManagerLocked"),(0,r.kt)("p",null,"Enforces that the PoolManager is locked."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyIfPoolManagerLocked() override;\n")),(0,r.kt)("h3",{id:"tokenuri"},"tokenURI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function tokenURI(uint256 tokenId) public view override returns (string memory);\n")),(0,r.kt)("h3",{id:"modifyliquidities"},"modifyLiquidities"),(0,r.kt)("p",null,"Unlocks Uniswap v4 PoolManager and batches actions for modifying liquidity"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This is the standard entrypoint for the PositionManager")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function modifyLiquidities(bytes calldata unlockData, uint256 deadline)\n    external\n    payable\n    isNotLocked\n    checkDeadline(deadline);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"unlockData")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:null},"is an encoding of actions, and parameters for those actions")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"deadline")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"is the deadline for the batched actions to be executed")))),(0,r.kt)("h3",{id:"modifyliquiditieswithoutunlock"},"modifyLiquiditiesWithoutUnlock"),(0,r.kt)("p",null,"Batches actions for modifying liquidity without unlocking v4 PoolManager"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This must be called by a contract that has already unlocked the v4 PoolManager")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function modifyLiquiditiesWithoutUnlock(bytes calldata actions, bytes[] calldata params) external payable isNotLocked;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"actions")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:null},"the actions to perform")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"params")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bytes[]")),(0,r.kt)("td",{parentName:"tr",align:null},"the parameters to provide for the actions")))),(0,r.kt)("h3",{id:"msgsender"},"msgSender"),(0,r.kt)("p",null,"function that returns address considered executor of the actions"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"The other context functions, _msgData and _msgValue, are not supported by this contract\nIn many contracts this will be the address that calls the initial entry point that calls ",(0,r.kt)("inlineCode",{parentName:"em"},"_executeActions"),(0,r.kt)("inlineCode",{parentName:"em"},"msg.sender")," shouldn't be used, as this will be the v4 pool manager contract that calls ",(0,r.kt)("inlineCode",{parentName:"em"},"unlockCallback"),"\nIf using ReentrancyLock.sol, this function can return _getLocker()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function msgSender() public view override returns (address);\n")),(0,r.kt)("h3",{id:"_handleaction"},"_handleAction"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _handleAction(uint256 action, bytes calldata params) internal virtual override;\n")),(0,r.kt)("h3",{id:"_increase"},"_increase"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Calling increase with 0 liquidity will credit the caller with any underlying fees of the position")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _increase(uint256 tokenId, uint256 liquidity, uint128 amount0Max, uint128 amount1Max, bytes calldata hookData)\n    internal\n    onlyIfApproved(msgSender(), tokenId);\n")),(0,r.kt)("h3",{id:"_increasefromdeltas"},"_increaseFromDeltas"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"The liquidity delta is derived from open deltas in the pool manager.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _increaseFromDeltas(uint256 tokenId, uint128 amount0Max, uint128 amount1Max, bytes calldata hookData)\n    internal\n    onlyIfApproved(msgSender(), tokenId);\n")),(0,r.kt)("h3",{id:"_decrease"},"_decrease"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Calling decrease with 0 liquidity will credit the caller with any underlying fees of the position")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _decrease(uint256 tokenId, uint256 liquidity, uint128 amount0Min, uint128 amount1Min, bytes calldata hookData)\n    internal\n    onlyIfApproved(msgSender(), tokenId);\n")),(0,r.kt)("h3",{id:"_mint"},"_mint"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _mint(\n    PoolKey calldata poolKey,\n    int24 tickLower,\n    int24 tickUpper,\n    uint256 liquidity,\n    uint128 amount0Max,\n    uint128 amount1Max,\n    address owner,\n    bytes calldata hookData\n) internal;\n")),(0,r.kt)("h3",{id:"_mintfromdeltas"},"_mintFromDeltas"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _mintFromDeltas(\n    PoolKey calldata poolKey,\n    int24 tickLower,\n    int24 tickUpper,\n    uint128 amount0Max,\n    uint128 amount1Max,\n    address owner,\n    bytes calldata hookData\n) internal;\n")),(0,r.kt)("h3",{id:"_burn"},"_burn"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"this is overloaded with ERC721Permit_v4._burn")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _burn(uint256 tokenId, uint128 amount0Min, uint128 amount1Min, bytes calldata hookData)\n    internal\n    onlyIfApproved(msgSender(), tokenId);\n")),(0,r.kt)("h3",{id:"_settlepair"},"_settlePair"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _settlePair(Currency currency0, Currency currency1) internal;\n")),(0,r.kt)("h3",{id:"_takepair"},"_takePair"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _takePair(Currency currency0, Currency currency1, address recipient) internal;\n")),(0,r.kt)("h3",{id:"_close"},"_close"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _close(Currency currency) internal;\n")),(0,r.kt)("h3",{id:"_clearortake"},"_clearOrTake"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"integrators may elect to forfeit positive deltas with clear\nif the forfeit amount exceeds the user-specified max, the amount is taken instead\nif there is no credit, no call is made.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _clearOrTake(Currency currency, uint256 amountMax) internal;\n")),(0,r.kt)("h3",{id:"_sweep"},"_sweep"),(0,r.kt)("p",null,"Sweeps the entire contract balance of specified currency to the recipient"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _sweep(Currency currency, address to) internal;\n")),(0,r.kt)("h3",{id:"_modifyliquidity"},"_modifyLiquidity"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"if there is a subscriber attached to the position, this function will notify the subscriber")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _modifyLiquidity(\n    PositionInfo info,\n    PoolKey memory poolKey,\n    int256 liquidityChange,\n    bytes32 salt,\n    bytes calldata hookData\n) internal returns (BalanceDelta liquidityDelta, BalanceDelta feesAccrued);\n")),(0,r.kt)("h3",{id:"_pay"},"_pay"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _pay(Currency currency, address payer, uint256 amount) internal override;\n")),(0,r.kt)("h3",{id:"_setsubscribed"},"_setSubscribed"),(0,r.kt)("p",null,"an internal helper used by Notifier"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _setSubscribed(uint256 tokenId) internal override;\n")),(0,r.kt)("h3",{id:"_setunsubscribed"},"_setUnsubscribed"),(0,r.kt)("p",null,"an internal helper used by Notifier"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _setUnsubscribed(uint256 tokenId) internal override;\n")),(0,r.kt)("h3",{id:"transferfrom"},"transferFrom"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"overrides solmate transferFrom in case a notification to subscribers is needed")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"will revert if pool manager is locked")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferFrom(address from, address to, uint256 id) public virtual override onlyIfPoolManagerLocked;\n")),(0,r.kt)("h3",{id:"getpoolandpositioninfo"},"getPoolAndPositionInfo"),(0,r.kt)("p",null,"Returns the pool key and position info of a position"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPoolAndPositionInfo(uint256 tokenId) public view returns (PoolKey memory poolKey, PositionInfo info);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"the ERC721 tokenId")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"poolKey")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PoolKey")),(0,r.kt)("td",{parentName:"tr",align:null},"the pool key of the position")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"info")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"PositionInfo")),(0,r.kt)("td",{parentName:"tr",align:null},"a uint256 packed value holding information about the position including the range (tickLower, tickUpper)")))),(0,r.kt)("h3",{id:"getpositionliquidity"},"getPositionLiquidity"),(0,r.kt)("p",null,"Returns the liquidity of a position"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"this value can be processed as an amount0 and amount1 by using the LiquidityAmounts library")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPositionLiquidity(uint256 tokenId) external view returns (uint128 liquidity);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"the ERC721 tokenId")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"liquidity")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint128")),(0,r.kt)("td",{parentName:"tr",align:null},"the position's liquidity, as a liquidityAmount")))),(0,r.kt)("h3",{id:"_getliquidity"},"_getLiquidity"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _getLiquidity(uint256 tokenId, PoolKey memory poolKey, int24 tickLower, int24 tickUpper)\n    internal\n    view\n    returns (uint128 liquidity);\n")))}u.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,k=c["".concat(s,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(k,l(l({ref:t},d),{},{components:n})):a.createElement(k,l({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"}}]);