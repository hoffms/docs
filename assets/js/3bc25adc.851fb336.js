"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[12311],{32431:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var a=n(83117),l=(n(67294),n(3905));const r={},i="StateLibrary",o={unversionedId:"contracts/v4/reference/core/libraries/StateLibrary",id:"contracts/v4/reference/core/libraries/StateLibrary",title:"StateLibrary",description:"Git Source - Generated with forge doc",source:"@site/docs/contracts/v4/reference/core/libraries/StateLibrary.md",sourceDirName:"contracts/v4/reference/core/libraries",slug:"/contracts/v4/reference/core/libraries/StateLibrary",permalink:"/docs/contracts/v4/reference/core/libraries/StateLibrary",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/contracts/v4/reference/core/libraries/StateLibrary.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"SqrtPriceMath",permalink:"/docs/contracts/v4/reference/core/libraries/SqrtPriceMath"},next:{title:"SwapMath",permalink:"/docs/contracts/v4/reference/core/libraries/SwapMath"}},p={},d=[{value:"State Variables",id:"state-variables",level:2},{value:"POOLS_SLOT",id:"pools_slot",level:3},{value:"FEE_GROWTH_GLOBAL0_OFFSET",id:"fee_growth_global0_offset",level:3},{value:"LIQUIDITY_OFFSET",id:"liquidity_offset",level:3},{value:"TICKS_OFFSET",id:"ticks_offset",level:3},{value:"TICK_BITMAP_OFFSET",id:"tick_bitmap_offset",level:3},{value:"POSITIONS_OFFSET",id:"positions_offset",level:3},{value:"Functions",id:"functions",level:2},{value:"getSlot0",id:"getslot0",level:3},{value:"getTickInfo",id:"gettickinfo",level:3},{value:"getTickLiquidity",id:"gettickliquidity",level:3},{value:"getTickFeeGrowthOutside",id:"gettickfeegrowthoutside",level:3},{value:"getFeeGrowthGlobals",id:"getfeegrowthglobals",level:3},{value:"getLiquidity",id:"getliquidity",level:3},{value:"getTickBitmap",id:"gettickbitmap",level:3},{value:"getPositionInfo",id:"getpositioninfo",level:3},{value:"getPositionInfo",id:"getpositioninfo-1",level:3},{value:"getPositionLiquidity",id:"getpositionliquidity",level:3},{value:"getFeeGrowthInside",id:"getfeegrowthinside",level:3},{value:"_getPoolStateSlot",id:"_getpoolstateslot",level:3},{value:"_getTickInfoSlot",id:"_gettickinfoslot",level:3},{value:"_getPositionInfoSlot",id:"_getpositioninfoslot",level:3}],k={toc:d};function m(t){let{components:e,...n}=t;return(0,l.kt)("wrapper",(0,a.Z)({},k,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"statelibrary"},"StateLibrary"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-core/blob/80311e34080fee64b6fc6c916e9a51a437d0e482/src/libraries/StateLibrary.sol"},"Git Source")," - Generated with ",(0,l.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-doc"},"forge doc")),(0,l.kt)("p",null,"A helper library to provide state getters that use extsload"),(0,l.kt)("h2",{id:"state-variables"},"State Variables"),(0,l.kt)("h3",{id:"pools_slot"},"POOLS_SLOT"),(0,l.kt)("p",null,"index of pools mapping in the PoolManager"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 public constant POOLS_SLOT = bytes32(uint256(6));\n")),(0,l.kt)("h3",{id:"fee_growth_global0_offset"},"FEE_GROWTH_GLOBAL0_OFFSET"),(0,l.kt)("p",null,"index of feeGrowthGlobal0X128 in Pool.State"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 public constant FEE_GROWTH_GLOBAL0_OFFSET = 1;\n")),(0,l.kt)("h3",{id:"liquidity_offset"},"LIQUIDITY_OFFSET"),(0,l.kt)("p",null,"index of liquidity in Pool.State"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 public constant LIQUIDITY_OFFSET = 3;\n")),(0,l.kt)("h3",{id:"ticks_offset"},"TICKS_OFFSET"),(0,l.kt)("p",null,"index of TicksInfo mapping in Pool.State: mapping(int24 => TickInfo) ticks;"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 public constant TICKS_OFFSET = 4;\n")),(0,l.kt)("h3",{id:"tick_bitmap_offset"},"TICK_BITMAP_OFFSET"),(0,l.kt)("p",null,"index of tickBitmap mapping in Pool.State"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 public constant TICK_BITMAP_OFFSET = 5;\n")),(0,l.kt)("h3",{id:"positions_offset"},"POSITIONS_OFFSET"),(0,l.kt)("p",null,"index of Position.State mapping in Pool.State: mapping(bytes32 => Position.State) positions;"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 public constant POSITIONS_OFFSET = 6;\n")),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("h3",{id:"getslot0"},"getSlot0"),(0,l.kt)("p",null,"Get Slot0 of the pool: sqrtPriceX96, tick, protocolFee, lpFee"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Corresponds to pools","[poolId]",".slot0")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getSlot0(IPoolManager manager, PoolId poolId)\n    internal\n    view\n    returns (uint160 sqrtPriceX96, int24 tick, uint24 protocolFee, uint24 lpFee);\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"manager")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"IPoolManager")),(0,l.kt)("td",{parentName:"tr",align:null},"The pool manager contract.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"poolId")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"PoolId")),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the pool.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"sqrtPriceX96")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint160")),(0,l.kt)("td",{parentName:"tr",align:null},"The square root of the price of the pool, in Q96 precision.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tick")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int24")),(0,l.kt)("td",{parentName:"tr",align:null},"The current tick of the pool.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"protocolFee")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint24")),(0,l.kt)("td",{parentName:"tr",align:null},"The protocol fee of the pool.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"lpFee")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint24")),(0,l.kt)("td",{parentName:"tr",align:null},"The swap fee of the pool.")))),(0,l.kt)("h3",{id:"gettickinfo"},"getTickInfo"),(0,l.kt)("p",null,"Retrieves the tick information of a pool at a specific tick."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Corresponds to pools","[poolId]",".ticks","[tick]")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTickInfo(IPoolManager manager, PoolId poolId, int24 tick)\n    internal\n    view\n    returns (uint128 liquidityGross, int128 liquidityNet, uint256 feeGrowthOutside0X128, uint256 feeGrowthOutside1X128);\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"manager")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"IPoolManager")),(0,l.kt)("td",{parentName:"tr",align:null},"The pool manager contract.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"poolId")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"PoolId")),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the pool.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tick")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int24")),(0,l.kt)("td",{parentName:"tr",align:null},"The tick to retrieve information for.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"liquidityGross")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint128")),(0,l.kt)("td",{parentName:"tr",align:null},"The total position liquidity that references this tick")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"liquidityNet")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int128")),(0,l.kt)("td",{parentName:"tr",align:null},"The amount of net liquidity added (subtracted) when tick is crossed from left to right (right to left)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"feeGrowthOutside0X128")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint256")),(0,l.kt)("td",{parentName:"tr",align:null},"fee growth per unit of liquidity on the ",(0,l.kt)("em",{parentName:"td"},"other")," side of this tick (relative to the current tick)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"feeGrowthOutside1X128")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint256")),(0,l.kt)("td",{parentName:"tr",align:null},"fee growth per unit of liquidity on the ",(0,l.kt)("em",{parentName:"td"},"other")," side of this tick (relative to the current tick)")))),(0,l.kt)("h3",{id:"gettickliquidity"},"getTickLiquidity"),(0,l.kt)("p",null,"Retrieves the liquidity information of a pool at a specific tick."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Corresponds to pools","[poolId]",".ticks","[tick]",".liquidityGross and pools","[poolId]",".ticks","[tick]",".liquidityNet. A more gas efficient version of getTickInfo")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTickLiquidity(IPoolManager manager, PoolId poolId, int24 tick)\n    internal\n    view\n    returns (uint128 liquidityGross, int128 liquidityNet);\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"manager")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"IPoolManager")),(0,l.kt)("td",{parentName:"tr",align:null},"The pool manager contract.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"poolId")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"PoolId")),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the pool.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tick")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int24")),(0,l.kt)("td",{parentName:"tr",align:null},"The tick to retrieve liquidity for.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"liquidityGross")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint128")),(0,l.kt)("td",{parentName:"tr",align:null},"The total position liquidity that references this tick")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"liquidityNet")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int128")),(0,l.kt)("td",{parentName:"tr",align:null},"The amount of net liquidity added (subtracted) when tick is crossed from left to right (right to left)")))),(0,l.kt)("h3",{id:"gettickfeegrowthoutside"},"getTickFeeGrowthOutside"),(0,l.kt)("p",null,"Retrieves the fee growth outside a tick range of a pool"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Corresponds to pools","[poolId]",".ticks","[tick]",".feeGrowthOutside0X128 and pools","[poolId]",".ticks","[tick]",".feeGrowthOutside1X128. A more gas efficient version of getTickInfo")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTickFeeGrowthOutside(IPoolManager manager, PoolId poolId, int24 tick)\n    internal\n    view\n    returns (uint256 feeGrowthOutside0X128, uint256 feeGrowthOutside1X128);\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"manager")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"IPoolManager")),(0,l.kt)("td",{parentName:"tr",align:null},"The pool manager contract.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"poolId")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"PoolId")),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the pool.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tick")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int24")),(0,l.kt)("td",{parentName:"tr",align:null},"The tick to retrieve fee growth for.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"feeGrowthOutside0X128")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint256")),(0,l.kt)("td",{parentName:"tr",align:null},"fee growth per unit of liquidity on the ",(0,l.kt)("em",{parentName:"td"},"other")," side of this tick (relative to the current tick)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"feeGrowthOutside1X128")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint256")),(0,l.kt)("td",{parentName:"tr",align:null},"fee growth per unit of liquidity on the ",(0,l.kt)("em",{parentName:"td"},"other")," side of this tick (relative to the current tick)")))),(0,l.kt)("h3",{id:"getfeegrowthglobals"},"getFeeGrowthGlobals"),(0,l.kt)("p",null,"Retrieves the global fee growth of a pool."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Corresponds to pools","[poolId]",".feeGrowthGlobal0X128 and pools","[poolId]",".feeGrowthGlobal1X128")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Note that feeGrowthGlobal can be artificially inflated\nFor pools with a single liquidity position, actors can donate to themselves to freely inflate feeGrowthGlobal\natomically donating and collecting fees in the same unlockCallback may make the inflated value more extreme")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getFeeGrowthGlobals(IPoolManager manager, PoolId poolId)\n    internal\n    view\n    returns (uint256 feeGrowthGlobal0, uint256 feeGrowthGlobal1);\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"manager")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"IPoolManager")),(0,l.kt)("td",{parentName:"tr",align:null},"The pool manager contract.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"poolId")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"PoolId")),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the pool.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"feeGrowthGlobal0")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint256")),(0,l.kt)("td",{parentName:"tr",align:null},"The global fee growth for token0.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"feeGrowthGlobal1")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint256")),(0,l.kt)("td",{parentName:"tr",align:null},"The global fee growth for token1.")))),(0,l.kt)("h3",{id:"getliquidity"},"getLiquidity"),(0,l.kt)("p",null,"Retrieves total the liquidity of a pool."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Corresponds to pools","[poolId]",".liquidity")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getLiquidity(IPoolManager manager, PoolId poolId) internal view returns (uint128 liquidity);\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"manager")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"IPoolManager")),(0,l.kt)("td",{parentName:"tr",align:null},"The pool manager contract.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"poolId")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"PoolId")),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the pool.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"liquidity")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint128")),(0,l.kt)("td",{parentName:"tr",align:null},"The liquidity of the pool.")))),(0,l.kt)("h3",{id:"gettickbitmap"},"getTickBitmap"),(0,l.kt)("p",null,"Retrieves the tick bitmap of a pool at a specific tick."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Corresponds to pools","[poolId]",".tickBitmap","[tick]")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTickBitmap(IPoolManager manager, PoolId poolId, int16 tick) internal view returns (uint256 tickBitmap);\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"manager")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"IPoolManager")),(0,l.kt)("td",{parentName:"tr",align:null},"The pool manager contract.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"poolId")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"PoolId")),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the pool.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tick")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int16")),(0,l.kt)("td",{parentName:"tr",align:null},"The tick to retrieve the bitmap for.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tickBitmap")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint256")),(0,l.kt)("td",{parentName:"tr",align:null},"The bitmap of the tick.")))),(0,l.kt)("h3",{id:"getpositioninfo"},"getPositionInfo"),(0,l.kt)("p",null,"Retrieves the position information of a pool without needing to calculate the ",(0,l.kt)("inlineCode",{parentName:"p"},"positionId"),"."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Corresponds to pools","[poolId]",".positions","[positionId]")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPositionInfo(\n    IPoolManager manager,\n    PoolId poolId,\n    address owner,\n    int24 tickLower,\n    int24 tickUpper,\n    bytes32 salt\n) internal view returns (uint128 liquidity, uint256 feeGrowthInside0LastX128, uint256 feeGrowthInside1LastX128);\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"manager")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"IPoolManager")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"poolId")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"PoolId")),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the pool.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"owner")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"address")),(0,l.kt)("td",{parentName:"tr",align:null},"The owner of the liquidity position.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tickLower")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int24")),(0,l.kt)("td",{parentName:"tr",align:null},"The lower tick of the liquidity range.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tickUpper")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int24")),(0,l.kt)("td",{parentName:"tr",align:null},"The upper tick of the liquidity range.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"salt")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"bytes32")),(0,l.kt)("td",{parentName:"tr",align:null},"The bytes32 randomness to further distinguish position state.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"liquidity")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint128")),(0,l.kt)("td",{parentName:"tr",align:null},"The liquidity of the position.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"feeGrowthInside0LastX128")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint256")),(0,l.kt)("td",{parentName:"tr",align:null},"The fee growth inside the position for token0.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"feeGrowthInside1LastX128")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint256")),(0,l.kt)("td",{parentName:"tr",align:null},"The fee growth inside the position for token1.")))),(0,l.kt)("h3",{id:"getpositioninfo-1"},"getPositionInfo"),(0,l.kt)("p",null,"Retrieves the position information of a pool at a specific position ID."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Corresponds to pools","[poolId]",".positions","[positionId]")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPositionInfo(IPoolManager manager, PoolId poolId, bytes32 positionId)\n    internal\n    view\n    returns (uint128 liquidity, uint256 feeGrowthInside0LastX128, uint256 feeGrowthInside1LastX128);\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"manager")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"IPoolManager")),(0,l.kt)("td",{parentName:"tr",align:null},"The pool manager contract.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"poolId")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"PoolId")),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the pool.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"positionId")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"bytes32")),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the position.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"liquidity")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint128")),(0,l.kt)("td",{parentName:"tr",align:null},"The liquidity of the position.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"feeGrowthInside0LastX128")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint256")),(0,l.kt)("td",{parentName:"tr",align:null},"The fee growth inside the position for token0.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"feeGrowthInside1LastX128")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint256")),(0,l.kt)("td",{parentName:"tr",align:null},"The fee growth inside the position for token1.")))),(0,l.kt)("h3",{id:"getpositionliquidity"},"getPositionLiquidity"),(0,l.kt)("p",null,"Retrieves the liquidity of a position."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Corresponds to pools","[poolId]",".positions","[positionId]",".liquidity. More gas efficient for just retrieiving liquidity as compared to getPositionInfo")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getPositionLiquidity(IPoolManager manager, PoolId poolId, bytes32 positionId)\n    internal\n    view\n    returns (uint128 liquidity);\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"manager")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"IPoolManager")),(0,l.kt)("td",{parentName:"tr",align:null},"The pool manager contract.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"poolId")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"PoolId")),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the pool.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"positionId")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"bytes32")),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the position.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"liquidity")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint128")),(0,l.kt)("td",{parentName:"tr",align:null},"The liquidity of the position.")))),(0,l.kt)("h3",{id:"getfeegrowthinside"},"getFeeGrowthInside"),(0,l.kt)("p",null,"Calculate the fee growth inside a tick range of a pool"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"pools","[poolId]",".feeGrowthInside0LastX128 in Position.State is cached and can become stale. This function will calculate the up to date feeGrowthInside")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getFeeGrowthInside(IPoolManager manager, PoolId poolId, int24 tickLower, int24 tickUpper)\n    internal\n    view\n    returns (uint256 feeGrowthInside0X128, uint256 feeGrowthInside1X128);\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"manager")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"IPoolManager")),(0,l.kt)("td",{parentName:"tr",align:null},"The pool manager contract.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"poolId")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"PoolId")),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the pool.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tickLower")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int24")),(0,l.kt)("td",{parentName:"tr",align:null},"The lower tick of the range.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tickUpper")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int24")),(0,l.kt)("td",{parentName:"tr",align:null},"The upper tick of the range.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"feeGrowthInside0X128")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint256")),(0,l.kt)("td",{parentName:"tr",align:null},"The fee growth inside the tick range for token0.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"feeGrowthInside1X128")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uint256")),(0,l.kt)("td",{parentName:"tr",align:null},"The fee growth inside the tick range for token1.")))),(0,l.kt)("h3",{id:"_getpoolstateslot"},"_getPoolStateSlot"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _getPoolStateSlot(PoolId poolId) internal pure returns (bytes32);\n")),(0,l.kt)("h3",{id:"_gettickinfoslot"},"_getTickInfoSlot"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _getTickInfoSlot(PoolId poolId, int24 tick) internal pure returns (bytes32);\n")),(0,l.kt)("h3",{id:"_getpositioninfoslot"},"_getPositionInfoSlot"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function _getPositionInfoSlot(PoolId poolId, bytes32 positionId) internal pure returns (bytes32);\n")))}m.isMDXComponent=!0},3905:(t,e,n)=>{n.d(e,{Zo:()=>k,kt:()=>N});var a=n(67294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var p=a.createContext({}),d=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},k=function(t){var e=d(t.components);return a.createElement(p.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,r=t.originalType,p=t.parentName,k=o(t,["components","mdxType","originalType","parentName"]),u=d(n),N=l,s=u["".concat(p,".").concat(N)]||u[N]||m[N]||r;return n?a.createElement(s,i(i({ref:e},k),{},{components:n})):a.createElement(s,i({ref:e},k))}));function N(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=n.length,i=new Array(r);i[0]=u;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:l,i[1]=o;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);