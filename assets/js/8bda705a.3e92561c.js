"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[1800],{84779:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var n=a(83117),r=(a(67294),a(3905));const l={},i=void 0,o={unversionedId:"contracts/v3/reference/core/interfaces/pool/IUniswapV3PoolImmutables",id:"contracts/v3/reference/core/interfaces/pool/IUniswapV3PoolImmutables",title:"IUniswapV3PoolImmutables",description:"These parameters are fixed for a pool forever, i.e., the methods will always return the same values",source:"@site/docs/contracts/v3/reference/core/interfaces/pool/IUniswapV3PoolImmutables.md",sourceDirName:"contracts/v3/reference/core/interfaces/pool",slug:"/contracts/v3/reference/core/interfaces/pool/IUniswapV3PoolImmutables",permalink:"/docs/contracts/v3/reference/core/interfaces/pool/IUniswapV3PoolImmutables",editUrl:"https://github.com/hoffms/docs/tree/main/docs/contracts/v3/reference/core/interfaces/pool/IUniswapV3PoolImmutables.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"IUniswapV3PoolEvents",permalink:"/docs/contracts/v3/reference/core/interfaces/pool/IUniswapV3PoolEvents"},next:{title:"IUniswapV3PoolOwnerActions",permalink:"/docs/contracts/v3/reference/core/interfaces/pool/IUniswapV3PoolOwnerActions"}},s={},c=[{value:"Functions",id:"functions",level:2},{value:"factory",id:"factory",level:3},{value:"Return Values:",id:"return-values",level:4},{value:"token0",id:"token0",level:3},{value:"Return Values:",id:"return-values-1",level:4},{value:"token1",id:"token1",level:3},{value:"Return Values:",id:"return-values-2",level:4},{value:"fee",id:"fee",level:3},{value:"Return Values:",id:"return-values-3",level:4},{value:"tickSpacing",id:"tickspacing",level:3},{value:"Return Values:",id:"return-values-4",level:4},{value:"maxLiquidityPerTick",id:"maxliquiditypertick",level:3},{value:"Return Values:",id:"return-values-5",level:4}],p={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"These parameters are fixed for a pool forever, i.e., the methods will always return the same values"),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"factory"},"factory"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function factory(\n  ) external view returns (address)\n")),(0,r.kt)("p",null,"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"),(0,r.kt)("h4",{id:"return-values"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"contract address")))),(0,r.kt)("h3",{id:"token0"},"token0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function token0(\n  ) external view returns (address)\n")),(0,r.kt)("p",null,"The first of the two tokens of the pool, sorted by address"),(0,r.kt)("h4",{id:"return-values-1"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"token contract address")))),(0,r.kt)("h3",{id:"token1"},"token1"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function token1(\n  ) external view returns (address)\n")),(0,r.kt)("p",null,"The second of the two tokens of the pool, sorted by address"),(0,r.kt)("h4",{id:"return-values-2"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"address"),(0,r.kt)("td",{parentName:"tr",align:"left"},"token contract address")))),(0,r.kt)("h3",{id:"fee"},"fee"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function fee(\n  ) external view returns (uint24)\n")),(0,r.kt)("p",null,"The pool's fee in hundredths of a bip, i.e. 1e-6"),(0,r.kt)("h4",{id:"return-values-3"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"uint24"),(0,r.kt)("td",{parentName:"tr",align:"left"},"fee")))),(0,r.kt)("h3",{id:"tickspacing"},"tickSpacing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function tickSpacing(\n  ) external view returns (int24)\n")),(0,r.kt)("p",null,"The pool tick spacing"),(0,r.kt)("p",null,"Ticks can only be used at multiples of this value, minimum of 1 and always positive\ne.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\nThis value is an int24 to avoid casting even though it is always positive."),(0,r.kt)("h4",{id:"return-values-4"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"int24"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tick spacing")))),(0,r.kt)("h3",{id:"maxliquiditypertick"},"maxLiquidityPerTick"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"  function maxLiquidityPerTick(\n  ) external view returns (uint128)\n")),(0,r.kt)("p",null,"The maximum amount of position liquidity that can use any tick in the range"),(0,r.kt)("p",null,"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\nalso prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool"),(0,r.kt)("h4",{id:"return-values-5"},"Return Values:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"uint128"),(0,r.kt)("td",{parentName:"tr",align:"left"},"max amount of liquidity per tick")))))}u.isMDXComponent=!0},3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(a),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return a?n.createElement(f,i(i({ref:t},p),{},{components:a})):n.createElement(f,i({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);