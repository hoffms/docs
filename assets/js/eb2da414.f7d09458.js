"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[95602],{25653:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var r=n(83117),a=(n(67294),n(3905));const s={id:"Pair-ERC-20",title:"Pair (ERC-20)"},l=void 0,i={unversionedId:"contracts/v2/reference/smart-contracts/Pair-ERC-20",id:"contracts/v2/reference/smart-contracts/Pair-ERC-20",title:"Pair (ERC-20)",description:"This documentation covers ERC-20 functionality for denominating pool tokens. For Uniswap-specific functionality, see Pair.",source:"@site/docs/contracts/v2/reference/smart-contracts/03-pair-erc-20.md",sourceDirName:"contracts/v2/reference/smart-contracts",slug:"/contracts/v2/reference/smart-contracts/Pair-ERC-20",permalink:"/docs/contracts/v2/reference/smart-contracts/Pair-ERC-20",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/contracts/v2/reference/smart-contracts/03-pair-erc-20.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"Pair-ERC-20",title:"Pair (ERC-20)"},sidebar:"contractsSidebar",previous:{title:"Pair",permalink:"/docs/contracts/v2/reference/smart-contracts/pair"},next:{title:"Library",permalink:"/docs/contracts/v2/reference/smart-contracts/library"}},o={},p=[{value:"Approval",id:"approval",level:2},{value:"Transfer",id:"transfer",level:2},{value:"name",id:"name",level:2},{value:"symbol",id:"symbol",level:2},{value:"decimals",id:"decimals",level:2},{value:"totalSupply",id:"totalsupply",level:2},{value:"balanceOf",id:"balanceof",level:2},{value:"allowance",id:"allowance",level:2},{value:"DOMAIN_SEPARATOR",id:"domain_separator",level:2},{value:"PERMIT_TYPEHASH",id:"permit_typehash",level:2},{value:"nonces",id:"nonces",level:2},{value:"approve",id:"approve",level:2},{value:"transfer",id:"transfer-1",level:2},{value:"transferFrom",id:"transferfrom",level:2},{value:"permit",id:"permit",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This documentation covers ERC-20 functionality for denominating pool tokens. For Uniswap-specific functionality, see ",(0,a.kt)("a",{parentName:"p",href:"../smart-contracts/pair"},"Pair"),"."),(0,a.kt)("h1",{id:"code"},"Code"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol"},(0,a.kt)("inlineCode",{parentName:"a"},"UniswapV2ERC20.sol"))),(0,a.kt)("h1",{id:"events"},"Events"),(0,a.kt)("h2",{id:"approval"},"Approval"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"event Approval(address indexed owner, address indexed spender, uint value);\n")),(0,a.kt)("p",null,"Emitted each time an approval occurs via ",(0,a.kt)("a",{parentName:"p",href:"#approve"},"approve")," or ",(0,a.kt)("a",{parentName:"p",href:"#permit"},"permit"),"."),(0,a.kt)("h2",{id:"transfer"},"Transfer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"event Transfer(address indexed from, address indexed to, uint value);\n")),(0,a.kt)("p",null,"Emitted each time a transfer occurs via ",(0,a.kt)("a",{parentName:"p",href:"#transfer-1"},"transfer"),", ",(0,a.kt)("a",{parentName:"p",href:"#transferfrom"},"transferFrom"),", ",(0,a.kt)("a",{parentName:"p",href:"../smart-contracts/pair#mint-1"},"mint"),", or ",(0,a.kt)("a",{parentName:"p",href:"../smart-contracts/pair#burn-1"},"burn"),"."),(0,a.kt)("h1",{id:"read-only-functions"},"Read-Only Functions"),(0,a.kt)("h2",{id:"name"},"name"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function name() external pure returns (string memory);\n")),(0,a.kt)("p",null,"Returns ",(0,a.kt)("inlineCode",{parentName:"p"},"Uniswap V2")," for all pairs."),(0,a.kt)("h2",{id:"symbol"},"symbol"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function symbol() external pure returns (string memory);\n")),(0,a.kt)("p",null,"Returns ",(0,a.kt)("inlineCode",{parentName:"p"},"UNI-V2")," for all pairs."),(0,a.kt)("h2",{id:"decimals"},"decimals"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function decimals() external pure returns (uint8);\n")),(0,a.kt)("p",null,"Returns ",(0,a.kt)("inlineCode",{parentName:"p"},"18")," for all pairs."),(0,a.kt)("h2",{id:"totalsupply"},"totalSupply"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function totalSupply() external view returns (uint);\n")),(0,a.kt)("p",null,"Returns the total amount of pool tokens for a pair."),(0,a.kt)("h2",{id:"balanceof"},"balanceOf"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function balanceOf(address owner) external view returns (uint);\n")),(0,a.kt)("p",null,"Returns the amount of pool tokens owned by an address."),(0,a.kt)("h2",{id:"allowance"},"allowance"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function allowance(address owner, address spender) external view returns (uint);\n")),(0,a.kt)("p",null,"Returns the amount of liquidity tokens owned by an address that a spender is allowed to transfer via ",(0,a.kt)("a",{parentName:"p",href:"#transferfrom"},"transferFrom"),"."),(0,a.kt)("h2",{id:"domain_separator"},"DOMAIN_SEPARATOR"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function DOMAIN_SEPARATOR() external view returns (bytes32);\n")),(0,a.kt)("p",null,"Returns a domain separator for use in ",(0,a.kt)("a",{parentName:"p",href:"#permit"},"permit"),"."),(0,a.kt)("h2",{id:"permit_typehash"},"PERMIT_TYPEHASH"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function PERMIT_TYPEHASH() external view returns (bytes32);\n")),(0,a.kt)("p",null,"Returns a typehash for use in ",(0,a.kt)("a",{parentName:"p",href:"#permit"},"permit"),"."),(0,a.kt)("h2",{id:"nonces"},"nonces"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function nonces(address owner) external view returns (uint);\n")),(0,a.kt)("p",null,"Returns the current nonce for an address for use in ",(0,a.kt)("a",{parentName:"p",href:"#permit"},"permit"),"."),(0,a.kt)("h1",{id:"state-changing-functions"},"State-Changing Functions"),(0,a.kt)("h2",{id:"approve"},"approve"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function approve(address spender, uint value) external returns (bool);\n")),(0,a.kt)("p",null,"Lets ",(0,a.kt)("inlineCode",{parentName:"p"},"msg.sender")," set their allowance for a spender."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Emits ",(0,a.kt)("a",{parentName:"li",href:"#approval"},"Approval"),".")),(0,a.kt)("h2",{id:"transfer-1"},"transfer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function transfer(address to, uint value) external returns (bool);\n")),(0,a.kt)("p",null,"Lets ",(0,a.kt)("inlineCode",{parentName:"p"},"msg.sender")," send pool tokens to an address."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Emits ",(0,a.kt)("a",{parentName:"li",href:"#transfer"},"Transfer"),".")),(0,a.kt)("h2",{id:"transferfrom"},"transferFrom"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function transferFrom(address from, address to, uint value) external returns (bool);\n")),(0,a.kt)("p",null,"Sends pool tokens from one address to another."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Requires approval."),(0,a.kt)("li",{parentName:"ul"},"Emits ",(0,a.kt)("a",{parentName:"li",href:"#transfer"},"Transfer"),".")),(0,a.kt)("h2",{id:"permit"},"permit"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n")),(0,a.kt)("p",null,"Sets the allowance for a spender where approval is granted via a signature."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"See ",(0,a.kt)("a",{parentName:"li",href:"../../guides/smart-contract-integration/supporting-meta-transactions"},"Using Permit"),"."),(0,a.kt)("li",{parentName:"ul"},"Emits ",(0,a.kt)("a",{parentName:"li",href:"#approval"},"Approval"),".")),(0,a.kt)("h1",{id:"interface"},"Interface"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"import '@uniswap/v2-core/contracts/interfaces/IUniswapV2ERC20.sol';\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"pragma solidity >=0.5.0;\n\ninterface IUniswapV2ERC20 {\n  event Approval(address indexed owner, address indexed spender, uint value);\n  event Transfer(address indexed from, address indexed to, uint value);\n\n  function name() external pure returns (string memory);\n  function symbol() external pure returns (string memory);\n  function decimals() external pure returns (uint8);\n  function totalSupply() external view returns (uint);\n  function balanceOf(address owner) external view returns (uint);\n  function allowance(address owner, address spender) external view returns (uint);\n\n  function approve(address spender, uint value) external returns (bool);\n  function transfer(address to, uint value) external returns (bool);\n  function transferFrom(address from, address to, uint value) external returns (bool);\n\n  function DOMAIN_SEPARATOR() external view returns (bytes32);\n  function PERMIT_TYPEHASH() external pure returns (bytes32);\n  function nonces(address owner) external view returns (uint);\n\n  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n}\n")),(0,a.kt)("h1",{id:"abi"},"ABI"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import IUniswapV2ERC20 from '@uniswap/v2-core/build/IUniswapV2ERC20.json'\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2ERC20.json"},"https://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2ERC20.json")))}c.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),p=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(o,".").concat(m)]||d[m]||c[m]||s;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,l=new Array(s);l[0]=d;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<s;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);