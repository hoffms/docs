"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[7265],{53714:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(83117),r=(n(67294),n(3905));const i={id:"actions",title:"Actions and Parameters",sidebar_position:2},o=void 0,l={unversionedId:"concepts/protocol/actions",id:"concepts/protocol/actions",title:"Actions and Parameters",description:"Introduction",source:"@site/docs/concepts/protocol/actions.md",sourceDirName:"concepts/protocol",slug:"/concepts/protocol/actions",permalink:"/docs/concepts/protocol/actions",editUrl:"https://github.com/hoffms/docs/tree/main/docs/concepts/protocol/actions.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"actions",title:"Actions and Parameters",sidebar_position:2},sidebar:"conceptsSidebar",previous:{title:"Trigger dApps",permalink:"/docs/concepts/protocol/triggers"},next:{title:"Metadata Validation",permalink:"/docs/concepts/protocol/metadata"}},s={},c=[{value:"Introduction",id:"introduction",level:2},{value:"<strong>Actions</strong>",id:"actions",level:2},{value:"\ud83d\ude80 Dynamic Actions - Best for complex logic",id:"-dynamic-actions---best-for-complex-logic",level:3},{value:"\ud83d\udd27 Blockchain Actions - Direct Contract Interaction",id:"-blockchain-actions---direct-contract-interaction",level:3},{value:"\ud83d\udcb8 Transfer Actions  - Simple &amp; Interactive",id:"-transfer-actions----simple--interactive",level:3},{value:"\ud83d\udd04 Action Flows  - Multi-Step Workflows",id:"-action-flows----multi-step-workflows",level:3},{value:"Choosing the Right Action Type",id:"choosing-the-right-action-type",level:3},{value:"Decision Tree:",id:"decision-tree",level:4},{value:"Examples by Use Case:",id:"examples-by-use-case",level:4},{value:"<strong>Parameters</strong>",id:"parameters",level:2},{value:"Parameter Structure",id:"parameter-structure",level:3},{value:"Parameter Types by Action",id:"parameter-types-by-action",level:3},{value:"Dynamic Actions - Most Flexible",id:"dynamic-actions---most-flexible",level:4},{value:"Blockchain Actions - ABI-Constrained",id:"blockchain-actions---abi-constrained",level:4},{value:"Transfer Actions - Configuration-Based",id:"transfer-actions---configuration-based",level:4},{value:"Parameter Templates",id:"parameter-templates",level:3},{value:"<strong>Best Practices</strong>",id:"best-practices",level:2},{value:"1. Start Simple, Scale Complex",id:"1-start-simple-scale-complex",level:3},{value:"2. Use Transfer Actions for Native Tokens",id:"2-use-transfer-actions-for-native-tokens",level:3},{value:"3. Dynamic Actions for Complex Logic",id:"3-dynamic-actions-for-complex-logic",level:3},{value:"4. Action Flows for Multi-Step UX",id:"4-action-flows-for-multi-step-ux",level:3},{value:"<strong>Next Steps</strong>",id:"next-steps",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Triggers are powered by ",(0,r.kt)("strong",{parentName:"p"},"Actions")," and ",(0,r.kt)("strong",{parentName:"p"},"Parameters"),"\u2014together, they define what your Trigger dApp can do and how users interact with it. Actions are modular, declarative units that represent tasks like sending tokens, calling smart contracts, or guiding users through multi-step flows. Parameters define the inputs required to execute those actions, powering dynamic forms, UI generation, and validation."),(0,r.kt)("p",null,"Each action is fully configurable and paired with structured parameters to support a wide range of Web3 use cases\u2014enabling developers to build powerful, interactive experiences without handling complex frontend or contract logic manually."),(0,r.kt)("h2",{id:"actions"},(0,r.kt)("strong",{parentName:"h2"},"Actions")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Actions")," are the core interactive units that define what a Trigger dApp can do. Each action represents a specific task the user can perform\u2014such as sending tokens, calling a smart contract, or initiating a multi-step flow."),(0,r.kt)("p",null,"Sherry supports ",(0,r.kt)("strong",{parentName:"p"},"4 action types"),", each optimized for different complexity levels and use cases:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Dynamic Actions"),(0,r.kt)("li",{parentName:"ul"},"Blockchain Actions"),(0,r.kt)("li",{parentName:"ul"},"Transfer Actions"),(0,r.kt)("li",{parentName:"ul"},"Flow Actions")),(0,r.kt)("h3",{id:"-dynamic-actions---best-for-complex-logic"},"\ud83d\ude80 Dynamic Actions - Best for complex logic"),(0,r.kt)("p",null,"(",(0,r.kt)("inlineCode",{parentName:"p"},"type: 'dynamic'"),")\nDynamic Actions are designed for advanced use cases that require server-side logic. Your backend dynamically constructs the transaction based on user input, external data, or business rules."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  type: 'dynamic',\n  label: 'Optimal DeFi Strategy',\n  path: '/api/calculate-best-yield',\n  chains: { source: 'avalanche' },\n  params: [\n    {\n      name: 'amount',\n      label: 'Investment Amount',\n      type: 'number',\n      required: true\n    },\n    {\n      name: 'risk',\n      label: 'Risk Tolerance',\n      type: 'select',\n      options: [\n        { label: 'Conservative', value: 'low' },\n        { label: 'Moderate', value: 'medium' },\n        { label: 'Aggressive', value: 'high' }\n      ]\n    }\n  ]\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Perfect for:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Multi-step DeFi strategies (yield farming, arbitrage)"),(0,r.kt)("li",{parentName:"ul"},"Dynamic pricing and routing"),(0,r.kt)("li",{parentName:"ul"},"Complex contract interactions requiring server-side computation"),(0,r.kt)("li",{parentName:"ul"},"Real-time market analysis and execution"),(0,r.kt)("li",{parentName:"ul"},"Cross-protocol optimizations")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"How it works:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"User inputs parameters"),(0,r.kt)("li",{parentName:"ol"},"Your server receives the data via API call"),(0,r.kt)("li",{parentName:"ol"},"Server analyzes market conditions, calculates optimal strategy"),(0,r.kt)("li",{parentName:"ol"},"Server returns a ready-to-execute transaction"),(0,r.kt)("li",{parentName:"ol"},"User signs and executes")),(0,r.kt)("h3",{id:"-blockchain-actions---direct-contract-interaction"},"\ud83d\udd27 Blockchain Actions - Direct Contract Interaction"),(0,r.kt)("p",null," (",(0,r.kt)("inlineCode",{parentName:"p"},"type: 'blockchain'"),")\nFor direct smart contract interactions where you know exactly which function to call and what parameters to use. Use this type when interacting with a known smart contract using static parameters and a predefined ABI."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  type: 'blockchain',\n  label: 'Mint NFT',\n  address: '0x742d35Cc6734C0532925a3b8D4ccd306f6F4B26C',\n  abi: nftAbi,\n  functionName: 'mint',\n  chains: { source: 'avalanche' },\n  amount: 0.1, // Fixed mint price\n  params: [\n    {\n      name: 'to',\n      label: 'Recipient Address',\n      type: 'address',\n      required: true\n    }\n  ]\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Perfect for:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Token approvals and transfers"),(0,r.kt)("li",{parentName:"ul"},"NFT minting with fixed parameters"),(0,r.kt)("li",{parentName:"ul"},"DAO voting on specific proposals"),(0,r.kt)("li",{parentName:"ul"},"Simple DeFi operations (stake, unstake)"),(0,r.kt)("li",{parentName:"ul"},"Direct contract function calls")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"When to use vs Dynamic Actions:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Use Blockchain Actions when the contract call is straightforward"),(0,r.kt)("li",{parentName:"ul"},"Use Dynamic Actions when you need server-side logic to determine what to call")),(0,r.kt)("h3",{id:"-transfer-actions----simple--interactive"},"\ud83d\udcb8 Transfer Actions  - Simple & Interactive"),(0,r.kt)("p",null,"(",(0,r.kt)("inlineCode",{parentName:"p"},"type: 'transfer'"),")\nThe most user-friendly way to send native tokens (ETH, AVAX, CELO) with customizable UI options."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  type: 'transfer',\n  label: 'Support Creator',\n  chains: { source: 'avalanche' },\n  to: '0x742d35Cc6734C0532925a3b8D4ccd306f6F4B26C',\n  amountConfig: {\n    type: 'radio',\n    label: 'Support Amount',\n    options: [\n      { label: 'Coffee \u2615', value: 0.01, description: '0.01 AVAX' },\n      { label: 'Lunch \ud83c\udf55', value: 0.05, description: '0.05 AVAX' },\n      { label: 'Dinner \ud83c\udf7d\ufe0f', value: 0.1, description: '0.1 AVAX' }\n    ]\n  }\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Perfect for:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Tips and donations"),(0,r.kt)("li",{parentName:"ul"},"Simple payments"),(0,r.kt)("li",{parentName:"ul"},"Crowdfunding contributions"),(0,r.kt)("li",{parentName:"ul"},"Social tipping"),(0,r.kt)("li",{parentName:"ul"},"Quick native token sends")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Key advantage:")," No ABI knowledge required, built-in UI configurability"),(0,r.kt)("h3",{id:"-action-flows----multi-step-workflows"},"\ud83d\udd04 Action Flows  - Multi-Step Workflows"),(0,r.kt)("p",null,"(",(0,r.kt)("inlineCode",{parentName:"p"},"type: 'flow'"),")\nFor complex multi-step processes that combine different action types with conditional logic."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  type: 'flow',\n  label: 'DeFi Onboarding',\n  initialActionId: 'check-balance',\n  actions: [\n    {\n      id: 'check-balance',\n      type: 'dynamic',\n      label: 'Check Portfolio',\n      path: '/api/analyze-portfolio',\n      // ... params\n      nextActions: [\n        {\n          actionId: 'suggest-strategy',\n          conditions: [{ field: 'balance', operator: 'gt', value: 100 }]\n        }\n      ]\n    },\n    {\n      id: 'suggest-strategy',\n      type: 'decision',\n      title: 'Recommended Strategy',\n      options: [\n        { label: 'Conservative', value: 'safe', nextActionId: 'execute-safe' },\n        { label: 'Aggressive', value: 'risky', nextActionId: 'execute-risky' }\n      ]\n    },\n    // ... more actions\n  ]\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Perfect for:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"User onboarding sequences"),(0,r.kt)("li",{parentName:"ul"},"Complex DeFi workflows (approve \u2192 swap \u2192 stake)"),(0,r.kt)("li",{parentName:"ul"},"Conditional business logic"),(0,r.kt)("li",{parentName:"ul"},"Multi-step transactions with user decisions")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"choosing-the-right-action-type"},"Choosing the Right Action Type"),(0,r.kt)("h4",{id:"decision-tree"},"Decision Tree:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Do you need multiple steps or user decisions?\n\u251c\u2500 Yes \u2192 Action Flow\n\u2514\u2500 No \u2192 Continue...\n\nDo you need complex server-side logic or real-time calculations?\n\u251c\u2500 Yes \u2192 Dynamic Action\n\u2514\u2500 No \u2192 Continue...\n\nAre you just sending native tokens (ETH/AVAX/CELO)?\n\u251c\u2500 Yes \u2192 Transfer Action\n\u2514\u2500 No \u2192 Blockchain Action\n")),(0,r.kt)("h4",{id:"examples-by-use-case"},"Examples by Use Case:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Use Case"),(0,r.kt)("th",{parentName:"tr",align:null},"Best Action Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Why"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NFT Mint (fixed price)"),(0,r.kt)("td",{parentName:"tr",align:null},"Blockchain"),(0,r.kt)("td",{parentName:"tr",align:null},"Simple contract call")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NFT Mint (dynamic pricing)"),(0,r.kt)("td",{parentName:"tr",align:null},"Dynamic"),(0,r.kt)("td",{parentName:"tr",align:null},"Server calculates current price")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Token Swap (simple)"),(0,r.kt)("td",{parentName:"tr",align:null},"Blockchain"),(0,r.kt)("td",{parentName:"tr",align:null},"Direct DEX interaction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Token Swap (optimal routing)"),(0,r.kt)("td",{parentName:"tr",align:null},"Dynamic"),(0,r.kt)("td",{parentName:"tr",align:null},"Server finds best route")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Tip/Donation"),(0,r.kt)("td",{parentName:"tr",align:null},"Transfer"),(0,r.kt)("td",{parentName:"tr",align:null},"Simple native token send")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DAO Vote"),(0,r.kt)("td",{parentName:"tr",align:null},"Blockchain"),(0,r.kt)("td",{parentName:"tr",align:null},"Direct governance contract call")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DeFi Strategy"),(0,r.kt)("td",{parentName:"tr",align:null},"Dynamic"),(0,r.kt)("td",{parentName:"tr",align:null},"Complex optimization needed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"User Onboarding"),(0,r.kt)("td",{parentName:"tr",align:null},"Flow"),(0,r.kt)("td",{parentName:"tr",align:null},"Multiple steps with decisions")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"parameters"},(0,r.kt)("strong",{parentName:"h2"},"Parameters")),(0,r.kt)("p",null,"Parameters define the inputs that users provide when interacting with an Action. They are used to dynamically generate UI components, enforce validation rules, and pass structured data into smart contracts or API endpoints."),(0,r.kt)("p",null,"Each Action type handles parameters differently depending on its architecture and intended use."),(0,r.kt)("h3",{id:"parameter-structure"},"Parameter Structure"),(0,r.kt)("p",null,"All parameters extend a shared structure based on ",(0,r.kt)("inlineCode",{parentName:"p"},"BaseParameter"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface BaseParameter {\n  name: string; // Parameter identifier\n  label: string; // UI label shown to user\n  type: string; // Input type\n  required?: boolean; // Is this field mandatory?\n  description?: string; // Help text\n  fixed?: boolean; // Is the value non-editable?\n  value?: any; // Default or fixed value\n}\n")),(0,r.kt)("h3",{id:"parameter-types-by-action"},"Parameter Types by Action"),(0,r.kt)("h4",{id:"dynamic-actions---most-flexible"},"Dynamic Actions - Most Flexible"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Can use any parameter type"),(0,r.kt)("li",{parentName:"ul"},"Server processes all inputs"),(0,r.kt)("li",{parentName:"ul"},"Perfect for complex forms")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"params: [\n  {\n    name: 'strategy',\n    label: 'Investment Strategy',\n    type: 'select',\n    options: [\n      /* multiple options */\n    ],\n  },\n  {\n    name: 'amount',\n    label: 'Amount',\n    type: 'number',\n    min: 0.01,\n  },\n];\n")),(0,r.kt)("h4",{id:"blockchain-actions---abi-constrained"},"Blockchain Actions - ABI-Constrained"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Must match contract function parameters exactly"),(0,r.kt)("li",{parentName:"ul"},"Types must be compatible with ABI"),(0,r.kt)("li",{parentName:"ul"},"Order must match ABI function signature")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// For contract function: mint(address to, uint256 quantity)\nparams: [\n  { name: 'to', type: 'address' }, // First parameter\n  { name: 'quantity', type: 'number' }, // Second parameter\n];\n")),(0,r.kt)("h4",{id:"transfer-actions---configuration-based"},"Transfer Actions - Configuration-Based"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Uses ",(0,r.kt)("inlineCode",{parentName:"li"},"amountConfig")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"recipient")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"params")),(0,r.kt)("li",{parentName:"ul"},"Built-in UI components"),(0,r.kt)("li",{parentName:"ul"},"No ABI knowledge required")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// No params array - uses config objects instead\namountConfig: {\n  type: 'radio',\n  options: [/* amount options */]\n},\nrecipient: {\n  type: 'select',\n  options: [/* recipient options */]\n}\n")),(0,r.kt)("h3",{id:"parameter-templates"},"Parameter Templates"),(0,r.kt)("p",null,"Use pre-built templates for common patterns:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { PARAM_TEMPLATES, createParameter } from '@sherrylinks/sdk';\n\n// Address parameter\nconst recipientParam = createParameter(PARAM_TEMPLATES.ADDRESS, {\n  name: 'recipient',\n  label: 'Destination Address',\n});\n\n// Amount parameter\nconst amountParam = createParameter(PARAM_TEMPLATES.AMOUNT, {\n  name: 'transferAmount',\n  label: 'Amount to Send',\n});\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"best-practices"},(0,r.kt)("strong",{parentName:"h2"},"Best Practices")),(0,r.kt)("h3",{id:"1-start-simple-scale-complex"},"1. Start Simple, Scale Complex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// Start with Blockchain Action for simple contract calls\n// Upgrade to Dynamic Action when you need server-side logic\n")),(0,r.kt)("h3",{id:"2-use-transfer-actions-for-native-tokens"},"2. Use Transfer Actions for Native Tokens"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// \u2705 Good - Use Transfer Action for AVAX/ETH/CELO\n{ type: 'transfer', amount: 0.1, chains: { source: 'avalanche' } }\n\n// \u274c Avoid - Don't use Blockchain Action for simple transfers\n{ type: 'blockchain', functionName: 'transfer', /* complex setup */ }\n")),(0,r.kt)("h3",{id:"3-dynamic-actions-for-complex-logic"},"3. Dynamic Actions for Complex Logic"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// \u2705 Perfect use case - Server calculates optimal swap route\n{\n  type: 'dynamic',\n  path: '/api/optimal-swap',\n  // Server analyzes 10+ DEXs and returns best route\n}\n\n// \u274c Overkill - Simple fixed swap\n{\n  type: 'blockchain',\n  functionName: 'swapExactTokensForTokens',\n  // Known parameters, no calculation needed\n}\n")),(0,r.kt)("h3",{id:"4-action-flows-for-multi-step-ux"},"4. Action Flows for Multi-Step UX"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// \u2705 Great for onboarding\n{\n  type: 'flow',\n  actions: [\n    { id: 'welcome', type: 'decision', /* ... */ },\n    { id: 'setup', type: 'dynamic', /* ... */ },\n    { id: 'complete', type: 'completion', /* ... */ }\n  ]\n}\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"next-steps"},(0,r.kt)("strong",{parentName:"h2"},"Next Steps")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../api-reference/action-types/dynamic-actions"},(0,r.kt)("strong",{parentName:"a"},"Dynamic Actions"))," - Master the most powerful action type"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../api-reference/action-types/blockchain-actions"},(0,r.kt)("strong",{parentName:"a"},"Blockchain Actions"))," - Direct contract interactions"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../api-reference/action-types/transfer-actions"},(0,r.kt)("strong",{parentName:"a"},"Transfer Actions"))," - Simple native token transfers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../api-reference/action-types/action-flows"},(0,r.kt)("strong",{parentName:"a"},"Action Flows"))," - Multi-step workflows")))}u.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(k,o(o({ref:t},p),{},{components:n})):a.createElement(k,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);