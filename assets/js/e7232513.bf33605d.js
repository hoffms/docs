"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[4771],{1751:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=r(3117),n=(r(7294),r(3905));const i={id:"parameter-templates",sidebar_position:2,title:"Parameter Templates"},l="Parameter Templates",o={unversionedId:"sdk/trigger-sdk/reference/parameters/parameter-templates",id:"sdk/trigger-sdk/reference/parameters/parameter-templates",title:"Parameter Templates",description:"\ud83d\udea7 Under Construction",source:"@site/docs/sdk/trigger-sdk/reference/parameters/parameter-templates.md",sourceDirName:"sdk/trigger-sdk/reference/parameters",slug:"/sdk/trigger-sdk/reference/parameters/parameter-templates",permalink:"/docs/sdk/trigger-sdk/reference/parameters/parameter-templates",editUrl:"https://github.com/hoffms/docs/tree/main/docs/sdk/trigger-sdk/reference/parameters/parameter-templates.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"parameter-templates",sidebar_position:2,title:"Parameter Templates"},sidebar:"sdkSidebar",previous:{title:"Parameter Types",permalink:"/docs/sdk/trigger-sdk/reference/parameters/parameter-types"},next:{title:"Live Examples - Real Mini-Apps in Action",permalink:"/docs/sdk/trigger-sdk/examples/"}},s={},p=[{value:"Using Templates",id:"using-templates",level:2},{value:"Available Templates",id:"available-templates",level:2}],m={toc:p};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"parameter-templates"},"Parameter Templates"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"\ud83d\udea7 ",(0,n.kt)("strong",{parentName:"p"},"Under Construction")),(0,n.kt)("p",{parentName:"blockquote"},"This documentation is currently being written. Parameter Templates provide pre-built configurations for common parameter patterns.")),(0,n.kt)("p",null,"Parameter Templates are predefined configurations that make it easy to create common parameter types. They help maintain consistency and reduce boilerplate code."),(0,n.kt)("h2",{id:"using-templates"},"Using Templates"),(0,n.kt)("p",null,"Use the ",(0,n.kt)("inlineCode",{parentName:"p"},"createParameter")," function with predefined templates:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"import { PARAM_TEMPLATES, createParameter } from '@sherrylinks/sdk';\n\n// Address parameter\nconst recipientParam = createParameter(PARAM_TEMPLATES.ADDRESS, {\n  name: 'recipient',\n  label: 'Destination Address',\n});\n\n// Amount parameter\nconst amountParam = createParameter(PARAM_TEMPLATES.AMOUNT, {\n  name: 'transferAmount',\n  label: 'Amount to Send',\n  min: 0.01,\n});\n\n// Yes/No selection\nconst confirmParam = createParameter(PARAM_TEMPLATES.YES_NO, {\n  name: 'confirmation',\n  label: 'Confirm transaction?',\n});\n")),(0,n.kt)("h2",{id:"available-templates"},"Available Templates"),(0,n.kt)("p",null,"The SDK provides several built-in templates for common use cases:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ADDRESS")," - Ethereum address input"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AMOUNT")," - Numeric amount for transfers"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"EMAIL")," - Email address input"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"TEXT")," - Basic text input"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"BOOLEAN")," - Boolean checkbox"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"YES_NO")," - Yes/No radio selection"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"TOKEN_SELECT")," - Common token dropdown")),(0,n.kt)("p",null,"Coming soon:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Template customization"),(0,n.kt)("li",{parentName:"ul"},"Common use cases"),(0,n.kt)("li",{parentName:"ul"},"Best practices"),(0,n.kt)("li",{parentName:"ul"},"Creating custom templates")))}c.isMDXComponent=!0},3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,k=u["".concat(s,".").concat(d)]||u[d]||c[d]||i;return r?a.createElement(k,l(l({ref:t},m),{},{components:r})):a.createElement(k,l({ref:t},m))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);