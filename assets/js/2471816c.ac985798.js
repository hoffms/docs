"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[37805],{92866:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var n=r(83117),o=(r(67294),r(3905));const a={},l="CustomCurveHook",c={unversionedId:"contracts/v4/reference/core/test/CustomCurveHook",id:"contracts/v4/reference/core/test/CustomCurveHook",title:"CustomCurveHook",description:"Git Source - Generated with forge doc",source:"@site/docs/contracts/v4/reference/core/test/CustomCurveHook.md",sourceDirName:"contracts/v4/reference/core/test",slug:"/contracts/v4/reference/core/test/CustomCurveHook",permalink:"/docs/contracts/v4/reference/core/test/CustomCurveHook",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/contracts/v4/reference/core/test/CustomCurveHook.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"CurrencyTest",permalink:"/docs/contracts/v4/reference/core/test/CurrencyTest"},next:{title:"DeltaReturningHook",permalink:"/docs/contracts/v4/reference/core/test/DeltaReturningHook"}},i={},u=[{value:"State Variables",id:"state-variables",level:2},{value:"manager",id:"manager",level:3},{value:"Functions",id:"functions",level:2},{value:"constructor",id:"constructor",level:3},{value:"onlyPoolManager",id:"onlypoolmanager",level:3},{value:"beforeSwap",id:"beforeswap",level:3},{value:"afterAddLiquidity",id:"afteraddliquidity",level:3},{value:"_getInputOutputAndAmount",id:"_getinputoutputandamount",level:3},{value:"Errors",id:"errors",level:2},{value:"AddLiquidityDirectToHook",id:"addliquiditydirecttohook",level:3}],s={toc:u};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"customcurvehook"},"CustomCurveHook"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-core/blob/80311e34080fee64b6fc6c916e9a51a437d0e482/src/test/CustomCurveHook.sol"},"Git Source")," - Generated with ",(0,o.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-doc"},"forge doc")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Inherits:"),"\n",(0,o.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/core/test/BaseTestHooks"},"BaseTestHooks")),(0,o.kt)("h2",{id:"state-variables"},"State Variables"),(0,o.kt)("h3",{id:"manager"},"manager"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"IPoolManager immutable manager;\n")),(0,o.kt)("h2",{id:"functions"},"Functions"),(0,o.kt)("h3",{id:"constructor"},"constructor"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor(IPoolManager _manager);\n")),(0,o.kt)("h3",{id:"onlypoolmanager"},"onlyPoolManager"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier onlyPoolManager();\n")),(0,o.kt)("h3",{id:"beforeswap"},"beforeSwap"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function beforeSwap(address, PoolKey calldata key, IPoolManager.SwapParams calldata params, bytes calldata)\n    external\n    override\n    onlyPoolManager\n    returns (bytes4, BeforeSwapDelta, uint24);\n")),(0,o.kt)("h3",{id:"afteraddliquidity"},"afterAddLiquidity"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function afterAddLiquidity(\n    address,\n    PoolKey calldata,\n    IPoolManager.ModifyLiquidityParams calldata,\n    BalanceDelta,\n    BalanceDelta,\n    bytes calldata\n) external view override onlyPoolManager returns (bytes4, BalanceDelta);\n")),(0,o.kt)("h3",{id:"_getinputoutputandamount"},"_getInputOutputAndAmount"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function _getInputOutputAndAmount(PoolKey calldata key, IPoolManager.SwapParams calldata params)\n    internal\n    pure\n    returns (Currency input, Currency output, uint256 amount);\n")),(0,o.kt)("h2",{id:"errors"},"Errors"),(0,o.kt)("h3",{id:"addliquiditydirecttohook"},"AddLiquidityDirectToHook"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"error AddLiquidityDirectToHook();\n")))}d.isMDXComponent=!0},3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(r),m=o,f=p["".concat(i,".").concat(m)]||p[m]||d[m]||a;return r?n.createElement(f,l(l({ref:t},s),{},{components:r})):n.createElement(f,l({ref:t},s))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=p;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,l[1]=c;for(var u=2;u<a;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"}}]);