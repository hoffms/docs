"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[1354],{75541:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var a=n(83117),i=(n(67294),n(3905));const r={id:"basic-mini-app",sidebar_position:4,title:"Basic Mini-App Guide"},p="Basic Mini-App Guide",s={unversionedId:"sdk/trigger-sdk-2/guides/basic-mini-app",id:"sdk/trigger-sdk-2/guides/basic-mini-app",title:"Basic Mini-App Guide",description:"This guide will help you create a more complex mini-app with multiple actions and user inputs. You'll build a token swap mini-app that allows users to select tokens and amounts.",source:"@site/docs/sdk/trigger-sdk-2/guides/basic-mini-app.md",sourceDirName:"sdk/trigger-sdk-2/guides",slug:"/sdk/trigger-sdk-2/guides/basic-mini-app",permalink:"/docs/sdk/trigger-sdk-2/guides/basic-mini-app",editUrl:"https://github.com/hoffms/docs/tree/main/docs/sdk/trigger-sdk-2/guides/basic-mini-app.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"basic-mini-app",sidebar_position:4,title:"Basic Mini-App Guide"},sidebar:"sdkSidebar",previous:{title:"Advanced Flows Guide",permalink:"/docs/sdk/trigger-sdk-2/guides/advanced-flows"},next:{title:"Quick Start",permalink:"/docs/sdk/trigger-sdk-2/quickstart"}},o={},l=[{value:"What You&#39;ll Build",id:"what-youll-build",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Set Up Your Project",id:"step-1-set-up-your-project",level:2},{value:"Step 2: Define Token Selection Action",id:"step-2-define-token-selection-action",level:2},{value:"Step 3: Create Preview Action",id:"step-3-create-preview-action",level:2},{value:"Step 4: Define Swap Action",id:"step-4-define-swap-action",level:2},{value:"Step 5: Create Metadata",id:"step-5-create-metadata",level:2},{value:"Step 6: Create Server",id:"step-6-create-server",level:2},{value:"Step 7: Run Your Mini-App",id:"step-7-run-your-mini-app",level:2},{value:"Testing Your Mini-App",id:"testing-your-mini-app",level:2},{value:"What You&#39;ve Learned",id:"what-youve-learned",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"References",id:"references",level:2}],c={toc:l};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"basic-mini-app-guide"},"Basic Mini-App Guide"),(0,i.kt)("p",null,"This guide will help you create a more complex mini-app with multiple actions and user inputs. You'll build a token swap mini-app that allows users to select tokens and amounts."),(0,i.kt)("h2",{id:"what-youll-build"},"What You'll Build"),(0,i.kt)("p",null,"A token swap mini-app that:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Allows users to select input and output tokens"),(0,i.kt)("li",{parentName:"ul"},"Lets users specify the swap amount"),(0,i.kt)("li",{parentName:"ul"},"Shows a preview of the swap"),(0,i.kt)("li",{parentName:"ul"},"Executes the swap on-chain")),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Completed the ",(0,i.kt)("a",{parentName:"li",href:"./quickstart-guide.md"},"Quickstart Guide")),(0,i.kt)("li",{parentName:"ul"},"Basic understanding of blockchain transactions"),(0,i.kt)("li",{parentName:"ul"},"Familiarity with token standards (ERC20)")),(0,i.kt)("h2",{id:"step-1-set-up-your-project"},"Step 1: Set Up Your Project"),(0,i.kt)("p",null,"Create a new directory and install dependencies:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir token-swap-app\ncd token-swap-app\nnpm init -y\nnpm install @sherrylinks/sdk typescript @types/node express @types/express --save\nnpm install ts-node nodemon --save-dev\n")),(0,i.kt)("h2",{id:"step-2-define-token-selection-action"},"Step 2: Define Token Selection Action"),(0,i.kt)("p",null,"Create ",(0,i.kt)("inlineCode",{parentName:"p"},"src/actions/token-selection.ts"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { HttpAction } from '@sherrylinks/sdk';\n\nexport const tokenSelectionAction: HttpAction = {\n  type: 'http',\n  label: 'Select Tokens',\n  description: 'Choose tokens to swap',\n  path: 'https://api.example.com/tokens',\n  params: [\n    {\n      name: 'inputToken',\n      type: 'select',\n      label: 'Input Token',\n      options: [\n        { label: 'AVAX', value: 'avax' },\n        { label: 'USDC', value: 'usdc' },\n      ],\n    },\n    {\n      name: 'outputToken',\n      type: 'select',\n      label: 'Output Token',\n      options: [\n        { label: 'AVAX', value: 'avax' },\n        { label: 'USDC', value: 'usdc' },\n      ],\n    },\n    {\n      name: 'amount',\n      type: 'number',\n      label: 'Amount',\n      min: 0,\n      step: 0.01,\n    },\n  ],\n  nextActions: [{ actionId: 'preview-swap' }],\n};\n")),(0,i.kt)("h2",{id:"step-3-create-preview-action"},"Step 3: Create Preview Action"),(0,i.kt)("p",null,"Create ",(0,i.kt)("inlineCode",{parentName:"p"},"src/actions/preview-swap.ts"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { DecisionAction } from '@sherrylinks/sdk';\n\nexport const previewSwapAction: DecisionAction = {\n  type: 'decision',\n  label: 'Preview Swap',\n  description: 'Review your swap details',\n  title: 'Swap Preview',\n  options: [\n    { label: 'Confirm', value: 'confirm', nextActionId: 'execute-swap' },\n    { label: 'Cancel', value: 'cancel', nextActionId: 'cancelled' },\n  ],\n};\n")),(0,i.kt)("h2",{id:"step-4-define-swap-action"},"Step 4: Define Swap Action"),(0,i.kt)("p",null,"Create ",(0,i.kt)("inlineCode",{parentName:"p"},"src/actions/execute-swap.ts"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { BlockchainAction } from '@sherrylinks/sdk';\n\nexport const executeSwapAction: BlockchainAction = {\n  type: 'blockchain',\n  label: 'Execute Swap',\n  description: 'Swap your tokens',\n  address: '0xRouterAddress', // Replace with actual router address\n  abi: [\n    {\n      name: 'swap',\n      type: 'function',\n      stateMutability: 'nonpayable',\n      inputs: [\n        { name: 'tokenIn', type: 'address' },\n        { name: 'tokenOut', type: 'address' },\n        { name: 'amountIn', type: 'uint256' },\n        { name: 'amountOutMin', type: 'uint256' },\n      ],\n      outputs: [{ name: 'amountOut', type: 'uint256' }],\n    },\n  ],\n  functionName: 'swap',\n  chains: { source: 'avalanche' },\n  nextActions: [\n    {\n      actionId: 'success',\n      conditions: [{ field: 'lastResult.status', operator: 'eq', value: 'success' }],\n    },\n    {\n      actionId: 'failed',\n      conditions: [{ field: 'lastResult.status', operator: 'eq', value: 'error' }],\n    },\n  ],\n};\n")),(0,i.kt)("h2",{id:"step-5-create-metadata"},"Step 5: Create Metadata"),(0,i.kt)("p",null,"Create ",(0,i.kt)("inlineCode",{parentName:"p"},"src/metadata.ts"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Metadata, createMetadata } from '@sherrylinks/sdk';\nimport { tokenSelectionAction } from './actions/token-selection';\nimport { previewSwapAction } from './actions/preview-swap';\nimport { executeSwapAction } from './actions/execute-swap';\n\nconst metadata: Metadata = {\n  url: 'https://swap.example',\n  icon: 'https://example.com/swap-icon.png',\n  title: 'Token Swap',\n  description: 'Swap tokens with our guided flow',\n  actions: [\n    {\n      id: 'token-selection',\n      ...tokenSelectionAction,\n    },\n    {\n      id: 'preview-swap',\n      ...previewSwapAction,\n    },\n    {\n      id: 'execute-swap',\n      ...executeSwapAction,\n    },\n    {\n      id: 'success',\n      type: 'completion',\n      label: 'Swap Complete',\n      message: 'Your swap was successful!',\n      status: 'success',\n    },\n    {\n      id: 'failed',\n      type: 'completion',\n      label: 'Swap Failed',\n      message: 'Your swap failed. Please try again.',\n      status: 'error',\n    },\n    {\n      id: 'cancelled',\n      type: 'completion',\n      label: 'Swap Cancelled',\n      message: 'You cancelled the swap.',\n      status: 'info',\n    },\n  ],\n};\n\nexport default createMetadata(metadata);\n")),(0,i.kt)("h2",{id:"step-6-create-server"},"Step 6: Create Server"),(0,i.kt)("p",null,"Create ",(0,i.kt)("inlineCode",{parentName:"p"},"src/server.ts"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import express from 'express';\nimport metadata from './metadata';\n\nconst app = express();\nconst port = 3000;\n\napp.get('/metadata', (req, res) => {\n  res.json(metadata);\n});\n\napp.listen(port, () => {\n  console.log(`Server running at http://localhost:${port}`);\n});\n")),(0,i.kt)("h2",{id:"step-7-run-your-mini-app"},"Step 7: Run Your Mini-App"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Start the development server:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx nodemon src/server.ts\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Your mini-app is available at ",(0,i.kt)("inlineCode",{parentName:"li"},"http://localhost:3000/metadata"))),(0,i.kt)("h2",{id:"testing-your-mini-app"},"Testing Your Mini-App"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Open the Sherry app"),(0,i.kt)("li",{parentName:"ol"},"Create a new post"),(0,i.kt)("li",{parentName:"ol"},"Add your mini-app using the URL ",(0,i.kt)("inlineCode",{parentName:"li"},"http://localhost:3000/metadata")),(0,i.kt)("li",{parentName:"ol"},"Test the complete swap flow:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Select input and output tokens"),(0,i.kt)("li",{parentName:"ul"},"Enter an amount"),(0,i.kt)("li",{parentName:"ul"},"Review the preview"),(0,i.kt)("li",{parentName:"ul"},"Execute the swap")))),(0,i.kt)("h2",{id:"what-youve-learned"},"What You've Learned"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"How to create a multi-step mini-app"),(0,i.kt)("li",{parentName:"ul"},"How to handle user inputs with parameters"),(0,i.kt)("li",{parentName:"ul"},"How to create decision points in your flow"),(0,i.kt)("li",{parentName:"ul"},"How to execute blockchain transactions"),(0,i.kt)("li",{parentName:"ul"},"How to handle different completion states")),(0,i.kt)("h2",{id:"next-steps"},"Next Steps"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/sdk/trigger-sdk-2/guides/advanced-flows"},"Advanced Flows Guide")," - Learn to create complex action flows"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/sdk/trigger-sdk-2/reference/actions/action-flows"},"Technical Reference")," - Explore action flow capabilities"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/sherrylabs/examples"},"Example Applications")," - See more examples")),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/sherrylabs/sdk"},"Trigger SDK GitHub Repository")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://eips.ethereum.org/EIPS/eip-20"},"ERC20 Token Standard")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://expressjs.com/"},"Express.js Documentation"))))}u.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),l=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=i,k=d["".concat(o,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(k,p(p({ref:t},c),{},{components:n})):a.createElement(k,p({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,p=new Array(r);p[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:i,p[1]=s;for(var l=2;l<r;l++)p[l]=n[l];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);