"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[1976],{91526:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var n=r(83117),i=(r(67294),r(3905));const o={},s="PositionConfigId",a={unversionedId:"contracts/v4/reference/periphery/libraries/PositionConfigId",id:"contracts/v4/reference/periphery/libraries/PositionConfigId",title:"PositionConfigId",description:"Git Source - Generated with forge doc",source:"@site/docs/contracts/v4/reference/periphery/libraries/PositionConfigId.md",sourceDirName:"contracts/v4/reference/periphery/libraries",slug:"/contracts/v4/reference/periphery/libraries/PositionConfigId",permalink:"/docs/contracts/v4/reference/periphery/libraries/PositionConfigId",editUrl:"https://github.com/hoffms/docs/tree/main/docs/contracts/v4/reference/periphery/libraries/PositionConfigId.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"PositionConfig",permalink:"/docs/contracts/v4/reference/periphery/libraries/PositionConfig"},next:{title:"PositionInfo",permalink:"/docs/contracts/v4/reference/periphery/libraries/PositionInfoLibrary"}},c={},l=[{value:"State Variables",id:"state-variables",level:2},{value:"MASK_UPPER_BIT",id:"mask_upper_bit",level:3},{value:"DIRTY_UPPER_BIT",id:"dirty_upper_bit",level:3},{value:"Functions",id:"functions",level:2},{value:"getConfigId",id:"getconfigid",level:3},{value:"setConfigId",id:"setconfigid",level:3},{value:"setSubscribe",id:"setsubscribe",level:3},{value:"setUnsubscribe",id:"setunsubscribe",level:3},{value:"hasSubscriber",id:"hassubscriber",level:3}],p={toc:l};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"positionconfigid"},"PositionConfigId"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-periphery/blob/ea2bf2e1ba6863bb809fc2ff791744f308c4a26d/src/libraries/PositionConfigId.sol"},"Git Source")," - Generated with ",(0,i.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-doc"},"forge doc")),(0,i.kt)("p",null,"A configId is set per tokenId\nThe lower 255 bits are used to store the truncated hash of the corresponding PositionConfig\nThe upper bit is used to signal if the tokenId has a subscriber"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"struct PositionConfigId {\n    bytes32 id;\n}\n")),(0,i.kt)("h1",{id:"positionconfigidlibrary"},"PositionConfigIdLibrary"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-periphery/blob/ea2bf2e1ba6863bb809fc2ff791744f308c4a26d/src/libraries/PositionConfigId.sol"},"Git Source")),(0,i.kt)("h2",{id:"state-variables"},"State Variables"),(0,i.kt)("h3",{id:"mask_upper_bit"},"MASK_UPPER_BIT"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 constant MASK_UPPER_BIT = 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\n")),(0,i.kt)("h3",{id:"dirty_upper_bit"},"DIRTY_UPPER_BIT"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 constant DIRTY_UPPER_BIT = 0x8000000000000000000000000000000000000000000000000000000000000000;\n")),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"getconfigid"},"getConfigId"),(0,i.kt)("p",null,"returns the truncated hash of the PositionConfig for a given tokenId"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function getConfigId(PositionConfigId storage _configId) internal view returns (bytes32 configId);\n")),(0,i.kt)("h3",{id:"setconfigid"},"setConfigId"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"We only set the config on mint, guaranteeing that the most significant bit is unset, so we can just assign the entire 32 bytes to the id.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function setConfigId(PositionConfigId storage _configId, bytes32 configId) internal;\n")),(0,i.kt)("h3",{id:"setsubscribe"},"setSubscribe"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function setSubscribe(PositionConfigId storage configId) internal;\n")),(0,i.kt)("h3",{id:"setunsubscribe"},"setUnsubscribe"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function setUnsubscribe(PositionConfigId storage configId) internal;\n")),(0,i.kt)("h3",{id:"hassubscriber"},"hasSubscriber"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function hasSubscriber(PositionConfigId storage configId) internal view returns (bool subscribed);\n")))}u.isMDXComponent=!0},3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=l(r),f=i,b=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return r?n.createElement(b,s(s({ref:t},p),{},{components:r})):n.createElement(b,s({ref:t},p))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,s=new Array(o);s[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);