"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[923],{4669:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var n=a(3117),i=(a(7294),a(3905));const r={id:"metadata",sidebar_position:2,title:"Metadata"},l="Metadata",o={unversionedId:"sdk/trigger-sdk/reference/metadata",id:"sdk/trigger-sdk/reference/metadata",title:"Metadata",description:"The Metadata interface is the foundation of every Sherry mini-app. It defines the app's identity, appearance, and available actions.",source:"@site/docs/sdk/trigger-sdk/reference/metadata.md",sourceDirName:"sdk/trigger-sdk/reference",slug:"/sdk/trigger-sdk/reference/metadata",permalink:"/docs/sdk/trigger-sdk/reference/metadata",editUrl:"https://github.com/hoffms/docs/tree/main/docs/sdk/trigger-sdk/reference/metadata.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"metadata",sidebar_position:2,title:"Metadata"},sidebar:"sdkSidebar",previous:{title:"Technical Reference",permalink:"/docs/sdk/trigger-sdk/reference/overview"},next:{title:"Blockchain Actions",permalink:"/docs/sdk/trigger-sdk/reference/actions/blockchain-actions"}},p={},s=[{value:"Interface",id:"interface",level:2},{value:"Required Properties",id:"required-properties",level:2},{value:"<code>url</code>",id:"url",level:3},{value:"<code>icon</code>",id:"icon",level:3},{value:"<code>title</code>",id:"title",level:3},{value:"<code>description</code>",id:"description",level:3},{value:"<code>actions</code>",id:"actions",level:3},{value:"Optional Properties",id:"optional-properties",level:2},{value:"<code>baseUrl</code>",id:"baseurl",level:3},{value:"<code>version</code>",id:"version",level:3},{value:"<code>tags</code>",id:"tags",level:3},{value:"Validation",id:"validation",level:2},{value:"Validation Rules",id:"validation-rules",level:3},{value:"Examples",id:"examples",level:2},{value:"Basic NFT Minter",id:"basic-nft-minter",level:3},{value:"Multi-Action Mini-App",id:"multi-action-mini-app",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Related",id:"related",level:2}],c={toc:s};function d(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"metadata"},"Metadata"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Metadata")," interface is the foundation of every Sherry mini-app. It defines the app's identity, appearance, and available actions."),(0,i.kt)("h2",{id:"interface"},"Interface"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"interface Metadata {\n  // Required Properties\n  url: string;           // Base URL of your mini-app\n  icon: string;          // URL to your app's icon\n  title: string;         // Display name of your mini-app\n  description: string;   // Brief description of your app\n  actions: Action[];     // Array of available actions\n\n  // Optional Properties\n  baseUrl?: string;      // Alternative base URL for API calls\n  version?: string;      // Version of your mini-app\n  tags?: string[];       // Keywords for discovery\n}\n")),(0,i.kt)("h2",{id:"required-properties"},"Required Properties"),(0,i.kt)("h3",{id:"url"},(0,i.kt)("inlineCode",{parentName:"h3"},"url")),(0,i.kt)("p",null,"The base URL where your mini-app is hosted. This should be a valid HTTPS URL."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const metadata: Metadata = {\n  url: 'https://my-nft-collection.com',\n  // ... other properties\n};\n")),(0,i.kt)("h3",{id:"icon"},(0,i.kt)("inlineCode",{parentName:"h3"},"icon")),(0,i.kt)("p",null,"URL to your app's icon image. Should be a square image (recommended size: 512x512px)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const metadata: Metadata = {\n  icon: 'https://my-nft-collection.com/icon.png',\n  // ... other properties\n};\n")),(0,i.kt)("h3",{id:"title"},(0,i.kt)("inlineCode",{parentName:"h3"},"title")),(0,i.kt)("p",null,"The display name of your mini-app. Keep it short and descriptive."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const metadata: Metadata = {\n  title: 'Cosmic NFT Minter',\n  // ... other properties\n};\n")),(0,i.kt)("h3",{id:"description"},(0,i.kt)("inlineCode",{parentName:"h3"},"description")),(0,i.kt)("p",null,"A brief description of what your mini-app does. This helps users understand its purpose."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const metadata: Metadata = {\n  description: 'Mint exclusive NFTs directly from social media',\n  // ... other properties\n};\n")),(0,i.kt)("h3",{id:"actions"},(0,i.kt)("inlineCode",{parentName:"h3"},"actions")),(0,i.kt)("p",null,"An array of actions that users can perform in your mini-app. Each action must be one of the supported action types:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BlockchainAction")," - Smart contract interactions"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"TransferAction")," - Native token transfers"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"HttpAction")," - API calls"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DynamicAction")," - Server-computed actions"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ActionFlow")," - Multi-step processes")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const metadata: Metadata = {\n  actions: [\n    {\n      type: 'blockchain',\n      label: 'Mint NFT',\n      // ... action configuration\n    },\n    {\n      type: 'transfer',\n      label: 'Send Tip',\n      // ... action configuration\n    }\n  ],\n  // ... other properties\n};\n")),(0,i.kt)("h2",{id:"optional-properties"},"Optional Properties"),(0,i.kt)("h3",{id:"baseurl"},(0,i.kt)("inlineCode",{parentName:"h3"},"baseUrl")),(0,i.kt)("p",null,"Alternative base URL for API calls. Useful when your API is hosted on a different domain."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const metadata: Metadata = {\n  baseUrl: 'https://api.my-nft-collection.com',\n  // ... other properties\n};\n")),(0,i.kt)("h3",{id:"version"},(0,i.kt)("inlineCode",{parentName:"h3"},"version")),(0,i.kt)("p",null,"Version of your mini-app. Useful for tracking changes and compatibility."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const metadata: Metadata = {\n  version: '1.0.0',\n  // ... other properties\n};\n")),(0,i.kt)("h3",{id:"tags"},(0,i.kt)("inlineCode",{parentName:"h3"},"tags")),(0,i.kt)("p",null,"Keywords that help users discover your mini-app."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const metadata: Metadata = {\n  tags: ['nft', 'minting', 'avalanche', 'art'],\n  // ... other properties\n};\n")),(0,i.kt)("h2",{id:"validation"},"Validation"),(0,i.kt)("p",null,"The SDK provides built-in validation for metadata through the ",(0,i.kt)("inlineCode",{parentName:"p"},"createMetadata")," function:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createMetadata, Metadata } from '@sherrylinks/sdk';\n\nconst metadata: Metadata = {\n  // ... your metadata configuration\n};\n\ntry {\n  const validated = createMetadata(metadata);\n  console.log('\u2705 Metadata is valid:', validated);\n} catch (error) {\n  console.error('\u274c Validation failed:', error);\n}\n")),(0,i.kt)("h3",{id:"validation-rules"},"Validation Rules"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Required Fields")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"All required properties must be present"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"url")," must be a valid HTTPS URL"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"icon")," must be a valid URL"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"title")," must be non-empty"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"description")," must be non-empty"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"actions")," must be a non-empty array"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Action Validation")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Each action must have a valid type"),(0,i.kt)("li",{parentName:"ul"},"Action-specific properties are validated"),(0,i.kt)("li",{parentName:"ul"},"Maximum of 4 actions per mini-app"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"URL Validation")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"url")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"baseUrl")," must be valid HTTPS URLs"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"icon")," must be a valid URL"),(0,i.kt)("li",{parentName:"ul"},"URLs cannot contain invalid characters")))),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"basic-nft-minter"},"Basic NFT Minter"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createMetadata, Metadata } from '@sherrylinks/sdk';\n\nconst nftMinter: Metadata = {\n  url: 'https://my-nft-collection.com',\n  icon: 'https://my-nft-collection.com/icon.png',\n  title: 'Cosmic NFT Minter',\n  description: 'Mint exclusive NFTs directly from social media',\n  version: '1.0.0',\n  tags: ['nft', 'minting', 'avalanche'],\n  actions: [\n    {\n      type: 'blockchain',\n      label: 'Mint NFT',\n      address: '0x742d35Cc6734C0532925a3b8D4ccd306f6F4B26C',\n      abi: contractAbi,\n      functionName: 'mint',\n      chains: { source: 'avalanche' },\n      amount: 0.1,\n      params: [\n        {\n          name: 'to',\n          label: 'Your Address',\n          type: 'address',\n          required: true,\n        },\n        {\n          name: 'tokenURI',\n          label: 'Metadata URI',\n          type: 'text',\n          value: 'ipfs://QmNft42...',\n          fixed: true,\n        },\n      ],\n    },\n  ],\n};\n\nconst validated = createMetadata(nftMinter);\n")),(0,i.kt)("h3",{id:"multi-action-mini-app"},"Multi-Action Mini-App"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createMetadata, Metadata } from '@sherrylinks/sdk';\n\nconst socialApp: Metadata = {\n  url: 'https://my-social-app.com',\n  icon: 'https://my-social-app.com/icon.png',\n  title: 'Social Token Platform',\n  description: 'Create and manage your social token',\n  baseUrl: 'https://api.my-social-app.com',\n  version: '2.0.0',\n  tags: ['social', 'tokens', 'avalanche', 'celo'],\n  actions: [\n    {\n      type: 'blockchain',\n      label: 'Create Token',\n      // ... token creation action\n    },\n    {\n      type: 'transfer',\n      label: 'Send Tokens',\n      // ... token transfer action\n    },\n    {\n      type: 'dynamic',\n      label: 'Token Analytics',\n      // ... analytics action\n    },\n    {\n      type: 'flow',\n      label: 'Token Launch',\n      // ... token launch flow\n    },\n  ],\n};\n\nconst validated = createMetadata(socialApp);\n")),(0,i.kt)("h2",{id:"best-practices"},"Best Practices"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Keep it Simple")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Use clear, descriptive titles"),(0,i.kt)("li",{parentName:"ul"},"Write concise descriptions"),(0,i.kt)("li",{parentName:"ul"},"Limit the number of actions"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Security")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Always use HTTPS URLs"),(0,i.kt)("li",{parentName:"ul"},"Validate user inputs"),(0,i.kt)("li",{parentName:"ul"},"Use appropriate access controls"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Performance")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Optimize icon size"),(0,i.kt)("li",{parentName:"ul"},"Minimize action count"),(0,i.kt)("li",{parentName:"ul"},"Use efficient parameter types"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"User Experience")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Provide clear action labels"),(0,i.kt)("li",{parentName:"ul"},"Include helpful descriptions"),(0,i.kt)("li",{parentName:"ul"},"Use appropriate parameter types")))),(0,i.kt)("h2",{id:"related"},"Related"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./actions/action-types.md"},"Action Types")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/sdk/trigger-sdk/reference/parameters/parameter-types"},"Parameter System")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./validation/metadata-validation.md"},"Validation")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./best-practices/security.md"},"Best Practices"))))}d.isMDXComponent=!0},3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=s(a),u=i,k=m["".concat(p,".").concat(u)]||m[u]||d[u]||r;return a?n.createElement(k,l(l({ref:t},c),{},{components:a})):n.createElement(k,l({ref:t},c))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);