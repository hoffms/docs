"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[35098],{78044:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var r=a(83117),n=(a(67294),a(3905));const l={},o="ERC721Permit_v4",p={unversionedId:"contracts/v4/reference/periphery/base/ERC721Permit_v4",id:"contracts/v4/reference/periphery/base/ERC721Permit_v4",title:"ERC721Permit_v4",description:"Git Source - Generated with forge doc",source:"@site/docs/contracts/v4/reference/periphery/base/ERC721Permit_v4.md",sourceDirName:"contracts/v4/reference/periphery/base",slug:"/contracts/v4/reference/periphery/base/ERC721Permit_v4",permalink:"/docs/contracts/v4/reference/periphery/base/ERC721Permit_v4",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/contracts/v4/reference/periphery/base/ERC721Permit_v4.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"EIP712_v4",permalink:"/docs/contracts/v4/reference/periphery/base/EIP712_v4"},next:{title:"ImmutableState",permalink:"/docs/contracts/v4/reference/periphery/base/ImmutableState"}},i={},d=[{value:"Functions",id:"functions",level:2},{value:"constructor",id:"constructor",level:3},{value:"checkSignatureDeadline",id:"checksignaturedeadline",level:3},{value:"permit",id:"permit",level:3},{value:"permitForAll",id:"permitforall",level:3},{value:"setApprovalForAll",id:"setapprovalforall",level:3},{value:"_approveForAll",id:"_approveforall",level:3},{value:"approve",id:"approve",level:3},{value:"_approve",id:"_approve",level:3},{value:"_isApprovedOrOwner",id:"_isapprovedorowner",level:3}],s={toc:d};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"erc721permit_v4"},"ERC721Permit_v4"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-periphery/blob/ea2bf2e1ba6863bb809fc2ff791744f308c4a26d/src/base/ERC721Permit_v4.sol"},"Git Source")," - Generated with ",(0,n.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-doc"},"forge doc")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Inherits:"),"\nERC721, ",(0,n.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/periphery/interfaces/IERC721Permit_v4"},"IERC721Permit_v4"),", ",(0,n.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/periphery/base/EIP712_v4"},"EIP712_v4"),", ",(0,n.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/periphery/base/UnorderedNonce"},"UnorderedNonce")),(0,n.kt)("p",null,"Nonfungible tokens that support an approve via signature, i.e. permit"),(0,n.kt)("h2",{id:"functions"},"Functions"),(0,n.kt)("h3",{id:"constructor"},"constructor"),(0,n.kt)("p",null,"Computes the nameHash and versionHash"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor(string memory name_, string memory symbol_) ERC721(name_, symbol_) EIP712_v4(name_);\n")),(0,n.kt)("h3",{id:"checksignaturedeadline"},"checkSignatureDeadline"),(0,n.kt)("p",null,"Checks if the block's timestamp is before a signature's deadline"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"modifier checkSignatureDeadline(uint256 deadline);\n")),(0,n.kt)("h3",{id:"permit"},"permit"),(0,n.kt)("p",null,"Approve of a specific token ID for spending by spender via signature"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"payable so it can be multicalled with NATIVE related actions")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function permit(address spender, uint256 tokenId, uint256 deadline, uint256 nonce, bytes calldata signature)\n    external\n    payable\n    checkSignatureDeadline(deadline);\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"spender")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"address")),(0,n.kt)("td",{parentName:"tr",align:null},"The account that is being approved")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"uint256")),(0,n.kt)("td",{parentName:"tr",align:null},"The ID of the token that is being approved for spending")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"deadline")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"uint256")),(0,n.kt)("td",{parentName:"tr",align:null},"The deadline timestamp by which the call must be mined for the approve to work")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"nonce")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"uint256")),(0,n.kt)("td",{parentName:"tr",align:null},"a unique value, for an owner, to prevent replay attacks; an unordered nonce where the top 248 bits correspond to a word and the bottom 8 bits calculate the bit position of the word")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"signature")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"bytes")),(0,n.kt)("td",{parentName:"tr",align:null},"Concatenated data from a valid secp256k1 signature from the holder, i.e. abi.encodePacked(r, s, v)")))),(0,n.kt)("h3",{id:"permitforall"},"permitForAll"),(0,n.kt)("p",null,"Set an operator with full permission to an owner's tokens via signature"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"payable so it can be multicalled with NATIVE related actions")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function permitForAll(\n    address owner,\n    address operator,\n    bool approved,\n    uint256 deadline,\n    uint256 nonce,\n    bytes calldata signature\n) external payable checkSignatureDeadline(deadline);\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"owner")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"address")),(0,n.kt)("td",{parentName:"tr",align:null},"The address that is setting the operator")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"operator")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"address")),(0,n.kt)("td",{parentName:"tr",align:null},"The address that will be set as an operator for the owner")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"approved")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"bool")),(0,n.kt)("td",{parentName:"tr",align:null},"The permission to set on the operator")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"deadline")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"uint256")),(0,n.kt)("td",{parentName:"tr",align:null},"The deadline timestamp by which the call must be mined for the approve to work")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"nonce")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"uint256")),(0,n.kt)("td",{parentName:"tr",align:null},"a unique value, for an owner, to prevent replay attacks; an unordered nonce where the top 248 bits correspond to a word and the bottom 8 bits calculate the bit position of the word")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"signature")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"bytes")),(0,n.kt)("td",{parentName:"tr",align:null},"Concatenated data from a valid secp256k1 signature from the holder, i.e. abi.encodePacked(r, s, v)")))),(0,n.kt)("h3",{id:"setapprovalforall"},"setApprovalForAll"),(0,n.kt)("p",null,'Enable or disable approval for a third party ("operator") to manage\nall of ',(0,n.kt)("inlineCode",{parentName:"p"},"msg.sender"),"'s assets"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Emits the ApprovalForAll event. The contract MUST allow\nmultiple operators per owner.")),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Override Solmate's ERC721 setApprovalForAll so setApprovalForAll() and permit() share the _approveForAll method")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function setApprovalForAll(address operator, bool approved) public override;\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"operator")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"address")),(0,n.kt)("td",{parentName:"tr",align:null},"Address to add to the set of authorized operators")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"approved")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"bool")),(0,n.kt)("td",{parentName:"tr",align:null},"True if the operator is approved, false to revoke approval")))),(0,n.kt)("h3",{id:"_approveforall"},"_approveForAll"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function _approveForAll(address owner, address operator, bool approved) internal;\n")),(0,n.kt)("h3",{id:"approve"},"approve"),(0,n.kt)("p",null,"Change or reaffirm the approved address for an NFT"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"override Solmate's ERC721 approve so approve() and permit() share the _approve method\nPassing a spender address of zero can be used to remove any outstanding approvals\nThrows error unless ",(0,n.kt)("inlineCode",{parentName:"em"},"msg.sender")," is the current NFT owner,\nor an authorized operator of the current owner.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function approve(address spender, uint256 id) public override;\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"spender")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"address")),(0,n.kt)("td",{parentName:"tr",align:null},"The new approved NFT controller")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"id")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"uint256")),(0,n.kt)("td",{parentName:"tr",align:null},"The tokenId of the NFT to approve")))),(0,n.kt)("h3",{id:"_approve"},"_approve"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function _approve(address owner, address spender, uint256 id) internal;\n")),(0,n.kt)("h3",{id:"_isapprovedorowner"},"_isApprovedOrOwner"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"function _isApprovedOrOwner(address spender, uint256 tokenId) internal view returns (bool);\n")))}m.isMDXComponent=!0},3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),d=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=d(e.components);return r.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=d(a),c=n,k=u["".concat(i,".").concat(c)]||u[c]||m[c]||l;return a?r.createElement(k,o(o({ref:t},s),{},{components:a})):r.createElement(k,o({ref:t},s))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=u;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:n,o[1]=p;for(var d=2;d<l;d++)o[d]=a[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);