"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[1134],{8902:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var a=t(3117),o=(t(7294),t(3905));const r={id:"intermediate-examples",sidebar_position:2,title:"Intermediate Examples"},l="\ud83d\udfe1 Intermediate Examples",i={unversionedId:"sdk/trigger-sdk/examples/intermediate-examples",id:"sdk/trigger-sdk/examples/intermediate-examples",title:"Intermediate Examples",description:"Ready to build more sophisticated mini-apps.",source:"@site/docs/sdk/trigger-sdk/examples/intermediate.md",sourceDirName:"sdk/trigger-sdk/examples",slug:"/sdk/trigger-sdk/examples/intermediate-examples",permalink:"/docs/sdk/trigger-sdk/examples/intermediate-examples",editUrl:"https://github.com/hoffms/docs/tree/main/docs/sdk/trigger-sdk/examples/intermediate.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"intermediate-examples",sidebar_position:2,title:"Intermediate Examples"},sidebar:"sdkSidebar",previous:{title:"Beginner Examples",permalink:"/docs/sdk/trigger-sdk/examples/beginner-examples"},next:{title:"Advanced Examples",permalink:"/docs/sdk/trigger-sdk/examples/advanced-examples"}},s={},p=[{value:"5. <strong>Token Approval + Swap Flow</strong>",id:"5-token-approval--swap-flow",level:3},{value:"6. <strong>DAO Voting with Proposals</strong>",id:"6-dao-voting-with-proposals",level:3},{value:"7. <strong>Cross-Chain Asset Bridge</strong>",id:"7-cross-chain-asset-bridge",level:3},{value:"8. <strong>Multi-Step User Onboarding</strong>",id:"8-multi-step-user-onboarding",level:3}],c={toc:p};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"-intermediate-examples"},"\ud83d\udfe1 Intermediate Examples"),(0,o.kt)("p",null,"Ready to build more sophisticated mini-apps."),(0,o.kt)("h3",{id:"5-token-approval--swap-flow"},"5. ",(0,o.kt)("strong",{parentName:"h3"},"Token Approval + Swap Flow")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u23f1\ufe0f Setup: 15 minutes")," | ",(0,o.kt)("strong",{parentName:"p"},"Action Type: Flow")),(0,o.kt)("p",null,"A two-step process: approve tokens, then swap them."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ActionFlow } from '@sherrylinks/sdk';\n\nconst tokenSwapFlow: ActionFlow = {\n  type: 'flow',\n  label: 'Swap USDC for AVAX',\n  initialActionId: 'approve-usdc',\n  actions: [\n    // Step 1: Approve USDC spending\n    {\n      id: 'approve-usdc',\n      type: 'blockchain',\n      label: 'Step 1: Approve USDC',\n      address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n      abi: erc20Abi,\n      functionName: 'approve',\n      chains: { source: 'avalanche' },\n      params: [\n        {\n          name: 'spender',\n          label: 'DEX Router',\n          type: 'address',\n          value: '0x60aE616a2155Ee3d9A68541Ba4544862310933d4',\n          fixed: true,\n        },\n        {\n          name: 'amount',\n          label: 'USDC Amount',\n          type: 'number',\n          required: true,\n          min: 1,\n          max: 10000,\n        },\n      ],\n      nextActions: [\n        {\n          actionId: 'execute-swap',\n          conditions: [{ field: 'lastResult.status', operator: 'eq', value: 'success' }],\n        },\n        {\n          actionId: 'approval-failed',\n        },\n      ],\n    },\n\n    // Step 2: Execute the swap\n    {\n      id: 'execute-swap',\n      type: 'blockchain',\n      label: 'Step 2: Swap Tokens',\n      address: '0x60aE616a2155Ee3d9A68541Ba4544862310933d4',\n      abi: routerAbi,\n      functionName: 'swapExactTokensForAVAX',\n      chains: { source: 'avalanche' },\n      params: [\n        {\n          name: 'amountIn',\n          label: 'Amount In',\n          type: 'number',\n          value: '{{amount}}', // From previous step\n          fixed: true,\n        },\n        {\n          name: 'amountOutMin',\n          label: 'Min AVAX Out',\n          type: 'number',\n          required: true,\n        },\n        {\n          name: 'path',\n          label: 'Swap Path',\n          type: 'text',\n          value:\n            '[\"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"]',\n          fixed: true,\n        },\n        {\n          name: 'to',\n          label: 'Recipient',\n          type: 'address',\n          value: '{{userAddress}}',\n          fixed: true,\n        },\n        {\n          name: 'deadline',\n          label: 'Deadline',\n          type: 'number',\n          value: '{{timestamp + 1200}}',\n          fixed: true,\n        },\n      ],\n      nextActions: [{ actionId: 'swap-complete' }],\n    },\n\n    // Completion states\n    {\n      id: 'swap-complete',\n      type: 'completion',\n      label: 'Swap Successful',\n      message: 'Your USDC has been swapped for AVAX! \ud83c\udf89',\n      status: 'success',\n    },\n    {\n      id: 'approval-failed',\n      type: 'completion',\n      label: 'Approval Failed',\n      message: 'Token approval failed. Please try again.',\n      status: 'error',\n    },\n  ],\n};\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udfaf What you'll learn:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Multi-step Action Flows"),(0,o.kt)("li",{parentName:"ul"},"Conditional navigation between steps"),(0,o.kt)("li",{parentName:"ul"},"Parameter passing between actions"),(0,o.kt)("li",{parentName:"ul"},"Error handling in flows")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"6-dao-voting-with-proposals"},"6. ",(0,o.kt)("strong",{parentName:"h3"},"DAO Voting with Proposals")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u23f1\ufe0f Setup: 10 minutes")," | ",(0,o.kt)("strong",{parentName:"p"},"Action Type: Blockchain")),(0,o.kt)("p",null,"Vote on DAO proposals with real-time proposal data."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const daoVotingApp: Metadata = {\n  url: 'https://dao-voting.com',\n  icon: '\ud83d\uddf3\ufe0f',\n  title: 'DAO Governance',\n  description: 'Vote on community proposals',\n  actions: [\n    {\n      type: 'blockchain',\n      label: 'Cast Your Vote',\n      address: '0xDAOGovernanceContract',\n      abi: daoAbi,\n      functionName: 'castVote',\n      chains: { source: 'celo' },\n      params: [\n        {\n          name: 'proposalId',\n          label: 'Active Proposals',\n          type: 'select',\n          required: true,\n          options: [\n            {\n              label: 'Proposal #42: Treasury Allocation',\n              value: 42,\n              description: 'Allocate 100K tokens for ecosystem development',\n            },\n            {\n              label: 'Proposal #43: Partnership with Protocol X',\n              value: 43,\n              description: 'Strategic partnership for cross-chain expansion',\n            },\n            {\n              label: 'Proposal #44: Governance Token Split',\n              value: 44,\n              description: '2:1 token split with updated tokenomics',\n            },\n          ],\n        },\n        {\n          name: 'support',\n          label: 'Your Vote',\n          type: 'radio',\n          required: true,\n          options: [\n            {\n              label: '\u2705 Yes - I support this proposal',\n              value: true,\n              description: 'Vote in favor of the proposal',\n            },\n            {\n              label: '\u274c No - I oppose this proposal',\n              value: false,\n              description: 'Vote against the proposal',\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udfaf What you'll learn:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Complex parameter selection"),(0,o.kt)("li",{parentName:"ul"},"Boolean parameter handling"),(0,o.kt)("li",{parentName:"ul"},"Real-world DAO integration"),(0,o.kt)("li",{parentName:"ul"},"Meaningful vote descriptions")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"7-cross-chain-asset-bridge"},"7. ",(0,o.kt)("strong",{parentName:"h3"},"Cross-Chain Asset Bridge")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u23f1\ufe0f Setup: 12 minutes")," | ",(0,o.kt)("strong",{parentName:"p"},"Action Type: Blockchain")),(0,o.kt)("p",null,"Bridge tokens between Avalanche and Celo networks."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const bridgeApp: Metadata = {\n  url: 'https://cross-chain-bridge.com',\n  icon: '\ud83c\udf09',\n  title: 'Cross-Chain Bridge',\n  description: 'Move assets between Avalanche and Celo',\n  actions: [\n    {\n      type: 'blockchain',\n      label: 'Bridge to Celo',\n      address: '0xBridgeContractAddress',\n      abi: bridgeAbi,\n      functionName: 'bridgeTokens',\n      chains: { source: 'avalanche', destination: 'celo' },\n      params: [\n        {\n          name: 'token',\n          label: 'Token to Bridge',\n          type: 'select',\n          required: true,\n          options: [\n            {\n              label: 'USDC (USD Coin)',\n              value: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n              description: 'Stable USD-pegged token',\n            },\n            {\n              label: 'USDT (Tether)',\n              value: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n              description: 'Widely used stablecoin',\n            },\n          ],\n        },\n        {\n          name: 'amount',\n          label: 'Amount to Bridge',\n          type: 'number',\n          required: true,\n          min: 1,\n          max: 100000,\n          description: 'Amount of tokens to send to Celo',\n        },\n        {\n          name: 'recipient',\n          label: 'Recipient on Celo',\n          type: 'address',\n          required: true,\n          description: 'Address that will receive tokens on Celo network',\n        },\n        {\n          name: 'destinationChainId',\n          label: 'Destination Chain',\n          type: 'number',\n          value: 42220,\n          fixed: true,\n        },\n      ],\n    },\n  ],\n};\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udfaf What you'll learn:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Cross-chain action configuration"),(0,o.kt)("li",{parentName:"ul"},"Token selection with descriptions"),(0,o.kt)("li",{parentName:"ul"},"Address validation across chains"),(0,o.kt)("li",{parentName:"ul"},"Fixed vs dynamic parameters")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"8-multi-step-user-onboarding"},"8. ",(0,o.kt)("strong",{parentName:"h3"},"Multi-Step User Onboarding")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u23f1\ufe0f Setup: 20 minutes")," | ",(0,o.kt)("strong",{parentName:"p"},"Action Type: Flow")),(0,o.kt)("p",null,"Complete user onboarding with email, wallet, and NFT mint."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const onboardingFlow: ActionFlow = {\n  type: 'flow',\n  label: 'Complete Onboarding',\n  initialActionId: 'collect-info',\n  actions: [\n    // Step 1: Collect user information\n    {\n      id: 'collect-info',\n      type: 'http',\n      label: 'Welcome! Tell us about yourself',\n      path: 'https://api.myapp.com/onboard',\n      params: [\n        {\n          name: 'name',\n          label: 'Full Name',\n          type: 'text',\n          required: true,\n          minLength: 2,\n          maxLength: 50,\n        },\n        {\n          name: 'email',\n          label: 'Email Address',\n          type: 'email',\n          required: true,\n        },\n        {\n          name: 'experience',\n          label: 'Web3 Experience',\n          type: 'radio',\n          required: true,\n          options: [\n            { label: 'Complete Beginner', value: 'beginner' },\n            { label: 'Some Experience', value: 'intermediate' },\n            { label: 'Very Experienced', value: 'expert' },\n          ],\n        },\n      ],\n      nextActions: [{ actionId: 'choose-path' }],\n    },\n\n    // Step 2: Choose onboarding path\n    {\n      id: 'choose-path',\n      type: 'decision',\n      label: 'Choose Your Path',\n      title: 'What would you like to do first?',\n      options: [\n        {\n          label: 'Get my welcome NFT',\n          value: 'nft',\n          nextActionId: 'mint-welcome-nft',\n        },\n        {\n          label: 'Learn more about the platform',\n          value: 'learn',\n          nextActionId: 'learning-complete',\n        },\n        {\n          label: 'Explore features',\n          value: 'explore',\n          nextActionId: 'exploration-complete',\n        },\n      ],\n    },\n\n    // Step 3: Mint welcome NFT\n    {\n      id: 'mint-welcome-nft',\n      type: 'blockchain',\n      label: 'Mint Your Welcome NFT',\n      address: '0xWelcomeNFTContract',\n      abi: welcomeNftAbi,\n      functionName: 'mintWelcome',\n      chains: { source: 'fuji' },\n      params: [\n        {\n          name: 'to',\n          label: 'Your Address',\n          type: 'address',\n          required: true,\n        },\n        {\n          name: 'experience',\n          label: 'Experience Level',\n          type: 'text',\n          value: '{{experience}}', // From step 1\n          fixed: true,\n        },\n      ],\n      nextActions: [{ actionId: 'onboarding-complete' }],\n    },\n\n    // Completion states\n    {\n      id: 'onboarding-complete',\n      type: 'completion',\n      label: 'Welcome Aboard! \ud83c\udf89',\n      message: 'Your onboarding is complete! Check your wallet for your welcome NFT.',\n      status: 'success',\n    },\n    {\n      id: 'learning-complete',\n      type: 'completion',\n      label: 'Keep Learning!',\n      message: 'Great choice! Check out our documentation to learn more.',\n      status: 'success',\n    },\n    {\n      id: 'exploration-complete',\n      type: 'completion',\n      label: 'Happy Exploring!',\n      message: 'Dive in and explore all our features. Welcome to the community!',\n      status: 'success',\n    },\n  ],\n};\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\ud83c\udfaf What you'll learn:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Complex multi-step flows"),(0,o.kt)("li",{parentName:"ul"},"Decision trees and branching"),(0,o.kt)("li",{parentName:"ul"},"Data passing between steps"),(0,o.kt)("li",{parentName:"ul"},"Multiple completion states")))}u.isMDXComponent=!0},3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,b=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return t?a.createElement(b,l(l({ref:n},c),{},{components:t})):a.createElement(b,l({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<r;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);