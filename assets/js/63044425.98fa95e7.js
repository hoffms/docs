"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[11174],{59023:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var n=r(83117),a=(r(67294),r(3905));const o={},c="PoolSwapTest",s={unversionedId:"contracts/v4/reference/core/test/PoolSwapTest",id:"contracts/v4/reference/core/test/PoolSwapTest",title:"PoolSwapTest",description:"Git Source - Generated with forge doc",source:"@site/docs/contracts/v4/reference/core/test/PoolSwapTest.md",sourceDirName:"contracts/v4/reference/core/test",slug:"/contracts/v4/reference/core/test/PoolSwapTest",permalink:"/docs/contracts/v4/reference/core/test/PoolSwapTest",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/contracts/v4/reference/core/test/PoolSwapTest.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"Action",permalink:"/docs/contracts/v4/reference/core/test/PoolNestedActionsTest"},next:{title:"PoolTakeTest",permalink:"/docs/contracts/v4/reference/core/test/PoolTakeTest"}},l={},i=[{value:"Functions",id:"functions",level:2},{value:"constructor",id:"constructor",level:3},{value:"swap",id:"swap",level:3},{value:"unlockCallback",id:"unlockcallback",level:3},{value:"Errors",id:"errors",level:2},{value:"NoSwapOccurred",id:"noswapoccurred",level:3},{value:"Structs",id:"structs",level:2},{value:"CallbackData",id:"callbackdata",level:3},{value:"TestSettings",id:"testsettings",level:3}],p={toc:i};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"poolswaptest"},"PoolSwapTest"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-core/blob/80311e34080fee64b6fc6c916e9a51a437d0e482/src/test/PoolSwapTest.sol"},"Git Source")," - Generated with ",(0,a.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-doc"},"forge doc")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Inherits:"),"\n",(0,a.kt)("a",{parentName:"p",href:"/docs/contracts/v4/reference/core/test/PoolTestBase"},"PoolTestBase")),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("h3",{id:"constructor"},"constructor"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor(IPoolManager _manager) PoolTestBase(_manager);\n")),(0,a.kt)("h3",{id:"swap"},"swap"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function swap(\n    PoolKey memory key,\n    IPoolManager.SwapParams memory params,\n    TestSettings memory testSettings,\n    bytes memory hookData\n) external payable returns (BalanceDelta delta);\n")),(0,a.kt)("h3",{id:"unlockcallback"},"unlockCallback"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function unlockCallback(bytes calldata rawData) external returns (bytes memory);\n")),(0,a.kt)("h2",{id:"errors"},"Errors"),(0,a.kt)("h3",{id:"noswapoccurred"},"NoSwapOccurred"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"error NoSwapOccurred();\n")),(0,a.kt)("h2",{id:"structs"},"Structs"),(0,a.kt)("h3",{id:"callbackdata"},"CallbackData"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"struct CallbackData {\n    address sender;\n    TestSettings testSettings;\n    PoolKey key;\n    IPoolManager.SwapParams params;\n    bytes hookData;\n}\n")),(0,a.kt)("h3",{id:"testsettings"},"TestSettings"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"struct TestSettings {\n    bool takeClaims;\n    bool settleUsingBurn;\n}\n")))}u.isMDXComponent=!0},3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),i=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=i(r),m=a,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,c(c({ref:t},p),{},{components:r})):n.createElement(f,c({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var i=2;i<o;i++)c[i]=r[i];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);