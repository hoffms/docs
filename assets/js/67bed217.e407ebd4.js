"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[6847],{36160:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var a=r(83117),n=(r(67294),r(3905));const i={id:"overview",sidebar_position:1,title:"Technical Reference"},s="Technical Reference",o={unversionedId:"sdk/trigger-sdk-2/guides/reference/overview",id:"sdk/trigger-sdk-2/guides/reference/overview",title:"Technical Reference",description:"This section provides detailed technical documentation for the Sherry SDK. Each component is documented with its TypeScript interfaces, examples, and usage guidelines.",source:"@site/docs/sdk/trigger-sdk-2/guides/reference/overview.md",sourceDirName:"sdk/trigger-sdk-2/guides/reference",slug:"/sdk/trigger-sdk-2/guides/reference/overview",permalink:"/docs/sdk/trigger-sdk-2/guides/reference/overview",editUrl:"https://github.com/hoffms/docs/tree/main/docs/sdk/trigger-sdk-2/guides/reference/overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"overview",sidebar_position:1,title:"Technical Reference"},sidebar:"sdkSidebar",previous:{title:"Guide - MiniApp with NextJS",permalink:"/docs/sdk/trigger-sdk-2/guides/guide-en"},next:{title:"Metadata",permalink:"/docs/sdk/trigger-sdk-2/guides/reference/metadata"}},c={},l=[{value:"Core Components",id:"core-components",level:2},{value:"Metadata",id:"metadata",level:3},{value:"Actions",id:"actions",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Chains",id:"chains",level:3},{value:"Validation",id:"validation",level:3},{value:"Type Definitions",id:"type-definitions",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"API Reference",id:"api-reference",level:2}],d={toc:l};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"technical-reference"},"Technical Reference"),(0,n.kt)("p",null,"This section provides detailed technical documentation for the Sherry SDK. Each component is documented with its TypeScript interfaces, examples, and usage guidelines."),(0,n.kt)("h2",{id:"core-components"},"Core Components"),(0,n.kt)("h3",{id:"metadata"},"Metadata"),(0,n.kt)("p",null,"The foundation of every Sherry mini-app. Defines the app's identity, appearance, and available actions."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/sdk/trigger-sdk-2/guides/reference/metadata"},"View Metadata Documentation")),(0,n.kt)("h3",{id:"actions"},"Actions"),(0,n.kt)("p",null,"Different types of interactions that can be performed within a mini-app:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/sdk/trigger-sdk-2/guides/reference/actions/blockchain-actions"},"Blockchain Actions")," - Smart contract interactions"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/sdk/trigger-sdk-2/guides/reference/actions/transfer-actions"},"Transfer Actions")," - Native token transfers"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/sdk/trigger-sdk-2/guides/reference/actions/http-actions"},"HTTP Actions")," - API calls and server interactions"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/sdk/trigger-sdk-2/guides/reference/actions/dynamic-actions"},"Dynamic Actions")," - Server-computed actions"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/sdk/trigger-sdk-2/guides/reference/actions/action-flows"},"Action Flows")," - Multi-step processes")),(0,n.kt)("h3",{id:"parameters"},"Parameters"),(0,n.kt)("p",null,"User input configuration for actions:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/sdk/trigger-sdk-2/guides/reference/parameters/parameter-types"},"Parameter Types")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/sdk/trigger-sdk-2/guides/reference/parameters/parameter-templates"},"Parameter Templates")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"./parameters/parameter-validation.md"},"Parameter Validation"))),(0,n.kt)("h3",{id:"chains"},"Chains"),(0,n.kt)("p",null,"Blockchain configuration and support:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"./chains.md"},"Supported Chains")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"./chains.md#chaincontext-interface"},"Chain Context")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"./chains.md#cross-chain-actions"},"Cross-Chain Actions"))),(0,n.kt)("h3",{id:"validation"},"Validation"),(0,n.kt)("p",null,"Runtime validation and type checking:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/sdk/trigger-sdk-2/guides/reference/validation/metadata-validation"},"Metadata Validation")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"./validation/action-validation.md"},"Action Validation")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"./validation/parameter-validation.md"},"Parameter Validation"))),(0,n.kt)("h2",{id:"type-definitions"},"Type Definitions"),(0,n.kt)("p",null,"All TypeScript interfaces and types are exported from the SDK package:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"import {\n  Metadata,\n  Action,\n  Parameter,\n  ChainContext,\n  // ... other types\n} from '@sherrylinks/sdk';\n")),(0,n.kt)("h2",{id:"best-practices"},"Best Practices"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"./best-practices/error-handling.md"},"Error Handling")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/sdk/trigger-sdk-2/guides/reference/best-practices/security"},"Security Considerations")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"./best-practices/performance.md"},"Performance Optimization"))),(0,n.kt)("h2",{id:"api-reference"},"API Reference"),(0,n.kt)("p",null,"For a complete list of exported functions and utilities, see the ",(0,n.kt)("a",{parentName:"p",href:"./api-reference.md"},"API Reference"),"."))}p.isMDXComponent=!0},3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),l=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=l(r),m=n,f=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return r?a.createElement(f,s(s({ref:t},d),{},{components:r})):a.createElement(f,s({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,s=new Array(i);s[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var l=2;l<i;l++)s[l]=r[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);