"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[47693],{98284:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var a=n(83117),i=(n(67294),n(3905));const r={title:"Decrease Liquidity"},o=void 0,l={unversionedId:"contracts/v4/quickstart/manage-liquidity/decrease-liquidity",id:"contracts/v4/quickstart/manage-liquidity/decrease-liquidity",title:"Decrease Liquidity",description:"Context",source:"@site/docs/contracts/v4/quickstart/02-manage-liquidity/03-decrease-liquidity.mdx",sourceDirName:"contracts/v4/quickstart/02-manage-liquidity",slug:"/contracts/v4/quickstart/manage-liquidity/decrease-liquidity",permalink:"/docs/contracts/v4/quickstart/manage-liquidity/decrease-liquidity",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/contracts/v4/quickstart/02-manage-liquidity/03-decrease-liquidity.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Decrease Liquidity"},sidebar:"contractsSidebar",previous:{title:"Increase Liquidity",permalink:"/docs/contracts/v4/quickstart/manage-liquidity/increase-liquidity"},next:{title:"Collect Fees",permalink:"/docs/contracts/v4/quickstart/manage-liquidity/collect"}},s={},u=[{value:"Context",id:"context",level:3},{value:"Setup",id:"setup",level:3},{value:"1. Import and define <code>IPositionManager</code>",id:"1-import-and-define-ipositionmanager",level:3},{value:"2. Encode Actions",id:"2-encode-actions",level:3},{value:"3. Encoded Parameters",id:"3-encoded-parameters",level:3},{value:"4. Submit Call",id:"4-submit-call",level:3}],c={toc:u};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"context"},"Context"),(0,i.kt)("p",null,"Please note that ",(0,i.kt)("inlineCode",{parentName:"p"},"PositionManager")," is a command-based contract, where integrators will be encoding commands and their corresponding\nparameters."),(0,i.kt)("p",null,"Decreasing liquidity assumes the position already exists and the user wants to remove tokens from the position."),(0,i.kt)("h3",{id:"setup"},"Setup"),(0,i.kt)("p",null,"See the ",(0,i.kt)("a",{parentName:"p",href:"/docs/contracts/v4/quickstart/manage-liquidity/setup-liquidity"},"setup guide")),(0,i.kt)("h1",{id:"guide"},"Guide"),(0,i.kt)("p",null,"Below is a step-by-step guide for decreasing a position's liquidity, in ",(0,i.kt)("em",{parentName:"p"},"solidity"),"."),(0,i.kt)("h3",{id:"1-import-and-define-ipositionmanager"},"1. Import and define ",(0,i.kt)("inlineCode",{parentName:"h3"},"IPositionManager")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},'import {IPositionManager} from "v4-periphery/src/interfaces/IPositionManager.sol";\n\n// inside a contract, test, or foundry script:\nIPositionManager posm = IPositionManager(<address>);\n')),(0,i.kt)("h3",{id:"2-encode-actions"},"2. Encode Actions"),(0,i.kt)("p",null,"To decrease a position's liquidity, the first action must be:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"decrease")," operation - the subtraction of liquidity to an existing position.")),(0,i.kt)("p",null,"For ",(0,i.kt)("em",{parentName:"p"},"delta resolving")," operations, developers may need to choose between ",(0,i.kt)("inlineCode",{parentName:"p"},"TAKE_PAIR"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"CLOSE_CURRENCY"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"CLEAR_OR_TAKE")," actions."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"In Uniswap v4, fee revenue is automatically debited to a position on decreasing liquidity")),(0,i.kt)("p",null,"If decreasing the liquidity requires the transfer of both tokens:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"take pair")," - receives a pair of tokens, to decrease liquidity")),(0,i.kt)("p",null,"Otherwise:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"clear or take")," - if the token amount to-be-collected is below a threshold, opt to forfeit the dust. Otherwise, claim the tokens")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},'import {Actions} from "v4-periphery/src/libraries/Actions.sol";\n')),(0,i.kt)("p",null,"If both tokens need to be sent:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes memory actions = abi.encodePacked(uint8(Actions.DECREASE_LIQUIDITY), uint8(Actions.TAKE_PAIR));\n")),(0,i.kt)("p",null,"If converting fees to liquidity, forfeiting dust:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes memory actions = abi.encodePacked(uint8(Actions.DECREASE_LIQUIDITY), uint8(Actions.CLEAR_OR_TAKE), uint8(Actions.CLEAR_OR_TAKE));\n")),(0,i.kt)("h3",{id:"3-encoded-parameters"},"3. Encoded Parameters"),(0,i.kt)("p",null,"When taking pair:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes[] memory params = new bytes[](2);\n")),(0,i.kt)("p",null,"Otherwise:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes[] memory params = new bytes[](3);\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"DECREASE_LIQUIDITY")," action requires the following parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"tokenId")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("em",{parentName:"td"},"uint256")),(0,i.kt)("td",{parentName:"tr",align:null},"position identifier")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"liquidity")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("em",{parentName:"td"},"uint256")),(0,i.kt)("td",{parentName:"tr",align:null},"the amount of liquidity to remove")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"amount0Min")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("em",{parentName:"td"},"uint128")),(0,i.kt)("td",{parentName:"tr",align:null},"the minimum amount of currency0 liquidity msg.sender is willing to receive")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"amount1Min")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("em",{parentName:"td"},"uint128")),(0,i.kt)("td",{parentName:"tr",align:null},"the minimum amount of currency1 liquidity msg.sender is willing to receive")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"hookData")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("em",{parentName:"td"},"bytes")),(0,i.kt)("td",{parentName:"tr",align:null},"arbitrary data that will be forwarded to hook functions")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"params[0] = abi.encode(tokenId, liquidity, amount0Min, amount1Min, hookData);\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"TAKE_PAIR")," action requires the following parameters:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"currency0")," - ",(0,i.kt)("em",{parentName:"li"},"Currency"),", one of the tokens to be received"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"currency1")," - ",(0,i.kt)("em",{parentName:"li"},"Currency"),", the other token to be received"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"recipient")," - ",(0,i.kt)("em",{parentName:"li"},"Recipient"),", the recipient to receive the tokens")),(0,i.kt)("p",null,"In the above case, the parameter encoding is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"Currency currency0 = Currency.wrap(<tokenAddress1>); // tokenAddress1 = 0 for native ETH\nCurrency currency1 = Currency.wrap(<tokenAddress2>);\nparams[1] = abi.encode(currency0, currency1, recipient);\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"CLEAR_OR_TAKE")," action requires one ",(0,i.kt)("inlineCode",{parentName:"p"},"currency")," and:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"amountMax")," - ",(0,i.kt)("em",{parentName:"li"},"uint256"),", the maximum threshold to concede dust,\notherwise taking the dust. ")),(0,i.kt)("p",null,"In this case, the parameter encoding is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"params[1] = abi.encode(currency0, amount0Max);\nparams[2] = abi.encode(currency1, amount1Max);\n")),(0,i.kt)("h3",{id:"4-submit-call"},"4. Submit Call"),(0,i.kt)("p",null,"The entrypoint for all liquidity operations is ",(0,i.kt)("inlineCode",{parentName:"p"},"modifyLiquidities()"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 deadline = block.timestamp + 60;\n\nuint256 valueToPass = currency0.isAddressZero() ? amount0Max : 0;\n\nposm.modifyLiquidities{value: valueToPass}(\n    abi.encode(actions, params),\n    deadline\n);\n")))}d.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=i,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(k,o(o({ref:t},c),{},{components:n})):a.createElement(k,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);