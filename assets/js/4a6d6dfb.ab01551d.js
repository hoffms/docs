"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[8650],{28517:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=a(83117),r=(a(67294),a(3905));const l={},c="BalanceDelta",o={unversionedId:"contracts/v4/reference/core/types/BalanceDelta",id:"contracts/v4/reference/core/types/BalanceDelta",title:"BalanceDelta",description:"Git Source - Generated with forge doc",source:"@site/docs/contracts/v4/reference/core/types/BalanceDelta.md",sourceDirName:"contracts/v4/reference/core/types",slug:"/contracts/v4/reference/core/types/BalanceDelta",permalink:"/docs/contracts/v4/reference/core/types/BalanceDelta",editUrl:"https://github.com/hoffms/docs/tree/main/docs/contracts/v4/reference/core/types/BalanceDelta.md",tags:[],version:"current",frontMatter:{},sidebar:"contractsSidebar",previous:{title:"TransientStateLibrary",permalink:"/docs/contracts/v4/reference/core/libraries/transient-state-library"},next:{title:"BeforeSwapDelta",permalink:"/docs/contracts/v4/reference/core/types/BeforeSwapDelta"}},i={},s=[{value:"State Variables",id:"state-variables",level:2},{value:"ZERO_DELTA",id:"zero_delta",level:3},{value:"Functions",id:"functions",level:2},{value:"amount0",id:"amount0",level:3},{value:"amount1",id:"amount1",level:3}],p={toc:s};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"balancedelta"},"BalanceDelta"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-core/blob/80311e34080fee64b6fc6c916e9a51a437d0e482/src/types/BalanceDelta.sol"},"Git Source")," - Generated with ",(0,r.kt)("a",{parentName:"p",href:"https://book.getfoundry.sh/reference/forge/forge-doc"},"forge doc")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Two ",(0,r.kt)("inlineCode",{parentName:"em"},"int128")," values packed into a single ",(0,r.kt)("inlineCode",{parentName:"em"},"int256")," where the upper 128 bits represent the amount0\nand the lower 128 bits represent the amount1.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"type BalanceDelta is int256;\n")),(0,r.kt)("h1",{id:"balancedeltalibrary"},"BalanceDeltaLibrary"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-core/blob/80311e34080fee64b6fc6c916e9a51a437d0e482/src/types/BalanceDelta.sol"},"Git Source")),(0,r.kt)("p",null,"Library for getting the amount0 and amount1 deltas from the BalanceDelta type"),(0,r.kt)("h2",{id:"state-variables"},"State Variables"),(0,r.kt)("h3",{id:"zero_delta"},"ZERO_DELTA"),(0,r.kt)("p",null,"A BalanceDelta of 0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"BalanceDelta public constant ZERO_DELTA = BalanceDelta.wrap(0);\n")),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"amount0"},"amount0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function amount0(BalanceDelta balanceDelta) internal pure returns (int128 _amount0);\n")),(0,r.kt)("h3",{id:"amount1"},"amount1"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function amount1(BalanceDelta balanceDelta) internal pure returns (int128 _amount1);\n")),(0,r.kt)("h1",{id:"sub"},"sub"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-core/blob/80311e34080fee64b6fc6c916e9a51a437d0e482/src/types/BalanceDelta.sol"},"Git Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function sub(BalanceDelta a, BalanceDelta b) pure returns (BalanceDelta);\n")),(0,r.kt)("h1",{id:"tobalancedelta"},"toBalanceDelta"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-core/blob/80311e34080fee64b6fc6c916e9a51a437d0e482/src/types/BalanceDelta.sol"},"Git Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function toBalanceDelta(int128 _amount0, int128 _amount1) pure returns (BalanceDelta balanceDelta);\n")),(0,r.kt)("h1",{id:"eq"},"eq"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-core/blob/80311e34080fee64b6fc6c916e9a51a437d0e482/src/types/BalanceDelta.sol"},"Git Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function eq(BalanceDelta a, BalanceDelta b) pure returns (bool);\n")),(0,r.kt)("h1",{id:"add"},"add"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-core/blob/80311e34080fee64b6fc6c916e9a51a437d0e482/src/types/BalanceDelta.sol"},"Git Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function add(BalanceDelta a, BalanceDelta b) pure returns (BalanceDelta);\n")),(0,r.kt)("h1",{id:"neq"},"neq"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/uniswap/v4-core/blob/80311e34080fee64b6fc6c916e9a51a437d0e482/src/types/BalanceDelta.sol"},"Git Source")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function neq(BalanceDelta a, BalanceDelta b) pure returns (bool);\n")))}u.isMDXComponent=!0},3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),s=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(a),f=r,m=d["".concat(i,".").concat(f)]||d[f]||u[f]||l;return a?n.createElement(m,c(c({ref:t},p),{},{components:a})):n.createElement(m,c({ref:t},p))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,c=new Array(l);c[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var s=2;s<l;s++)c[s]=a[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);