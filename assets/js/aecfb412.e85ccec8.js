"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[9879],{71871:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(67294);function a(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},15236:(e,t,n)=>{n.d(t,{Z:()=>p});var r=n(83117),a=n(67294),i=n(5730),s=n(8656),o=n(86010);const l="tabItem_LplD";function c(e){var t,n;const{lazy:i,block:c,defaultValue:p,values:u,groupId:d,className:m}=e,g=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=u??g.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),b=(0,s.lx)(k,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===p?p:p??(null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)??(null==(n=g[0])?void 0:n.props.value);if(null!==h&&!k.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:f}=(0,s.UB)(),[N,y]=(0,a.useState)(h),x=[],{blockElementScrollPositionUntilNextRender:w}=(0,s.o5)();if(null!=d){const e=v[d];null!=e&&e!==N&&k.some((t=>t.value===e))&&y(e)}const T=e=>{const t=e.currentTarget,n=x.indexOf(t),r=k[n].value;r!==N&&(w(t),y(r),null!=d&&f(d,r))},C=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=x.indexOf(e.currentTarget)+1;n=x[t]||x[0];break}case"ArrowLeft":{const t=x.indexOf(e.currentTarget)-1;n=x[t]||x[x.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":c},m)},k.map((e=>{let{value:t,label:n,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>x.push(e),onKeyDown:C,onFocus:T,onClick:T},i,{className:(0,o.Z)("tabs__item",l,null==i?void 0:i.className,{"tabs__item--active":N===t})}),n??t)}))),i?(0,a.cloneElement)(g.filter((e=>e.props.value===N))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},g.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function p(e){const t=(0,i.Z)();return a.createElement(c,(0,r.Z)({key:String(t)},e))}},32537:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var r=n(83117),a=(n(67294),n(3905)),i=n(15236),s=n(71871);n(1841);const o={title:"TriggerKit - Browser Extension Guide",description:"Complete guide for integrating TriggerKit into browser extensions for automatic link detection",sidebar_position:2},l="\ud83d\udd0c TriggerKit Browser Extension Integration",c={unversionedId:"sdk/trigger-kit/trigger-ui-extension",id:"sdk/trigger-kit/trigger-ui-extension",title:"TriggerKit - Browser Extension Guide",description:"Complete guide for integrating TriggerKit into browser extensions for automatic link detection",source:"@site/docs/sdk/trigger-kit/trigger-ui-extension.mdx",sourceDirName:"sdk/trigger-kit",slug:"/sdk/trigger-kit/trigger-ui-extension",permalink:"/docs/sdk/trigger-kit/trigger-ui-extension",editUrl:"https://github.com/hoffms/docs/tree/main/docs/sdk/trigger-kit/trigger-ui-extension.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"TriggerKit - Browser Extension Guide",description:"Complete guide for integrating TriggerKit into browser extensions for automatic link detection",sidebar_position:2},sidebar:"sdkSidebar",previous:{title:"Browser Extension Integration",permalink:"/docs/sdk/trigger-kit/guides/browser-extension"},next:{title:"Technical Reference",permalink:"/docs/sdk/trigger-kit/reference/reference-overview"}},p={},u=[{value:"\u26a1 Quick Start",id:"-quick-start",level:2},{value:"\ud83c\udfd7\ufe0f Extension Architecture Overview",id:"\ufe0f-extension-architecture-overview",level:2},{value:"\ud83e\udde9 Core Components",id:"-core-components",level:3},{value:"\ud83d\udcc1 Project Structure",id:"-project-structure",level:2},{value:"\u2699\ufe0f Manifest Configuration",id:"\ufe0f-manifest-configuration",level:2},{value:"\ud83d\udccb Manifest V3 Setup",id:"-manifest-v3-setup",level:3},{value:"\ud83d\udd27 Background Script Implementation",id:"-background-script-implementation",level:2},{value:"\ud83e\udde0 Core Background Service",id:"-core-background-service",level:3},{value:"\ud83d\udcb3 Wallet Operations",id:"-wallet-operations",level:3},{value:"\ud83d\udcc4 Content Script Implementation",id:"-content-script-implementation",level:2},{value:"\ud83d\ude80 Main Content Script",id:"-main-content-script",level:3},{value:"\ud83c\udfaf Platform-Specific Observers",id:"-platform-specific-observers",level:3},{value:"\ud83d\udd0c Extension Adapter Implementation",id:"-extension-adapter-implementation",level:2},{value:"\ud83d\udd27 Popup Interface",id:"-popup-interface",level:2},{value:"\ud83d\udcc4 Popup HTML Structure",id:"-popup-html-structure",level:3},{value:"\u269b\ufe0f React Popup Component",id:"\ufe0f-react-popup-component",level:3},{value:"\ud83d\udc5b Wallet Selector Component",id:"-wallet-selector-component",level:3},{value:"\ud83c\udfd7\ufe0f Build Configuration",id:"\ufe0f-build-configuration",level:2},{value:"\ud83d\udce6 Webpack Setup",id:"-webpack-setup",level:3},{value:"\ud83d\udcdc Package.json Scripts",id:"-packagejson-scripts",level:3},{value:"\ud83d\udee0\ufe0f Development Workflow",id:"\ufe0f-development-workflow",level:2},{value:"\ud83d\ude80 Local Development",id:"-local-development",level:3},{value:"\ud83c\udf10 Testing on Different Platforms",id:"-testing-on-different-platforms",level:3},{value:"\ud83d\udd12 Security Best Practices",id:"-security-best-practices",level:2},{value:"\ud83d\udee1\ufe0f Content Security Policy",id:"\ufe0f-content-security-policy",level:3},{value:"\ud83d\udd10 Safe DOM Manipulation",id:"-safe-dom-manipulation",level:3},{value:"\ud83d\udc1b Troubleshooting",id:"-troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"\u26a1 Performance Optimization",id:"-performance-optimization",level:2},{value:"\ud83d\udc41\ufe0f Efficient DOM Observation",id:"\ufe0f-efficient-dom-observation",level:3},{value:"\ud83e\udde0 Memory Management",id:"-memory-management",level:3},{value:"\ud83d\udce6 Publishing &amp; Distribution",id:"-publishing--distribution",level:2},{value:"\ud83c\udfea Chrome Web Store",id:"-chrome-web-store",level:3},{value:"\ud83e\udd1d Resources &amp; Support",id:"-resources--support",level:2}],d={toc:u};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"-triggerkit-browser-extension-integration"},"\ud83d\udd0c TriggerKit Browser Extension Integration"),(0,a.kt)("p",null,"Build powerful browser extensions that automatically detect and enhance links with interactive blockchain MiniApps on Twitter/X, YouTube, and Twitch."),(0,a.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"\u26a0\ufe0f Beta Notice")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"TriggerKit is currently in active development. Some APIs and configurations may change in future releases as we refine the extension integration experience."))),(0,a.kt)("h2",{id:"-quick-start"},"\u26a1 Quick Start"),(0,a.kt)(i.Z,{mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"npm",label:"\ud83d\udce6 npm",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @sherrylabs/trigger-kit @sherrylabs/trigger-nucleo\n"))),(0,a.kt)(s.Z,{value:"yarn",label:"\ud83e\uddf6 Yarn",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @sherrylabs/trigger-kit @sherrylabs/trigger-nucleo\n"))),(0,a.kt)(s.Z,{value:"pnpm",label:"\ud83c\udfc3 pnpm",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add @sherrylabs/trigger-kit @sherrylabs/trigger-nucleo\n")))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\ufe0f-extension-architecture-overview"},"\ud83c\udfd7\ufe0f Extension Architecture Overview"),(0,a.kt)("p",null,"A complete TriggerKit extension consists of several key components:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},"graph TB\n    A[\ud83d\udcc4 Content Script] --\x3e B[\ud83d\udd27 Background Script]\n    B --\x3e C[\ud83d\udcb3 Wallet Communication]\n    A --\x3e D[\ud83d\udc41\ufe0f DOM Observer]\n    D --\x3e E[\ud83d\ude80 MiniApp Injection]\n    F[\u2699\ufe0f Popup Interface] --\x3e B\n    G[\ud83d\udccb Manifest Config] --\x3e A\n    G --\x3e B\n    G --\x3e F\n")),(0,a.kt)("h3",{id:"-core-components"},"\ud83e\udde9 Core Components"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Component"),(0,a.kt)("th",{parentName:"tr",align:null},"Purpose"),(0,a.kt)("th",{parentName:"tr",align:null},"Responsibilities"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"\ud83d\udd27 Background Script")),(0,a.kt)("td",{parentName:"tr",align:null},"Service worker"),(0,a.kt)("td",{parentName:"tr",align:null},"Wallet communication, transaction handling")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"\ud83d\udcc4 Content Script")),(0,a.kt)("td",{parentName:"tr",align:null},"Page injection"),(0,a.kt)("td",{parentName:"tr",align:null},"DOM observation, MiniApp injection")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"\u2699\ufe0f Popup Interface")),(0,a.kt)("td",{parentName:"tr",align:null},"User settings"),(0,a.kt)("td",{parentName:"tr",align:null},"Wallet configuration, preferences")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"\ud83d\udccb Manifest")),(0,a.kt)("td",{parentName:"tr",align:null},"Extension config"),(0,a.kt)("td",{parentName:"tr",align:null},"Permissions, script registration")))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"-project-structure"},"\ud83d\udcc1 Project Structure"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"my-triggerkit-extension/\n\u251c\u2500\u2500 \ud83d\udcc1 public/\n\u2502   \u251c\u2500\u2500 manifest.json\n\u2502   \u2514\u2500\u2500 \ud83d\udcc1 icons/\n\u2502       \u251c\u2500\u2500 icon-16.png\n\u2502       \u251c\u2500\u2500 icon-32.png\n\u2502       \u251c\u2500\u2500 icon-48.png\n\u2502       \u2514\u2500\u2500 icon-128.png\n\u251c\u2500\u2500 \ud83d\udcc1 src/\n\u2502   \u251c\u2500\u2500 \ud83d\udcc1 background/\n\u2502   \u2502   \u2514\u2500\u2500 background.ts\n\u2502   \u251c\u2500\u2500 \ud83d\udcc1 content/\n\u2502   \u2502   \u2514\u2500\u2500 content.ts\n\u2502   \u251c\u2500\u2500 \ud83d\udcc1 popup/\n\u2502   \u2502   \u251c\u2500\u2500 index.html\n\u2502   \u2502   \u251c\u2500\u2500 index.tsx\n\u2502   \u2502   \u2514\u2500\u2500 \ud83d\udcc1 components/\n\u2502   \u2514\u2500\u2500 \ud83d\udcc1 shared/\n\u2502       \u251c\u2500\u2500 types.ts\n\u2502       \u2514\u2500\u2500 utils.ts\n\u251c\u2500\u2500 \ud83d\udcc1 dist/\n\u2514\u2500\u2500 package.json\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\ufe0f-manifest-configuration"},"\u2699\ufe0f Manifest Configuration"),(0,a.kt)("h3",{id:"-manifest-v3-setup"},"\ud83d\udccb Manifest V3 Setup"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="public/manifest.json"',title:'"public/manifest.json"'},'{\n  "manifest_version": 3,\n  "name": "TriggerKit Extension",\n  "version": "1.0.0",\n  "description": "Enhance web links with interactive blockchain MiniApps",\n\n  "permissions": ["storage", "activeTab", "scripting"],\n\n  "host_permissions": [\n    "https://twitter.com/*",\n    "https://x.com/*",\n    "https://pro.x.com/*",\n    "https://www.youtube.com/*",\n    "https://*.twitch.tv/*",\n    "https://api.sherry.social/*"\n  ],\n\n  "background": {\n    "service_worker": "background.js",\n    "type": "module"\n  },\n\n  "content_scripts": [\n    {\n      "matches": [\n        "https://twitter.com/*",\n        "https://x.com/*",\n        "https://pro.x.com/*",\n        "https://www.youtube.com/*",\n        "https://*.twitch.tv/*"\n      ],\n      "js": ["content.js"],\n      "run_at": "document_idle",\n      "all_frames": false\n    }\n  ],\n\n  "action": {\n    "default_popup": "popup.html",\n    "default_title": "TriggerKit Settings",\n    "default_icon": {\n      "16": "icons/icon-16.png",\n      "32": "icons/icon-32.png",\n      "48": "icons/icon-48.png",\n      "128": "icons/icon-128.png"\n    }\n  },\n\n  "web_accessible_resources": [\n    {\n      "resources": ["icons/*", "assets/*"],\n      "matches": [\n        "https://twitter.com/*",\n        "https://x.com/*",\n        "https://pro.x.com/*",\n        "https://www.youtube.com/*",\n        "https://*.twitch.tv/*"\n      ]\n    }\n  ],\n\n  "icons": {\n    "16": "icons/icon-16.png",\n    "32": "icons/icon-32.png",\n    "48": "icons/icon-48.png",\n    "128": "icons/icon-128.png"\n  }\n}\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"-background-script-implementation"},"\ud83d\udd27 Background Script Implementation"),(0,a.kt)("h3",{id:"-core-background-service"},"\ud83e\udde0 Core Background Service"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/background/background.ts"',title:'"src/background/background.ts"'},"import { encodeFunctionData, createPublicClient, http } from 'viem';\nimport { avalanche, avalancheFuji, monadTestnet, celo, celoAlfajores } from 'viem/chains';\n\n// \ud83c\udf10 Supported blockchain networks\nconst chainMap: Record<number, any> = {\n  43114: avalanche,\n  43113: avalancheFuji,\n  10143: monadTestnet,\n  42220: celo,\n  44787: celoAlfajores,\n};\n\n// ...existing code...\n\n// \ud83d\udce8 Main message handler\nchrome.runtime.onMessage.addListener((message: ExtensionMessage, sender, sendResponse) => {\n  console.log('[Background] \ud83d\udce8 Received message:', message.type);\n\n  const tabId = sender.tab?.id;\n  if (!tabId) {\n    console.warn('[Background] \u26a0\ufe0f No tab ID available');\n    sendResponse({ error: 'No tab ID available' });\n    return false;\n  }\n\n  // Handle wallet selection queries\n  if (message.type === 'getSelectedWallet') {\n    chrome.storage.local.get(['selectedWallet']).then(storage => {\n      sendResponse(storage.selectedWallet || null);\n    });\n    return true; // Keep sendResponse alive\n  }\n\n  // Handle wallet communication\n  if (message.wallet && message.type) {\n    handleWalletCommunication(message.type, message.wallet, tabId, message.payload)\n      .then(result => sendResponse(result))\n      .catch(error => {\n        console.error('[Background] \u274c Error:', error);\n        sendResponse({ error: error.message });\n      });\n    return true; // Keep sendResponse alive\n  }\n\n  return false;\n});\n\n// ...existing code...\n")),(0,a.kt)("h3",{id:"-wallet-operations"},"\ud83d\udcb3 Wallet Operations"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/background/wallet-operations.ts"',title:'"src/background/wallet-operations.ts"'},"// \ud83d\udd17 Connect to MetaMask wallet\nasync function connectWallet(tabId: number) {\n  const [result] = await chrome.scripting.executeScript({\n    target: { tabId },\n    world: 'MAIN',\n    func: async () => {\n      if (!window.ethereum) {\n        return { error: 'MetaMask not found' };\n      }\n\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts',\n        });\n        return { address: accounts?.[0] ?? null };\n      } catch (error: any) {\n        return { error: error.message ?? 'Connection failed' };\n      }\n    },\n  });\n\n  return result?.result ?? { error: 'No result from connect operation' };\n}\n\n// ...existing code...\n\n// \ud83d\udcdd Write to smart contract\nasync function writeContract(tabId: number, payload: any) {\n  const { address, abi, functionName, args, value, data: providedData } = payload;\n\n  try {\n    // Encode function data if not provided\n    const encodedData =\n      providedData ??\n      encodeFunctionData({\n        abi: typeof abi === 'string' ? JSON.parse(abi) : abi,\n        functionName,\n        args,\n      });\n\n    // ...existing code...\n  } catch (error: any) {\n    return { error: error?.message ?? 'Unexpected error in write contract' };\n  }\n}\n\n// ...existing code...\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"-content-script-implementation"},"\ud83d\udcc4 Content Script Implementation"),(0,a.kt)("h3",{id:"-main-content-script"},"\ud83d\ude80 Main Content Script"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/content/content.ts"',title:'"src/content/content.ts"'},"import '@sherrylabs/slinks/index.css';\nimport { SherryExtensionAdapter, setupSlinksObserverEVM } from '@sherrylabs/slinks/ext';\nimport { setClientKey, MiniAppDirectory } from '@sherrylabs/slinks-core';\n\n// \ud83d\udd04 Initialize the TriggerKit observer system\nexport async function initializeTriggerKit() {\n  console.log('[TriggerKit] \ud83d\ude80 Initializing extension...');\n\n  // ...existing code...\n\n  // Initialize MiniApp directory\n  const directory = MiniAppDirectory.getInstance();\n  try {\n    await directory.init({\n      refreshInterval: 60 * 60 * 1000, // 1 hour\n      retryAttempts: 3,\n      retryDelay: 5000,\n    });\n    console.log('[TriggerKit] \u2705 MiniApp Directory initialized');\n  } catch (error) {\n    console.error('[TriggerKit] \u274c Failed to initialize directory:', error);\n    return;\n  }\n\n  // ...existing code...\n\n  // Create adapter and start observing\n  const adapter = new SherryExtensionAdapter();\n\n  // Auto-detect platform and setup appropriate observer\n  setupSlinksObserverEVM(adapter, {\n    enableTwitter: true,\n    enableYouTube: true,\n    enableTwitch: true,\n    debugMode: process.env.NODE_ENV === 'development',\n  });\n\n  console.log('[TriggerKit] \ud83d\udd0d Observers started successfully');\n}\n\n// ...existing code...\n")),(0,a.kt)("h3",{id:"-platform-specific-observers"},"\ud83c\udfaf Platform-Specific Observers"),(0,a.kt)(i.Z,{mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"auto",label:"\ud83e\udd16 Automatic Detection",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { setupSlinksObserverEVM } from '@sherrylabs/slinks/ext';\n\n// Automatically detects platform and sets up appropriate observer\nsetupSlinksObserverEVM(adapter, {\n  enableTwitter: true,\n  enableYouTube: true,\n  enableTwitch: true,\n  observerOptions: {\n    debounceMs: 500,\n    maxRetries: 3,\n    enableDeepObservation: true,\n  },\n});\n"))),(0,a.kt)(s.Z,{value:"twitter",label:"\ud83d\udc26 Twitter/X Only",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { setupTwitterObserverEVM } from '@sherrylabs/slinks/ext';\n\n// Twitter-specific observer for tweet link cards\nsetupTwitterObserverEVM(adapter, {\n  observeNewTweets: true,\n  observeReplies: true,\n  observeQuoteTweets: true,\n  debounceMs: 300,\n});\n"))),(0,a.kt)(s.Z,{value:"youtube",label:"\ud83d\udcfa YouTube Only",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { setupYoutubeObserverEVM } from '@sherrylabs/slinks/ext';\n\n// YouTube-specific observer for video descriptions\nsetupYoutubeObserverEVM(adapter, {\n  observeDescriptions: true,\n  observeComments: false, // Optional: observe comments\n  observePinnedComments: true,\n});\n"))),(0,a.kt)(s.Z,{value:"twitch",label:"\ud83c\udfae Twitch Only",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { setupTwitchObserverEVM } from '@sherrylabs/slinks/ext';\n\n// Twitch-specific observer for chat messages\nsetupTwitchObserverEVM(adapter, {\n  observePinnedMessages: true,\n  observeChatCommands: true,\n  observeChannelInfo: true,\n});\n")))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"-extension-adapter-implementation"},"\ud83d\udd0c Extension Adapter Implementation"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"SherryExtensionAdapter")," bridges the gap between MiniApps and browser extension APIs:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/shared/adapter.ts"',title:'"src/shared/adapter.ts"'},"import { SherryExtensionAdapter } from '@sherrylabs/slinks/ext';\n\n// Usage example - adapter is already implemented in the library\nconst adapter = new SherryExtensionAdapter();\n\n// \ud83d\udd17 Connect wallet\ntry {\n  const result = await adapter.connect();\n  if (result.address) {\n    console.log('\u2705 Connected to:', result.address);\n  }\n} catch (error) {\n  console.error('\u274c Connection failed:', error);\n}\n\n// \ud83d\udcdd Execute smart contract transaction\ntry {\n  const txResult = await adapter.writeContract({\n    address: '0x742d35Cc6438C0532925a3b762c7C46f83D8FA67',\n    abi: [...],\n    functionName: 'transfer',\n    args: ['0x...', BigInt('1000000000000000000')],\n    value: BigInt(0)\n  });\n  console.log('\ud83c\udf89 Transaction hash:', txResult.txHash);\n} catch (error) {\n  console.error('\u274c Transaction failed:', error);\n}\n\n// ...existing code...\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"-popup-interface"},"\ud83d\udd27 Popup Interface"),(0,a.kt)("h3",{id:"-popup-html-structure"},"\ud83d\udcc4 Popup HTML Structure"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="src/popup/index.html"',title:'"src/popup/index.html"'},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>TriggerKit Settings</title>\n    <style>\n      body {\n        width: 320px;\n        min-height: 400px;\n        margin: 0;\n        font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', sans-serif;\n      }\n    </style>\n  </head>\n  <body>\n    <div id="popup-root"></div>\n    <script src="popup.js"><\/script>\n  </body>\n</html>\n')),(0,a.kt)("h3",{id:"\ufe0f-react-popup-component"},"\u269b\ufe0f React Popup Component"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/popup/components/PopupApp.tsx"',title:'"src/popup/components/PopupApp.tsx"'},"import React, { useState, useEffect } from 'react';\nimport { WalletSelector } from './WalletSelector';\nimport { Settings } from './Settings';\nimport { About } from './About';\n\ntype Tab = 'wallet' | 'settings' | 'about';\n\nexport function PopupApp() {\n  const [activeTab, setActiveTab] = useState<Tab>('wallet');\n  const [selectedWallet, setSelectedWallet] = useState<string | null>(null);\n\n  // ...existing code...\n\n  return (\n    <div className=\"min-h-[400px] bg-white\">\n      {/* \ud83c\udfa8 Header */}\n      <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white p-4\">\n        <div className=\"flex items-center space-x-2\">\n          <img src=\"/icons/icon-32.png\" alt=\"TriggerKit\" className=\"w-6 h-6\" />\n          <h1 className=\"text-lg font-semibold\">TriggerKit</h1>\n        </div>\n        <p className=\"text-blue-100 text-sm mt-1\">\ud83d\ude80 Blockchain MiniApps</p>\n      </div>\n\n      {/* \ud83d\udcd1 Tab Navigation */}\n      <div className=\"flex border-b\">\n        {[\n          { id: 'wallet', label: '\ud83d\udc5b Wallet', title: 'Wallet' },\n          { id: 'settings', label: '\u2699\ufe0f Settings', title: 'Settings' },\n          { id: 'about', label: '\u2139\ufe0f About', title: 'About' },\n        ].map(tab => (\n          <button\n            key={tab.id}\n            onClick={() => setActiveTab(tab.id as Tab)}\n            className={`flex-1 py-3 px-4 text-sm font-medium transition-colors ${\n              activeTab === tab.id\n                ? 'text-blue-600 border-b-2 border-blue-600 bg-blue-50'\n                : 'text-gray-600 hover:text-gray-800 hover:bg-gray-50'\n            }`}\n            title={tab.title}\n          >\n            {tab.label}\n          </button>\n        ))}\n      </div>\n\n      {/* \ud83d\udccb Tab Content */}\n      <div className=\"p-4\">{/* ...existing code... */}</div>\n    </div>\n  );\n}\n")),(0,a.kt)("h3",{id:"-wallet-selector-component"},"\ud83d\udc5b Wallet Selector Component"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/popup/components/WalletSelector.tsx"',title:'"src/popup/components/WalletSelector.tsx"'},'import React from \'react\';\n\ninterface WalletOption {\n  id: string;\n  name: string;\n  icon: string;\n  description: string;\n  available: boolean;\n}\n\nconst wallets: WalletOption[] = [\n  {\n    id: \'metamask\',\n    name: \'MetaMask\',\n    icon: \'/icons/metamask.png\',\n    description: \'\ud83e\udd8a Connect using MetaMask wallet\',\n    available: true,\n  },\n  {\n    id: \'core\',\n    name: \'Core Wallet\',\n    icon: \'/icons/core.svg\',\n    description: \'\ud83d\udd25 Connect using Core wallet\',\n    available: false, // Coming soon\n  },\n];\n\ninterface WalletSelectorProps {\n  selectedWallet: string | null;\n  onWalletSelect: (wallet: string) => void;\n}\n\nexport function WalletSelector({ selectedWallet, onWalletSelect }: WalletSelectorProps) {\n  return (\n    <div>\n      <h3 className="text-lg font-semibold mb-4">\ud83d\udc5b Select Wallet</h3>\n\n      <div className="space-y-3">{/* ...existing code... */}</div>\n\n      {selectedWallet && (\n        <div className="mt-6 p-4 bg-green-50 border border-green-200 rounded-lg">\n          <div className="flex items-center space-x-2">\n            <svg className="w-5 h-5 text-green-600" fill="currentColor" viewBox="0 0 20 20">\n              <path\n                fillRule="evenodd"\n                d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"\n                clipRule="evenodd"\n              />\n            </svg>\n            <span className="text-green-800 font-medium">\u2705 Wallet Connected</span>\n          </div>\n          <p className="text-green-700 text-sm mt-1">\n            \ud83c\udf89 TriggerKit is now active on supported websites\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\ufe0f-build-configuration"},"\ud83c\udfd7\ufe0f Build Configuration"),(0,a.kt)("h3",{id:"-webpack-setup"},"\ud83d\udce6 Webpack Setup"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="webpack.config.js"',title:'"webpack.config.js"'},"const path = require('path');\nconst CopyPlugin = require('copy-webpack-plugin');\n\nmodule.exports = {\n  mode: 'production',\n  entry: {\n    background: './src/background/background.ts',\n    content: './src/content/content.ts',\n    popup: './src/popup/index.tsx',\n  },\n  output: {\n    path: path.resolve(__dirname, 'dist'),\n    filename: '[name].js',\n    clean: true,\n  },\n  // ...existing code...\n};\n")),(0,a.kt)("h3",{id:"-packagejson-scripts"},"\ud83d\udcdc Package.json Scripts"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  "name": "triggerkit-extension",\n  "version": "1.0.0",\n  "scripts": {\n    "build": "webpack --mode=production",\n    "dev": "webpack --mode=development --watch",\n    "clean": "rimraf dist",\n    "lint": "eslint src --ext .ts,.tsx",\n    "test": "jest"\n  }\n  // ...existing code...\n}\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"\ufe0f-development-workflow"},"\ud83d\udee0\ufe0f Development Workflow"),(0,a.kt)("h3",{id:"-local-development"},"\ud83d\ude80 Local Development"),(0,a.kt)(i.Z,{mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"setup",label:"\u2699\ufe0f Setup",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# Clone and setup\ngit clone <your-extension-repo>\ncd triggerkit-extension\nnpm install\n\n# Set environment variables\necho "VITE_SHERRY_CLIENT_KEY=your_key_here" > .env\n\n# Build extension\nnpm run build\n'))),(0,a.kt)(s.Z,{value:"testing",label:"\ud83e\uddea Testing",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# Development build with watch\nnpm run dev\n\n# Load extension in Chrome:\n# 1. Open chrome://extensions/\n# 2. Enable "Developer mode"\n# 3. Click "Load unpacked"\n# 4. Select the \'dist\' folder\n'))),(0,a.kt)(s.Z,{value:"debugging",label:"\ud83d\udc1b Debugging",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# View logs in Chrome DevTools:\n# - Background script: chrome://extensions/ \u2192 Inspect views\n# - Content script: F12 on website \u2192 Console\n# - Popup: Right-click extension icon \u2192 Inspect popup\n")))),(0,a.kt)("h3",{id:"-testing-on-different-platforms"},"\ud83c\udf10 Testing on Different Platforms"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Platform"),(0,a.kt)("th",{parentName:"tr",align:null},"Test URLs"),(0,a.kt)("th",{parentName:"tr",align:null},"Key Features"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"\ud83d\udc26 Twitter/X")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"https://twitter.com"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"https://x.com")),(0,a.kt)("td",{parentName:"tr",align:null},"Tweet link cards, replies")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"\ud83d\udcfa YouTube")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"https://youtube.com")),(0,a.kt)("td",{parentName:"tr",align:null},"Video descriptions, comments")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"\ud83c\udfae Twitch")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"https://twitch.tv")),(0,a.kt)("td",{parentName:"tr",align:null},"Chat pinned messages")))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"-security-best-practices"},"\ud83d\udd12 Security Best Practices"),(0,a.kt)("h3",{id:"\ufe0f-content-security-policy"},"\ud83d\udee1\ufe0f Content Security Policy"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="manifest.json"',title:'"manifest.json"'},'{\n  "content_security_policy": {\n    "extension_pages": "script-src \'self\'; object-src \'self\'"\n  }\n}\n')),(0,a.kt)("h3",{id:"-safe-dom-manipulation"},"\ud83d\udd10 Safe DOM Manipulation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"// \u2705 Safe: Use extension APIs\nchrome.scripting.executeScript({\n  target: { tabId },\n  world: 'MAIN',\n  func: () => {\n    /* safe code */\n  },\n});\n\n// \u274c Unsafe: Direct DOM injection\ndocument.body.innerHTML = userContent;\n\n// \u2705 Safe: Sanitize content\nconst safeElement = document.createElement('div');\nsafeElement.textContent = userContent;\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"-troubleshooting"},"\ud83d\udc1b Troubleshooting"),(0,a.kt)("h3",{id:"common-issues"},"Common Issues"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("strong",null,"\u274c Extension not loading")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Check manifest.json syntax"),(0,a.kt)("li",{parentName:"ol"},"Verify all file paths exist"),(0,a.kt)("li",{parentName:"ol"},"Check Chrome DevTools Console for errors"),(0,a.kt)("li",{parentName:"ol"},"Ensure proper permissions are set")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Validate manifest\njsonlint public/manifest.json\n\n# Check build output\nls -la dist/\n"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("strong",null,"\ud83d\udcc4 Content script not injecting")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Verify host_permissions in manifest"),(0,a.kt)("li",{parentName:"ol"},"Check URL patterns match exactly"),(0,a.kt)("li",{parentName:"ol"},"Ensure run_at timing is correct"),(0,a.kt)("li",{parentName:"ol"},"Check for CSP blocks")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// Debug content script injection\nconsole.log('[Content] \ud83d\udcc4 Script loaded on:', window.location.href);\n"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("strong",null,"\ud83d\udce8 Background script communication failing")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Check service worker is registered"),(0,a.kt)("li",{parentName:"ol"},"Verify message passing syntax"),(0,a.kt)("li",{parentName:"ol"},"Check for async/await issues"),(0,a.kt)("li",{parentName:"ol"},"Ensure sendResponse is called")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// Debug message passing\nchrome.runtime.onMessage.addListener((msg, sender, sendResponse) => {\n  console.log('[Background] \ud83d\udce8 Message received:', msg);\n  sendResponse({ status: 'received' });\n  return true; // Keep sendResponse alive\n});\n"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("strong",null,"\ud83d\ude80 MiniApps not appearing")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Check TriggerKit initialization"),(0,a.kt)("li",{parentName:"ol"},"Verify wallet is selected"),(0,a.kt)("li",{parentName:"ol"},"Check MiniApp Directory status"),(0,a.kt)("li",{parentName:"ol"},"Verify DOM observers are running")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// Debug observer status\nconsole.log('[TriggerKit] \ud83d\udc41\ufe0f Observers active:', {\n  twitter: !!window.twitterObserver,\n  youtube: !!window.youtubeObserver,\n  twitch: !!window.twitchObserver,\n});\n"))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"-performance-optimization"},"\u26a1 Performance Optimization"),(0,a.kt)("h3",{id:"\ufe0f-efficient-dom-observation"},"\ud83d\udc41\ufe0f Efficient DOM Observation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"// Use IntersectionObserver for performance\nconst observer = new IntersectionObserver(\n  entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        // Only process visible elements\n        processLinkForMiniApps(entry.target);\n      }\n    });\n  },\n  {\n    rootMargin: '100px', // Pre-load slightly outside viewport\n  },\n);\n\n// Debounce rapid changes\nconst debouncedProcessing = debounce(processNewLinks, 300);\n")),(0,a.kt)("h3",{id:"-memory-management"},"\ud83e\udde0 Memory Management"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"// Clean up observers when navigating away\nwindow.addEventListener('beforeunload', () => {\n  observers.forEach(observer => observer.disconnect());\n  clearInterval(refreshInterval);\n});\n\n// Use WeakMap for element associations\nconst elementMetadata = new WeakMap();\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"-publishing--distribution"},"\ud83d\udce6 Publishing & Distribution"),(0,a.kt)("h3",{id:"-chrome-web-store"},"\ud83c\udfea Chrome Web Store"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"\ud83c\udfa8 Prepare Assets")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Extension icons (16, 32, 48, 128px)"),(0,a.kt)("li",{parentName:"ul"},"Screenshots for store listing"),(0,a.kt)("li",{parentName:"ul"},"Privacy policy and terms"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"\ud83d\udcdd Store Listing")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "TriggerKit - Blockchain MiniApps",\n  "short_description": "Transform web links into interactive blockchain experiences",\n  "category": "Productivity",\n  "keywords": ["blockchain", "defi", "web3", "crypto"]\n}\n')))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"-resources--support"},"\ud83e\udd1d Resources & Support"),(0,a.kt)("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4 mt-6"},(0,a.kt)("div",{className:"border rounded-lg p-4"},(0,a.kt)("h3",{className:"font-semibold mb-2"},"\ud83d\udee0 Extension APIs"),(0,a.kt)("p",{className:"text-sm text-gray-600"},(0,a.kt)("a",{href:"https://developer.chrome.com/docs/extensions/",className:"text-blue-600 hover:underline"},"Chrome Extension Documentation"))),(0,a.kt)("div",{className:"border rounded-lg p-4"},(0,a.kt)("h3",{className:"font-semibold mb-2"},"\ud83d\udcda TriggerKit Docs"),(0,a.kt)("p",{className:"text-sm text-gray-600"},"Complete SDK reference and guides")),(0,a.kt)("div",{className:"border rounded-lg p-4"},(0,a.kt)("h3",{className:"font-semibold mb-2"},"\ud83d\udcac Developer Community"),(0,a.kt)("p",{className:"text-sm text-gray-600"},(0,a.kt)("a",{href:"https://discord.com/invite/sherry",className:"text-blue-600 hover:underline"},"Join our Discord"))),(0,a.kt)("div",{className:"border rounded-lg p-4"},(0,a.kt)("h3",{className:"font-semibold mb-2"},"\ud83d\udc1b Bug Reports"),(0,a.kt)("p",{className:"text-sm text-gray-600"},(0,a.kt)("a",{href:"https://github.com/orgs/SherryLabs/repositories",className:"text-blue-600 hover:underline"},"GitHub Issues")))))}m.isMDXComponent=!0}}]);