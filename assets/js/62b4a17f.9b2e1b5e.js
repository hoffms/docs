"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[3352],{21396:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>k,frontMatter:()=>i,metadata:()=>d,toc:()=>o});var a=n(83117),r=(n(67294),n(3905));const i={},l=void 0,d={unversionedId:"sdk/v3/reference/classes/Staker",id:"sdk/v3/reference/classes/Staker",title:"Staker",description:"@uniswap/v3-sdk / Exports / Staker",source:"@site/docs/sdk/v3/reference/classes/Staker.md",sourceDirName:"sdk/v3/reference/classes",slug:"/sdk/v3/reference/classes/Staker",permalink:"/docs/sdk/v3/reference/classes/Staker",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/sdk/v3/reference/classes/Staker.md",tags:[],version:"current",frontMatter:{},sidebar:"sdkSidebar",previous:{title:"SqrtPriceMath",permalink:"/docs/sdk/v3/reference/classes/SqrtPriceMath"},next:{title:"SwapMath",permalink:"/docs/sdk/v3/reference/classes/SwapMath"}},s={},o=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"Constructors",id:"constructors",level:3},{value:"Properties",id:"properties",level:3},{value:"Methods",id:"methods",level:3},{value:"Constructors",id:"constructors-1",level:2},{value:"constructor",id:"constructor",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties-1",level:2},{value:"INCENTIVE_KEY_ABI",id:"incentive_key_abi",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"INTERFACE",id:"interface",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"Methods",id:"methods-1",level:2},{value:"_encodeIncentiveKey",id:"_encodeincentivekey",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"collectRewards",id:"collectrewards",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"encodeClaim",id:"encodeclaim",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"encodeDeposit",id:"encodedeposit",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"withdrawToken",id:"withdrawtoken",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-7",level:4}],p={toc:o};function k(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"../README.md"},"@uniswap/v3-sdk")," / ",(0,r.kt)("a",{parentName:"p",href:"../modules.md"},"Exports")," / Staker"),(0,r.kt)("h1",{id:"class-staker"},"Class: Staker"),(0,r.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,r.kt)("h3",{id:"constructors"},"Constructors"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/sdk/v3/reference/classes/Staker#constructor"},"constructor"))),(0,r.kt)("h3",{id:"properties"},"Properties"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/sdk/v3/reference/classes/Staker#incentive_key_abi"},"INCENTIVE","_","KEY","_","ABI")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/sdk/v3/reference/classes/Staker#interface"},"INTERFACE"))),(0,r.kt)("h3",{id:"methods"},"Methods"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/sdk/v3/reference/classes/Staker#_encodeincentivekey"},"_","encodeIncentiveKey")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/sdk/v3/reference/classes/Staker#collectrewards"},"collectRewards")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/sdk/v3/reference/classes/Staker#encodeclaim"},"encodeClaim")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/sdk/v3/reference/classes/Staker#encodedeposit"},"encodeDeposit")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/sdk/v3/reference/classes/Staker#withdrawtoken"},"withdrawToken"))),(0,r.kt)("h2",{id:"constructors-1"},"Constructors"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,r.kt)("strong",{parentName:"p"},"new Staker"),"()"),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Uniswap/v3-sdk/blob/08a7c05/src/staker.ts#L72"},"staker.ts:72")),(0,r.kt)("h2",{id:"properties-1"},"Properties"),(0,r.kt)("h3",{id:"incentive_key_abi"},"INCENTIVE","_","KEY","_","ABI"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"INCENTIVE","_","KEY","_","ABI"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," = ",(0,r.kt)("inlineCode",{parentName:"p"},"'tuple(address rewardToken, address pool, uint256 startTime, uint256 endTime, address refundee)'")),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Uniswap/v3-sdk/blob/08a7c05/src/staker.ts#L73"},"staker.ts:73")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"interface"},"INTERFACE"),(0,r.kt)("p",null,"\u25aa ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"INTERFACE"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Interface")),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Uniswap/v3-sdk/blob/08a7c05/src/staker.ts#L70"},"staker.ts:70")),(0,r.kt)("h2",{id:"methods-1"},"Methods"),(0,r.kt)("h3",{id:"_encodeincentivekey"},"_","encodeIncentiveKey"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"_encodeIncentiveKey"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"incentiveKey"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"incentiveKey")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/sdk/v3/reference/interfaces/IncentiveKey"},(0,r.kt)("inlineCode",{parentName:"a"},"IncentiveKey"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"An ",(0,r.kt)("inlineCode",{parentName:"td"},"IncentiveKey")," which represents a unique staking program.")))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"An encoded IncentiveKey to be read by ethers"),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Uniswap/v3-sdk/blob/08a7c05/src/staker.ts#L194"},"staker.ts:194")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"collectrewards"},"collectRewards"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"collectRewards"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"incentiveKeys"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"options"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/sdk/v3/reference/interfaces/MethodParameters"},(0,r.kt)("inlineCode",{parentName:"a"},"MethodParameters"))),(0,r.kt)("p",null,"Note:  A ",(0,r.kt)("inlineCode",{parentName:"p"},"tokenId")," can be staked in many programs but to claim rewards and continue the program you must unstake, claim, and then restake."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"incentiveKeys")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/sdk/v3/reference/interfaces/IncentiveKey"},(0,r.kt)("inlineCode",{parentName:"a"},"IncentiveKey"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/docs/sdk/v3/reference/interfaces/IncentiveKey"},(0,r.kt)("inlineCode",{parentName:"a"},"IncentiveKey")),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"An IncentiveKey or array of IncentiveKeys that ",(0,r.kt)("inlineCode",{parentName:"td"},"tokenId")," is staked in. Input an array of IncentiveKeys to claim rewards for each program.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/sdk/v3/reference/interfaces/ClaimOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"ClaimOptions"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"ClaimOptions to specify tokenId, recipient, and amount wanting to collect. Note that you can only specify one amount and one recipient across the various programs if you are collecting from multiple programs at once.")))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/sdk/v3/reference/interfaces/MethodParameters"},(0,r.kt)("inlineCode",{parentName:"a"},"MethodParameters"))),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Uniswap/v3-sdk/blob/08a7c05/src/staker.ts#L107"},"staker.ts:107")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"encodeclaim"},"encodeClaim"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("strong",{parentName:"p"},"encodeClaim"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"incentiveKey"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"options"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,r.kt)("p",null,"To claim rewards, must unstake and then claim."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"incentiveKey")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/sdk/v3/reference/interfaces/IncentiveKey"},(0,r.kt)("inlineCode",{parentName:"a"},"IncentiveKey"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The unique identifier of a staking program.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/sdk/v3/reference/interfaces/ClaimOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"ClaimOptions"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Options for producing the calldata to claim. Can't claim unless you unstake.")))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,r.kt)("p",null,"The calldatas for 'unstakeToken' and 'claimReward'."),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Uniswap/v3-sdk/blob/08a7c05/src/staker.ts#L82"},"staker.ts:82")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"encodedeposit"},"encodeDeposit"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"encodeDeposit"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"incentiveKeys"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"incentiveKeys")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/sdk/v3/reference/interfaces/IncentiveKey"},(0,r.kt)("inlineCode",{parentName:"a"},"IncentiveKey"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/docs/sdk/v3/reference/interfaces/IncentiveKey"},(0,r.kt)("inlineCode",{parentName:"a"},"IncentiveKey")),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A single IncentiveKey or array of IncentiveKeys to be encoded and used in the data parameter in ",(0,r.kt)("inlineCode",{parentName:"td"},"safeTransferFrom"))))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"An IncentiveKey as a string"),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Uniswap/v3-sdk/blob/08a7c05/src/staker.ts#L173"},"staker.ts:173")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"withdrawtoken"},"withdrawToken"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,r.kt)("strong",{parentName:"p"},"withdrawToken"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"incentiveKeys"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"withdrawOptions"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/sdk/v3/reference/interfaces/MethodParameters"},(0,r.kt)("inlineCode",{parentName:"a"},"MethodParameters"))),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"incentiveKeys")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/sdk/v3/reference/interfaces/IncentiveKey"},(0,r.kt)("inlineCode",{parentName:"a"},"IncentiveKey"))," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/docs/sdk/v3/reference/interfaces/IncentiveKey"},(0,r.kt)("inlineCode",{parentName:"a"},"IncentiveKey")),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A list of incentiveKeys to unstake from. Should include all incentiveKeys (unique staking programs) that ",(0,r.kt)("inlineCode",{parentName:"td"},"options.tokenId")," is staked in.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"withdrawOptions")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules.md#fullwithdrawoptions"},(0,r.kt)("inlineCode",{parentName:"a"},"FullWithdrawOptions"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Options for producing claim calldata and withdraw calldata. Can't withdraw without unstaking all programs for ",(0,r.kt)("inlineCode",{parentName:"td"},"tokenId"),".")))),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/sdk/v3/reference/interfaces/MethodParameters"},(0,r.kt)("inlineCode",{parentName:"a"},"MethodParameters"))),(0,r.kt)("p",null,"Calldata for unstaking, claiming, and withdrawing."),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Uniswap/v3-sdk/blob/08a7c05/src/staker.ts#L136"},"staker.ts:136")))}k.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),o=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=o(e.components);return a.createElement(s.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),c=o(n),m=r,u=c["".concat(s,".").concat(m)]||c[m]||k[m]||i;return n?a.createElement(u,l(l({ref:t},p),{},{components:n})):a.createElement(u,l({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var o=2;o<i;o++)l[o]=n[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"}}]);