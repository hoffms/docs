"use strict";(self.webpackChunk_uniswap_docs=self.webpackChunk_uniswap_docs||[]).push([[65878],{26732:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>u,toc:()=>s});var r=n(83117),a=(n(67294),n(3905));const o={id:"pair",title:"Pair"},i=void 0,u={unversionedId:"sdk/v2/reference/pair",id:"sdk/v2/reference/pair",title:"Pair",description:"The Pair entity represents a Uniswap pair with a balance of each of its pair tokens.",source:"@site/docs/sdk/v2/reference/02-pair.md",sourceDirName:"sdk/v2/reference",slug:"/sdk/v2/reference/pair",permalink:"/docs/sdk/v2/reference/pair",editUrl:"https://github.com/uniswap/uniswap-docs/tree/main/docs/sdk/v2/reference/02-pair.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"pair",title:"Pair"},sidebar:"sdkSidebar",previous:{title:"Getting Started",permalink:"/docs/sdk/v2/reference/getting-started"},next:{title:"Route",permalink:"/docs/sdk/v2/reference/route"}},l={},s=[{value:"getAddress",id:"getaddress",level:2},{value:"liquidityToken",id:"liquiditytoken",level:2},{value:"token0",id:"token0",level:2},{value:"token1",id:"token1",level:2},{value:"reserve0",id:"reserve0",level:2},{value:"reserve1",id:"reserve1",level:2},{value:"reserveOf",id:"reserveof",level:2},{value:"getOutputAmount",id:"getoutputamount",level:2},{value:"getInputAmount",id:"getinputamount",level:2},{value:"getLiquidityMinted",id:"getliquidityminted",level:2},{value:"getLiquidityValue",id:"getliquidityvalue",level:2}],p={toc:s};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"constructor(tokenAmountA: CurrencyAmount, tokenAmountB: CurrencyAmount)\n")),(0,a.kt)("p",null,"The Pair entity represents a Uniswap pair with a balance of each of its pair tokens."),(0,a.kt)("h1",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Pair } from '@uniswap/sdk-core'\nimport {ChainId, Token, CurrencyAmount } from '@uniswap/v2-sdk'\n\nconst HOT = new Token(ChainId.MAINNET, '0xc0FFee0000000000000000000000000000000000', 18, 'HOT', 'Caffeine')\nconst NOT = new Token(ChainId.MAINNET, '0xDeCAf00000000000000000000000000000000000', 18, 'NOT', 'Caffeine')\n\nconst pair = new Pair(CurrencyAmount.fromRawAmount(HOT, '2000000000000000000'), CurrencyAmount.fromRawAmount(NOT, '1000000000000000000'))\n")),(0,a.kt)("h1",{id:"static-methods"},"Static Methods"),(0,a.kt)("h2",{id:"getaddress"},"getAddress"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getAddress(tokenA: Token, tokenB: Token): string\n")),(0,a.kt)("p",null,"Computes the pair address for the passed ",(0,a.kt)("a",{parentName:"p",href:"token"},"Tokens"),". See ",(0,a.kt)("a",{parentName:"p",href:"../../../contracts/v2/guides/smart-contract-integration/getting-pair-addresses"},"Pair Addresses"),"."),(0,a.kt)("h1",{id:"properties"},"Properties"),(0,a.kt)("h2",{id:"liquiditytoken"},"liquidityToken"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"liquidityToken: Token\n")),(0,a.kt)("p",null,"A Token representing the liquidity token for the pair. See ",(0,a.kt)("a",{parentName:"p",href:"../../../contracts/v2/reference/smart-contracts/pair-erc-20"},"Pair (ERC-20)"),"."),(0,a.kt)("h2",{id:"token0"},"token0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"token0: Token\n")),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"../../../contracts/v2/reference/smart-contracts/pair#token0"},"Token0"),"."),(0,a.kt)("h2",{id:"token1"},"token1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"token1: Token\n")),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"../../../contracts/v2/reference/smart-contracts/pair#token1"},"Token1"),"."),(0,a.kt)("h2",{id:"reserve0"},"reserve0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"reserve0: CurrencyAmount\n")),(0,a.kt)("p",null,"The reserve of token0."),(0,a.kt)("h2",{id:"reserve1"},"reserve1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"reserve1: CurrencyAmount\n")),(0,a.kt)("p",null,"The reserve of token1."),(0,a.kt)("h1",{id:"methods"},"Methods"),(0,a.kt)("h2",{id:"reserveof"},"reserveOf"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"reserveOf(token: Token): CurrencyAmount\n")),(0,a.kt)("p",null,"Returns reserve0 or reserve1, depending on whether token0 or token1 is passed in."),(0,a.kt)("h2",{id:"getoutputamount"},"getOutputAmount"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getOutputAmount(inputAmount: CurrencyAmount): [CurrencyAmount, Pair]\n")),(0,a.kt)("p",null,"Pricing function for exact input amounts. Returns maximum output amount based on current reserves and the new Pair that would exist if the trade were executed."),(0,a.kt)("h2",{id:"getinputamount"},"getInputAmount"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getInputAmount(outputAmount: CurrencyAmount): [CurrencyAmount, Pair]\n")),(0,a.kt)("p",null,"Pricing function for exact output amounts. Returns minimum input amount based on current reserves and the new Pair that would exist if the trade were executed."),(0,a.kt)("h2",{id:"getliquidityminted"},"getLiquidityMinted"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getLiquidityMinted(totalSupply: CurrencyAmount, tokenAmountA: CurrencyAmount, tokenAmountB: CurrencyAmount): CurrencyAmount\n")),(0,a.kt)("p",null,"Calculates the exact amount of liquidity tokens minted from a given amount of token0 and token1."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"totalSupply must be looked up on-chain."),(0,a.kt)("li",{parentName:"ul"},"The value returned from this function ",(0,a.kt)("em",{parentName:"li"},"cannot")," be used as an input to getLiquidityValue.")),(0,a.kt)("h2",{id:"getliquidityvalue"},"getLiquidityValue"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getLiquidityValue(\n  token: Token,\n  totalSupply: CurrencyAmount,\n  liquidity: CurrencyAmount,\n  feeOn: boolean = false,\n  kLast?: BigintIsh\n): CurrencyAmount\n")),(0,a.kt)("p",null,"Calculates the exact amount of token0 or token1 that the given amount of liquidity tokens represent."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"totalSupply must be looked up on-chain."),(0,a.kt)("li",{parentName:"ul"},"If the protocol charge is on, feeOn must be set to true, and kLast must be provided from an on-chain lookup."),(0,a.kt)("li",{parentName:"ul"},"Values returned from this function ",(0,a.kt)("em",{parentName:"li"},"cannot")," be used as inputs to getLiquidityMinted.")))}c.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,k=d["".concat(l,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(k,i(i({ref:t},p),{},{components:n})):r.createElement(k,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);